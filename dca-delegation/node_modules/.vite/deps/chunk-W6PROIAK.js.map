{
  "version": 3,
  "sources": ["../../lodash/lodash.js", "../../@metamask/utils/node_modules/semver/internal/constants.js", "../../@metamask/utils/node_modules/semver/internal/debug.js", "../../@metamask/utils/node_modules/semver/internal/re.js", "../../@metamask/utils/node_modules/semver/internal/parse-options.js", "../../@metamask/utils/node_modules/semver/internal/identifiers.js", "../../@metamask/utils/node_modules/semver/classes/semver.js", "../../@metamask/utils/node_modules/semver/functions/parse.js", "../../@metamask/utils/node_modules/semver/functions/valid.js", "../../@metamask/utils/node_modules/semver/functions/clean.js", "../../@metamask/utils/node_modules/semver/functions/inc.js", "../../@metamask/utils/node_modules/semver/functions/diff.js", "../../@metamask/utils/node_modules/semver/functions/major.js", "../../@metamask/utils/node_modules/semver/functions/minor.js", "../../@metamask/utils/node_modules/semver/functions/patch.js", "../../@metamask/utils/node_modules/semver/functions/prerelease.js", "../../@metamask/utils/node_modules/semver/functions/compare.js", "../../@metamask/utils/node_modules/semver/functions/rcompare.js", "../../@metamask/utils/node_modules/semver/functions/compare-loose.js", "../../@metamask/utils/node_modules/semver/functions/compare-build.js", "../../@metamask/utils/node_modules/semver/functions/sort.js", "../../@metamask/utils/node_modules/semver/functions/rsort.js", "../../@metamask/utils/node_modules/semver/functions/gt.js", "../../@metamask/utils/node_modules/semver/functions/lt.js", "../../@metamask/utils/node_modules/semver/functions/eq.js", "../../@metamask/utils/node_modules/semver/functions/neq.js", "../../@metamask/utils/node_modules/semver/functions/gte.js", "../../@metamask/utils/node_modules/semver/functions/lte.js", "../../@metamask/utils/node_modules/semver/functions/cmp.js", "../../@metamask/utils/node_modules/semver/functions/coerce.js", "../../@metamask/utils/node_modules/semver/internal/lrucache.js", "../../@metamask/utils/node_modules/semver/classes/range.js", "../../@metamask/utils/node_modules/semver/classes/comparator.js", "../../@metamask/utils/node_modules/semver/functions/satisfies.js", "../../@metamask/utils/node_modules/semver/ranges/to-comparators.js", "../../@metamask/utils/node_modules/semver/ranges/max-satisfying.js", "../../@metamask/utils/node_modules/semver/ranges/min-satisfying.js", "../../@metamask/utils/node_modules/semver/ranges/min-version.js", "../../@metamask/utils/node_modules/semver/ranges/valid.js", "../../@metamask/utils/node_modules/semver/ranges/outside.js", "../../@metamask/utils/node_modules/semver/ranges/gtr.js", "../../@metamask/utils/node_modules/semver/ranges/ltr.js", "../../@metamask/utils/node_modules/semver/ranges/intersects.js", "../../@metamask/utils/node_modules/semver/ranges/simplify.js", "../../@metamask/utils/node_modules/semver/ranges/subset.js", "../../@metamask/utils/node_modules/semver/index.js", "../../@metamask/superstruct/src/error.ts", "../../@metamask/superstruct/src/utils.ts", "../../@metamask/superstruct/src/struct.ts", "../../@metamask/superstruct/src/structs/utilities.ts", "../../@metamask/superstruct/src/structs/types.ts", "../../@metamask/superstruct/src/structs/coercions.ts", "../../@metamask/superstruct/src/structs/refinements.ts", "../../@metamask/superstruct/src/index.ts", "../../pony-cause/lib/error-with-cause.js", "../../pony-cause/lib/helpers.js", "../../pony-cause/index.js", "../../@metamask/utils/src/misc.ts", "../../@metamask/utils/src/errors.ts", "../../@metamask/utils/src/assert.ts", "../../@metamask/utils/src/base64.ts", "../../@scure/base/index.ts", "../../@metamask/utils/src/hex.ts", "../../@metamask/utils/src/bytes.ts", "../../@metamask/utils/src/superstruct.ts", "../../@metamask/utils/src/caip-types.ts", "../../@metamask/utils/src/checksum.ts", "../../@metamask/utils/src/coercers.ts", "../../@metamask/utils/src/collections.ts", "../../@metamask/utils/dist/encryption-types.cjs", "../../@metamask/utils/src/json.ts", "../../@metamask/utils/dist/keyring.cjs", "../../@metamask/utils/src/logging.ts", "../../@metamask/utils/src/number.ts", "../../@metamask/utils/dist/opaque.cjs", "../../@metamask/utils/src/promise.ts", "../../@metamask/utils/src/time.ts", "../../@metamask/utils/dist/transaction-types.cjs", "../../@metamask/utils/src/versions.ts", "../../@metamask/utils/src/unitsConversion.ts", "../../@metamask/utils/src/index.ts", "../../@metamask/abi-utils/src/errors.ts", "../../@metamask/abi-utils/src/iterator.ts", "../../@metamask/abi-utils/src/utils/buffer.ts", "../../@metamask/abi-utils/src/utils/index.ts", "../../@metamask/abi-utils/src/parsers/address.ts", "../../@metamask/abi-utils/src/parsers/fixed-bytes.ts", "../../@metamask/abi-utils/src/parsers/tuple.ts", "../../@metamask/abi-utils/src/parsers/array.ts", "../../@metamask/abi-utils/src/parsers/number.ts", "../../@metamask/abi-utils/src/parsers/bool.ts", "../../@metamask/abi-utils/src/parsers/bytes.ts", "../../@metamask/abi-utils/src/parsers/function.ts", "../../@metamask/abi-utils/dist/parsers/parser.js", "../../@metamask/abi-utils/src/parsers/string.ts", "../../@metamask/abi-utils/src/parsers/index.ts", "../../@metamask/abi-utils/src/packer.ts", "../../@metamask/abi-utils/src/abi.ts", "../../@metamask/abi-utils/dist/types/abi.js", "../../@metamask/abi-utils/src/types/index.ts", "../../@metamask/abi-utils/src/index.ts", "../../@metamask/superstruct/src/error.ts", "../../@metamask/superstruct/src/utils.ts", "../../@metamask/superstruct/src/struct.ts", "../../@metamask/superstruct/src/structs/utilities.ts", "../../@metamask/superstruct/src/structs/types.ts", "../../@metamask/superstruct/src/structs/coercions.ts", "../../@metamask/superstruct/src/structs/refinements.ts", "../../@metamask/utils/src/misc.ts", "../../@metamask/utils/src/assert.ts", "../../@metamask/utils/src/base64.ts", "../../@metamask/utils/src/hex.ts", "../../@metamask/utils/src/bytes.ts", "../../@metamask/utils/src/superstruct.ts", "../../@metamask/utils/src/caip-types.ts", "../../@metamask/utils/src/checksum.ts", "../../@metamask/utils/src/coercers.ts", "../../@metamask/utils/src/collections.ts", "../../@metamask/utils/src/json.ts", "../../@metamask/utils/src/logging.ts", "../../@metamask/utils/src/time.ts", "../../@metamask/utils/src/versions.ts", "../../@metamask/utils/src/unitsConversion.ts", "../../@metamask/delegation-core/src/returns.ts", "../../@metamask/delegation-core/src/utils.ts", "../../@metamask/delegation-core/src/caveats/valueLte.ts", "../../@metamask/delegation-core/src/caveats/timestamp.ts", "../../@metamask/delegation-core/src/caveats/nativeTokenPeriodTransfer.ts", "../../@metamask/delegation-core/src/caveats/exactCalldata.ts", "../../@metamask/delegation-core/src/caveats/nativeTokenStreaming.ts", "../../@metamask/delegation-core/src/caveats/erc20Streaming.ts", "../../@metamask/delegation-core/src/caveats/erc20TokenPeriodTransfer.ts", "../../@metamask/delegation-core/src/caveats/nonce.ts", "../../@metamask/delegation-core/src/delegation.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/caveatBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/types.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/allowedCalldataBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/allowedMethodsBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/allowedTargetsBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/argsEqualityCheckBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/blockNumberBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/deployedBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/erc1155BalanceChangeBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/erc20BalanceChangeBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/erc20PeriodTransferBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/erc20StreamingBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/erc20TransferAmountBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/erc721BalanceChangeBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/erc721TransferBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/exactCalldataBatchBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/exactCalldataBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/exactExecutionBatchBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/exactExecutionBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/idBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/limitedCallsBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/multiTokenPeriodBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/nativeBalanceChangeBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/nativeTokenPaymentBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/nativeTokenPeriodTransferBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/nativeTokenStreamingBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/nativeTokenTransferAmountBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/nonceBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/ownershipTransferBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/redeemerBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/specificActionERC20TransferBatchBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/timestampBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/valueLteBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/coreCaveatBuilder.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/erc20PeriodicScope.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/erc20StreamingScope.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/erc20TransferScope.ts", "../../@metamask/delegation-toolkit/src/utils.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/erc721Scope.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/functionCallScope.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/nativeTokenPeriodicScope.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/nativeTokenStreamingScope.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/nativeTokenTransferScope.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/ownershipScope.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/scope/index.ts", "../../@metamask/delegation-toolkit/src/caveatBuilder/resolveCaveats.ts", "../../@metamask/delegation-toolkit/src/caveats.ts", "../../@metamask/delegation-toolkit/src/delegation.ts", "../../@metamask/delegation-abis/src/formatted/Address.ts", "../../@metamask/delegation-abis/src/formatted/AllowedMethodsEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/AllowedTargetsEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/Base64.ts", "../../@metamask/delegation-abis/src/formatted/Base64URL.ts", "../../@metamask/delegation-abis/src/formatted/ArgsEqualityCheckEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/Context.ts", "../../@metamask/delegation-abis/src/formatted/Create2.ts", "../../@metamask/delegation-abis/src/formatted/CaveatEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/DeleGatorCore.ts", "../../@metamask/delegation-abis/src/formatted/DelegationMetaSwapAdapter.ts", "../../@metamask/delegation-abis/src/formatted/BlockNumberEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/DeployedEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/BitMaps.ts", "../../@metamask/delegation-abis/src/formatted/EIP7702DeleGatorCore.ts", "../../@metamask/delegation-abis/src/formatted/ERC1155BalanceChangeEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/DelegationManager.ts", "../../@metamask/delegation-abis/src/formatted/ECDSA.ts", "../../@metamask/delegation-abis/src/formatted/EIP712.ts", "../../@metamask/delegation-abis/src/formatted/ERC1967Proxy.ts", "../../@metamask/delegation-abis/src/formatted/AllowedCalldataEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/ERC1271Lib.ts", "../../@metamask/delegation-abis/src/formatted/ERC20TransferAmountEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/ERC20PeriodTransferEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/ERC165.ts", "../../@metamask/delegation-abis/src/formatted/EncoderLib.ts", "../../@metamask/delegation-abis/src/formatted/ERC1967Utils.ts", "../../@metamask/delegation-abis/src/formatted/EIP7702StatelessDeleGator.ts", "../../@metamask/delegation-abis/src/formatted/ERC20BalanceChangeEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/Exec.ts", "../../@metamask/delegation-abis/src/formatted/ERC721BalanceChangeEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/ExecutionLib.ts", "../../@metamask/delegation-abis/src/formatted/ERC721TransferEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/ERC20StreamingEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/IAccount.ts", "../../@metamask/delegation-abis/src/formatted/ExactCalldataEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/IAggregator.ts", "../../@metamask/delegation-abis/src/formatted/ExactExecutionEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/IBeacon.ts", "../../@metamask/delegation-abis/src/formatted/IDelegationManager.ts", "../../@metamask/delegation-abis/src/formatted/EntryPoint.ts", "../../@metamask/delegation-abis/src/formatted/IAccountExecute.ts", "../../@metamask/delegation-abis/src/formatted/IERC1155Receiver.ts", "../../@metamask/delegation-abis/src/formatted/IERC1155.ts", "../../@metamask/delegation-abis/src/formatted/ICaveatEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/IERC1363.ts", "../../@metamask/delegation-abis/src/formatted/IERC173.ts", "../../@metamask/delegation-abis/src/formatted/IERC165.ts", "../../@metamask/delegation-abis/src/formatted/ExactCalldataBatchEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/IERC1271.ts", "../../@metamask/delegation-abis/src/formatted/IDeleGatorCore.ts", "../../@metamask/delegation-abis/src/formatted/ExactExecutionBatchEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/ExecutionHelper.ts", "../../@metamask/delegation-abis/src/formatted/IERC5267.ts", "../../@metamask/delegation-abis/src/formatted/IERC20.ts", "../../@metamask/delegation-abis/src/formatted/IERC721.ts", "../../@metamask/delegation-abis/src/formatted/IERC7579Account.ts", "../../@metamask/delegation-abis/src/formatted/IPaymaster.ts", "../../@metamask/delegation-abis/src/formatted/IStakeManager.ts", "../../@metamask/delegation-abis/src/formatted/IEntryPoint.ts", "../../@metamask/delegation-abis/src/formatted/IMetaSwap.ts", "../../@metamask/delegation-abis/src/formatted/HybridDeleGator.ts", "../../@metamask/delegation-abis/src/formatted/MessageHashUtils.ts", "../../@metamask/delegation-abis/src/formatted/IdEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/LimitedCallsEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/INonceManager.ts", "../../@metamask/delegation-abis/src/formatted/ModeLib.ts", "../../@metamask/delegation-abis/src/formatted/NativeTokenStreamingEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/MockFailureCaveatEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/Math.ts", "../../@metamask/delegation-abis/src/formatted/LogicalOrWrapperEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/MockCaveatEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/NativeTokenPaymentEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/NativeTokenPeriodTransferEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/NonceManager.ts", "../../@metamask/delegation-abis/src/formatted/NonceEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/MultiTokenPeriodEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/NativeBalanceChangeEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/Ownable.ts", "../../@metamask/delegation-abis/src/formatted/P256VerifierLib.ts", "../../@metamask/delegation-abis/src/formatted/IERC721Receiver.ts", "../../@metamask/delegation-abis/src/formatted/Initializable.ts", "../../@metamask/delegation-abis/src/formatted/Ownable2Step.ts", "../../@metamask/delegation-abis/src/formatted/IERC7821.ts", "../../@metamask/delegation-abis/src/formatted/Pausable.ts", "../../@metamask/delegation-abis/src/formatted/NativeTokenTransferAmountEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/P256SCLVerifierLib.ts", "../../@metamask/delegation-abis/src/formatted/SCL_Wrapper.ts", "../../@metamask/delegation-abis/src/formatted/OwnershipTransferEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/SafeERC20.ts", "../../@metamask/delegation-abis/src/formatted/SenderCreator.ts", "../../@metamask/delegation-abis/src/formatted/ReentrancyGuard.ts", "../../@metamask/delegation-abis/src/formatted/SafeCast.ts", "../../@metamask/delegation-abis/src/formatted/SignedMath.ts", "../../@metamask/delegation-abis/src/formatted/ShortStrings.ts", "../../@metamask/delegation-abis/src/formatted/SimpleFactory.ts", "../../@metamask/delegation-abis/src/formatted/RedeemerEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/StorageSlot.ts", "../../@metamask/delegation-abis/src/formatted/SpecificActionERC20TransferBatchEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/StakeManager.ts", "../../@metamask/delegation-abis/src/formatted/Strings.ts", "../../@metamask/delegation-abis/src/formatted/WebAuthn.ts", "../../@metamask/delegation-abis/src/formatted/IERC1822Proxiable.ts", "../../@metamask/delegation-abis/src/formatted/ValueLteEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/UserOperationLib.ts", "../../@metamask/delegation-abis/src/formatted/UUPSUpgradeable.ts", "../../@metamask/delegation-abis/src/formatted/TimestampEnforcer.ts", "../../@metamask/delegation-abis/src/formatted/Proxy.ts", "../../@metamask/delegation-abis/src/formatted/Panic.ts", "../../@metamask/delegation-abis/src/formatted/MultiSigDeleGator.ts", "../../@metamask/delegation-abis/src/formatted/SCL_RIP7212.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20PeriodTransferEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20PeriodTransferEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20PeriodTransferEnforcer/methods/getAvailableAmount.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20StreamingEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20StreamingEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20StreamingEnforcer/methods/getAvailableAmount.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiTokenPeriodEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiTokenPeriodEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiTokenPeriodEnforcer/methods/getAvailableAmount.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenPeriodTransferEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenPeriodTransferEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenPeriodTransferEnforcer/methods/getAvailableAmount.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenStreamingEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenStreamingEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenStreamingEnforcer/methods/getAvailableAmount.ts", "../../@metamask/delegation-toolkit/src/executions.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/utils.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/getDelegationManager.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/getDeposit.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/getEntryPoint.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/getNonce.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/getProxyImplementation.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/getProxyVersion.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/isValidSignature.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/methods/initialize.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/encode.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/methods/addKey.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/methods/reinitialize.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/methods/removeKey.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/methods/updateSigners.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/initialize.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/encode.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/addSigner.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/reinitialize.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/removeSigner.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/replaceSigner.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/updateMultiSigParameters.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/updateThreshold.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SimpleFactory/methods/create2Deploy.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SimpleFactory/encode.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/execute.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/executeWithMode.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/encode.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/disableDelegation.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/enableDelegation.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/methods/upgradeToAndCall.ts", "../../@metamask/delegation-toolkit/src/contracts/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/constants.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/encode.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/methods/disableDelegation.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/methods/enableDelegation.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/methods/redeemDelegations.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/execute.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/methods/disabledDelegations.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/methods/getAnyDelegate.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/methods/getRootAuthority.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DelegationManager/simulate.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/execute.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/DeleGatorCore/simulate.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/EIP712/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/EIP712/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/EIP712/methods/getContractName.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/EIP712/methods/getContractVersion.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/EIP712/methods/getDomainVersion.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/EntryPoint/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/EntryPoint/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/EntryPoint/methods/getNonce.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20TransferAmountEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20TransferAmountEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20TransferAmountEnforcer/methods/getSpentAmount.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/ERC20TransferAmountEnforcer/methods/getTermsInfo.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/methods/getKey.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/methods/getKeyIdHashes.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/methods/getKeyIdHashesCount.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/simulate.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/HybridDeleGator/constants.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/IdEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/IdEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/IdEnforcer/methods/getIsUsed.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/IdEnforcer/methods/getTermsInfo.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/LimitedCallsEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/LimitedCallsEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/LimitedCallsEnforcer/methods/callCounts.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/LimitedCallsEnforcer/methods/getTermsInfo.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/getMaxNumberOfSigners.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/getSigners.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/getSignersCount.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/getThreshold.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/methods/isSigner.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/simulate.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/MultiSigDeleGator/constants.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenTransferAmountEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenTransferAmountEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenTransferAmountEnforcer/methods/getSpentAmount.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NativeTokenTransferAmountEnforcer/methods/getTermsInfo.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NonceEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NonceEnforcer/encode.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NonceEnforcer/methods/incrementNonce.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NonceEnforcer/execute.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NonceEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NonceEnforcer/methods/currentNonce.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NonceEnforcer/methods/getTermsInfo.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/NonceEnforcer/simulate.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/methods/getOwner.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/methods/getPendingOwner.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/execute.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/methods/acceptOwnership.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/methods/renounceOwnership.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/methods/transferOwnership.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/encode.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Ownable2Step/simulate.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Pausable/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Pausable/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Pausable/methods/isPaused.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Pausable/execute.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Pausable/methods/pause.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Pausable/methods/unpause.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Pausable/encode.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/Pausable/simulate.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SimpleFactory/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SimpleFactory/execute.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SimpleFactory/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SimpleFactory/methods/getCreate2Address.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SimpleFactory/simulate.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SpecificActionERC20TransferBatchEnforcer/index.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SpecificActionERC20TransferBatchEnforcer/read.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SpecificActionERC20TransferBatchEnforcer/methods/getTermsInfo.ts", "../../@metamask/delegation-toolkit/src/DelegationFramework/SpecificActionERC20TransferBatchEnforcer/methods/usedDelegations.ts"],
  "sourcesContent": ["/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n", "'use strict'\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n", "'use strict'\n\nconst debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n", "'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n", "'use strict'\n\n// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n", "'use strict'\n\nconst numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a === b ? 0 : a < b ? -1 : 1\n  }\n\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n", "'use strict'\n\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    if (this.major < other.major) {\n      return -1\n    }\n    if (this.major > other.major) {\n      return 1\n    }\n    if (this.minor < other.minor) {\n      return -1\n    }\n    if (this.minor > other.minor) {\n      return 1\n    }\n    if (this.patch < other.patch) {\n      return -1\n    }\n    if (this.patch > other.patch) {\n      return 1\n    }\n    return 0\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n", "'use strict'\n\nconst parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n", "'use strict'\n\nconst parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n", "'use strict'\n\nconst parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n", "'use strict'\n\nconst parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n", "'use strict'\n\nconst compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n", "'use strict'\n\nconst compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n", "'use strict'\n\nconst compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n", "'use strict'\n\nconst compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n", "'use strict'\n\nconst compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n", "'use strict'\n\nconst compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n", "'use strict'\n\nconst compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n", "'use strict'\n\nconst compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n", "'use strict'\n\nconst compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n", "'use strict'\n\nconst compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n", "'use strict'\n\nconst eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n", "'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n", "'use strict'\n\nconst SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  comp = comp.replace(re[t.BUILD], '')\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n", "'use strict'\n\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n", "'use strict'\n\nconst Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n", "'use strict'\n\nconst Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n", "'use strict'\n\nconst Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n", "'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n", "'use strict'\n\n// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n", "'use strict'\n\nconst outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n", "'use strict'\n\nconst Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n", "'use strict'\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n", "'use strict'\n\nconst Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n", "'use strict'\n\n// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n", "/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any;\n  key: any;\n  type: string;\n  refinement: string | undefined;\n  message: string;\n  explanation?: string | undefined;\n  branch: any[];\n  path: any[];\n};\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any;\n\n  key!: any;\n\n  type!: string;\n\n  refinement!: string | undefined;\n\n  path!: any[];\n\n  branch!: any[];\n\n  failures: () => Failure[];\n\n  [x: string]: any;\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Failure[] | undefined;\n    const { message, explanation, ...rest } = failure;\n    const { path } = failure;\n    const cause =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n    super(explanation ?? cause);\n\n    if (explanation !== null && explanation !== undefined) {\n      this.cause = cause;\n    }\n\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()]);\n    };\n  }\n}\n", "import type { Failure } from './error.js';\nimport type {\n  Struct,\n  Infer,\n  Result,\n  Context,\n  Describe,\n  ExactOptionalStruct,\n} from './struct.js';\n\n/**\n * Check if a value is an iterator.\n *\n * @param value - The value to check.\n * @returns Whether the value is an iterator.\n */\nfunction isIterable<Type>(value: unknown): value is Iterable<Type> {\n  return isObject(value) && typeof value[Symbol.iterator] === 'function';\n}\n\n/**\n * Check if a value is a plain object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a plain object.\n */\nexport function isObject(\n  value: unknown,\n): value is Record<PropertyKey, unknown> {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Check if a value is a plain object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a plain object.\n */\nexport function isPlainObject(value: unknown): value is { [key: string]: any } {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Return a value as a printable string.\n *\n * @param value - The value to print.\n * @returns The value as a string.\n */\nexport function print(value: any): string {\n  if (typeof value === 'symbol') {\n    return value.toString();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n\n/**\n * Shift (remove and return) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n *\n * @param input - The iterator to shift.\n * @returns The first value of the iterator, or `undefined` if the iterator is\n * empty.\n */\nexport function shiftIterator<Type>(input: Iterator<Type>): Type | undefined {\n  const { done, value } = input.next();\n  return done ? undefined : value;\n}\n\n/**\n * Convert a single validation result to a failure.\n *\n * @param result - The result to convert.\n * @param context - The context of the validation.\n * @param struct - The struct being validated.\n * @param value - The value being validated.\n * @returns A failure if the result is a failure, or `undefined` if the result\n * is a success.\n */\nexport function toFailure<Type, Schema>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<Type, Schema>,\n  value: any,\n): Failure | undefined {\n  if (result === true) {\n    return undefined;\n  } else if (result === false) {\n    // eslint-disable-next-line no-param-reassign\n    result = {};\n  } else if (typeof result === 'string') {\n    // eslint-disable-next-line no-param-reassign\n    result = { message: result };\n  }\n\n  const { path, branch } = context;\n  const { type } = struct;\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result;\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  };\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n *\n * @param result - The result to convert.\n * @param context - The context of the validation.\n * @param struct - The struct being validated.\n * @param value - The value being validated.\n * @yields The failures.\n * @returns An iterable of failures.\n */\nexport function* toFailures<Type, Schema>(\n  result: Result,\n  context: Context,\n  struct: Struct<Type, Schema>,\n  value: any,\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    // eslint-disable-next-line no-param-reassign\n    result = [result];\n  }\n\n  for (const validationResult of result) {\n    const failure = toFailure(validationResult, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n *\n * @param value - The value to check.\n * @param struct - The struct to check against.\n * @param options - Optional settings.\n * @param options.path - The path to the value in the input data.\n * @param options.branch - The branch of the value in the input data.\n * @param options.coerce - Whether to coerce the value before validating it.\n * @param options.mask - Whether to mask the value before validating it.\n * @param options.message - An optional message to include in the error.\n * @yields An iterator of failures or success.\n * @returns An iterator of failures or success.\n */\nexport function* run<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  options: {\n    path?: any[] | undefined;\n    branch?: any[] | undefined;\n    coerce?: boolean | undefined;\n    mask?: boolean | undefined;\n    message?: string | undefined;\n  } = {},\n): IterableIterator<[Failure, undefined] | [undefined, Type]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options;\n  const context: Context = { path, branch };\n\n  if (coerce) {\n    // eslint-disable-next-line no-param-reassign\n    value = struct.coercer(value, context);\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let status: 'valid' | 'not_refined' | 'not_valid' = 'valid';\n\n  for (const failure of struct.validator(value, context)) {\n    failure.explanation = options.message;\n    status = 'not_valid';\n    yield [failure, undefined];\n  }\n\n  // eslint-disable-next-line prefer-const\n  for (let [innerKey, innerValue, innerStruct] of struct.entries(\n    value,\n    context,\n  )) {\n    const iterable = run(innerValue, innerStruct as Struct, {\n      path: innerKey === undefined ? path : [...path, innerKey],\n      branch: innerKey === undefined ? branch : [...branch, innerValue],\n      coerce,\n      mask,\n      message: options.message,\n    });\n\n    for (const result of iterable) {\n      if (result[0]) {\n        status =\n          result[0].refinement === null || result[0].refinement === undefined\n            ? 'not_valid'\n            : 'not_refined';\n\n        yield [result[0], undefined];\n      } else if (coerce) {\n        innerValue = result[1];\n\n        if (innerKey === undefined) {\n          // eslint-disable-next-line no-param-reassign\n          value = innerValue;\n        } else if (value instanceof Map) {\n          value.set(innerKey, innerValue);\n        } else if (value instanceof Set) {\n          value.add(innerValue);\n        } else if (isObject(value)) {\n          if (innerValue !== undefined || innerKey in value) {\n            value[innerKey] = innerValue;\n          }\n        }\n      }\n    }\n  }\n\n  if (status !== 'not_valid') {\n    for (const failure of struct.refiner(value as Type, context)) {\n      failure.explanation = options.message;\n      status = 'not_refined';\n      yield [failure, undefined];\n    }\n  }\n\n  if (status === 'valid') {\n    yield [undefined, value as Type];\n  }\n}\n\n/**\n * Convert a union of type to an intersection.\n */\nexport type UnionToIntersection<Union> = (\n  Union extends any ? (arg: Union) => any : never\n) extends (arg: infer Type) => void\n  ? Type\n  : never;\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\nexport type Assign<Type, OtherType> = Simplify<\n  OtherType & Omit<Type, keyof OtherType>\n>;\n\n/**\n * A schema for enum structs.\n */\nexport type EnumSchema<Type extends string | number | undefined | null> = {\n  [Key in NonNullable<Type>]: Key;\n};\n\n/**\n * Check if a type is a match for another whilst treating overlapping\n * unions as a match.\n */\nexport type IsMatch<Type, OtherType> = Type extends OtherType\n  ? OtherType extends Type\n    ? Type\n    : never\n  : never;\n\n/**\n * Check if a type is an exact match.\n */\nexport type IsExactMatch<Type, OtherType> = (<Inner>() => Inner extends Type\n  ? 1\n  : 2) extends <Inner>() => Inner extends OtherType ? 1 : 2\n  ? Type\n  : never;\n\n/**\n * Check if a type is a record type.\n */\nexport type IsRecord<Type> = Type extends object\n  ? string extends keyof Type\n    ? Type\n    : never\n  : never;\n\n/**\n * Check if a type is a tuple.\n */\nexport type IsTuple<Type> = Type extends [any]\n  ? Type\n  : Type extends [any, any]\n  ? Type\n  : Type extends [any, any, any]\n  ? Type\n  : Type extends [any, any, any, any]\n  ? Type\n  : Type extends [any, any, any, any, any]\n  ? Type\n  : never;\n\n/**\n * Check if a type is a union.\n */\nexport type IsUnion<Type, Union extends Type = Type> = (\n  Type extends any ? (Union extends Type ? false : true) : false\n) extends false\n  ? never\n  : Type;\n\n/**\n * A schema for object structs.\n */\nexport type ObjectSchema = Record<string, Struct<any, any>>;\n\n/**\n * Infer a type from an object struct schema.\n */\nexport type ObjectType<Schema extends ObjectSchema> = Simplify<\n  // ExactOptionalize first ensures that properties of `exactOptional()` structs\n  // are optional, then Optionalize ensures that properties that can have the\n  // value `undefined` are optional.\n  Optionalize<ExactOptionalize<Schema>>\n>;\n\n/**\n * Make properties of `exactOptional()` structs optional.\n */\nexport type ExactOptionalize<Schema extends ObjectSchema> = {\n  [K in keyof OmitExactOptional<Schema>]: Infer<OmitExactOptional<Schema>[K]>;\n} & {\n  [K in keyof PickExactOptional<Schema>]?: Infer<PickExactOptional<Schema>[K]>;\n};\n\ntype OmitExactOptional<Schema extends ObjectSchema> = Omit<\n  Schema,\n  {\n    [K in keyof Schema]: Schema[K] extends ExactOptionalStruct<any, any>\n      ? Schema[K] extends never\n        ? never\n        : K\n      : never;\n  }[keyof Schema]\n>;\n\ntype PickExactOptional<Schema extends ObjectSchema> = Pick<\n  Schema,\n  {\n    [K in keyof Schema]: Schema[K] extends ExactOptionalStruct<any, any>\n      ? Schema[K] extends never\n        ? never\n        : K\n      : never;\n  }[keyof Schema]\n>;\n\n/**\n * Make properties that can have the value `undefined` optional.\n */\nexport type Optionalize<Schema extends object> = OmitBy<Schema, undefined> &\n  Partial<PickBy<Schema, undefined>>;\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\nexport type OmitBy<Type, Value> = Omit<\n  Type,\n  {\n    [Key in keyof Type]: Value extends Extract<Type[Key], Value> ? Key : never;\n  }[keyof Type]\n>;\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\nexport type PickBy<Type, Value> = Pick<\n  Type,\n  {\n    [Key in keyof Type]: Value extends Extract<Type[Key], Value> ? Key : never;\n  }[keyof Type]\n>;\n\n/**\n * Transform an object schema type to represent a partial.\n */\nexport type PartialObjectSchema<Schema extends ObjectSchema> = {\n  [K in keyof Schema]: Struct<Infer<Schema[K]> | undefined>;\n};\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\nexport type Simplify<Type> = Type extends any[] | Date\n  ? Type\n  : // eslint-disable-next-line @typescript-eslint/ban-types\n    { [Key in keyof Type]: Type[Key] } & {};\n\nexport type If<Condition extends boolean, Then, Else> = Condition extends true\n  ? Then\n  : Else;\n\n/**\n * A schema for any type of struct.\n */\nexport type StructSchema<Type> = [Type] extends [string | undefined | null]\n  ? [Type] extends [IsMatch<Type, string | undefined | null>]\n    ? null\n    : [Type] extends [IsUnion<Type>]\n    ? EnumSchema<Type>\n    : Type\n  : [Type] extends [number | undefined | null]\n  ? [Type] extends [IsMatch<Type, number | undefined | null>]\n    ? null\n    : [Type] extends [IsUnion<Type>]\n    ? EnumSchema<Type>\n    : Type\n  : [Type] extends [boolean]\n  ? [Type] extends [IsExactMatch<Type, boolean>]\n    ? null\n    : Type\n  : Type extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : Type extends (infer Inner)[]\n  ? Type extends IsTuple<Type>\n    ? null\n    : Struct<Inner>\n  : Type extends object\n  ? Type extends IsRecord<Type>\n    ? null\n    : { [K in keyof Type]: Describe<Type[K]> }\n  : null;\n\n/**\n * A schema for tuple structs.\n */\nexport type TupleSchema<Type> = { [K in keyof Type]: Struct<Type[K]> };\n\n/**\n * Shorthand type for matching any `Struct`.\n */\nexport type AnyStruct = Struct<any, any>;\n\n/**\n * Infer a tuple of types from a tuple of `Struct`s.\n *\n * This is used to recursively retrieve the type from `union` `intersection` and\n * `tuple` structs.\n */\nexport type InferStructTuple<\n  Tuple extends AnyStruct[],\n  Length extends number = Tuple['length'],\n> = Length extends Length\n  ? number extends Length\n    ? Tuple\n    : InferTuple<Tuple, Length, []>\n  : never;\n\ntype InferTuple<\n  Tuple extends AnyStruct[],\n  Length extends number,\n  Accumulated extends unknown[],\n  Index extends number = Accumulated['length'],\n> = Index extends Length\n  ? Accumulated\n  : InferTuple<Tuple, Length, [...Accumulated, Infer<Tuple[Index]>]>;\n", "import type { Failure } from './error.js';\nimport { StructError } from './error.js';\nimport type { StructSchema } from './utils.js';\nimport { isObject, toFailures, shiftIterator, run } from './utils.js';\n\ntype StructParams<Type, Schema> = {\n  type: string;\n  schema: Schema;\n  coercer?: Coercer | undefined;\n  validator?: Validator | undefined;\n  refiner?: Refiner<Type> | undefined;\n  entries?: Struct<Type, Schema>['entries'] | undefined;\n};\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nexport class Struct<Type = unknown, Schema = unknown> {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  readonly TYPE!: Type;\n\n  type: string;\n\n  schema: Schema;\n\n  coercer: (value: unknown, context: Context) => unknown;\n\n  validator: (value: unknown, context: Context) => Iterable<Failure>;\n\n  refiner: (value: Type, context: Context) => Iterable<Failure>;\n\n  entries: (\n    value: unknown,\n    context: Context,\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>;\n\n  constructor(props: StructParams<Type, Schema>) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {\n        /* noop */\n      },\n    } = props;\n\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown, message?: string): asserts value is Type {\n    return assert(value, this, message);\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown, message?: string): Type {\n    return create(value, this, message);\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is Type {\n    return is(value, this);\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown, message?: string): Type {\n    return mask(value, this, message);\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean;\n      message?: string;\n    } = {},\n  ): [StructError, undefined] | [undefined, Type] {\n    return validate(value, this, options);\n  }\n}\n\n// String instead of a Symbol in case of multiple different versions of this library.\nconst ExactOptionalBrand = 'EXACT_OPTIONAL';\n\n/**\n * An `ExactOptionalStruct` is a `Struct` that is used to create exactly optional\n * properties of `object()` structs.\n */\nexport class ExactOptionalStruct<\n  Type = unknown,\n  Schema = unknown,\n> extends Struct<Type, Schema> {\n  // ESLint wants us to make this #-private, but we need it to be accessible by\n  // other versions of this library at runtime. If it were #-private, the\n  // implementation would break if multiple instances of this library were\n  // loaded at runtime.\n  // eslint-disable-next-line no-restricted-syntax\n  readonly brand: typeof ExactOptionalBrand;\n\n  constructor(props: StructParams<Type, Schema>) {\n    super({\n      ...props,\n      type: `exact optional ${props.type}`,\n    });\n    this.brand = ExactOptionalBrand;\n  }\n\n  static isExactOptional(value: unknown): value is ExactOptionalStruct {\n    return (\n      isObject(value) && 'brand' in value && value.brand === ExactOptionalBrand\n    );\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param message - An optional message to include in the error.\n */\nexport function assert<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  message?: string,\n): asserts value is Type {\n  const result = validate(value, struct, { message });\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n *\n * @param value - The value to coerce and validate.\n * @param struct - The struct to validate against.\n * @param message - An optional message to include in the error.\n * @returns The coerced and validated value.\n */\nexport function create<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  message?: string,\n): Type {\n  const result = validate(value, struct, { coerce: true, message });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n *\n * @param value - The value to mask.\n * @param struct - The struct to mask against.\n * @param message - An optional message to include in the error.\n * @returns The masked value.\n */\nexport function mask<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  message?: string,\n): Type {\n  const result = validate(value, struct, { coerce: true, mask: true, message });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n\n/**\n * Check if a value passes a struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @returns `true` if the value passes the struct, `false` otherwise.\n */\nexport function is<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n): value is Type {\n  const result = validate(value, struct);\n  return !result[0];\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param options - Optional settings.\n * @param options.coerce - Whether to coerce the value before validating it.\n * @param options.mask - Whether to mask the value before validating it.\n * @param options.message - An optional message to include in the error.\n * @returns A tuple containing the error (if invalid) and the validated value.\n */\nexport function validate<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  options: {\n    coerce?: boolean | undefined;\n    mask?: boolean | undefined;\n    message?: string | undefined;\n  } = {},\n): [StructError, undefined] | [undefined, Type] {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples) as [\n    Failure | undefined,\n    Type | undefined,\n  ];\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const innerTuple of tuples) {\n        if (innerTuple[0]) {\n          yield innerTuple[0];\n        }\n      }\n    });\n\n    return [error, undefined];\n  }\n\n  const validatedValue = tuple[1] as Type;\n  return [undefined, validatedValue];\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: any[];\n  path: any[];\n};\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<StructType extends Struct<any, any>> = StructType['TYPE'];\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<Type> = Struct<Type, StructSchema<Type>>;\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>;\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<Type = unknown> = (\n  value: Type,\n  context: Context,\n) => unknown;\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result;\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<Type> = (value: Type, context: Context) => Result;\n", "import type { Context, Validator } from '../struct.js';\nimport { Struct } from '../struct.js';\nimport type {\n  Assign,\n  ObjectSchema,\n  ObjectType,\n  PartialObjectSchema,\n} from '../utils.js';\nimport { object, optional, type } from './types.js';\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * Like JavaScript's `Object.assign` utility.\n *\n * @param First - The first struct to combine.\n * @param Second - The second struct to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign<First extends ObjectSchema, Second extends ObjectSchema>(\n  First: Struct<ObjectType<First>, First>,\n  Second: Struct<ObjectType<Second>, Second>,\n): Struct<ObjectType<Assign<First, Second>>, Assign<First, Second>>;\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param First - The first struct to combine.\n * @param Second - The second struct to combine.\n * @param Third - The third struct to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign<\n  First extends ObjectSchema,\n  Second extends ObjectSchema,\n  Third extends ObjectSchema,\n>(\n  First: Struct<ObjectType<First>, First>,\n  Second: Struct<ObjectType<Second>, Second>,\n  Third: Struct<ObjectType<Third>, Third>,\n): Struct<\n  ObjectType<Assign<Assign<First, Second>, Third>>,\n  Assign<Assign<First, Second>, Third>\n>;\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param First - The first struct to combine.\n * @param Second - The second struct to combine.\n * @param Third - The third struct to combine.\n * @param Fourth - The fourth struct to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign<\n  First extends ObjectSchema,\n  Second extends ObjectSchema,\n  Third extends ObjectSchema,\n  Fourth extends ObjectSchema,\n>(\n  First: Struct<ObjectType<First>, First>,\n  Second: Struct<ObjectType<Second>, Second>,\n  Third: Struct<ObjectType<Third>, Third>,\n  Fourth: Struct<ObjectType<Fourth>, Fourth>,\n): Struct<\n  ObjectType<Assign<Assign<Assign<First, Second>, Third>, Fourth>>,\n  Assign<Assign<Assign<First, Second>, Third>, Fourth>\n>;\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param First - The first struct to combine.\n * @param Second - The second struct to combine.\n * @param Third - The third struct to combine.\n * @param Fourth - The fourth struct to combine.\n * @param Fifth - The fifth struct to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign<\n  First extends ObjectSchema,\n  Second extends ObjectSchema,\n  Third extends ObjectSchema,\n  Fourth extends ObjectSchema,\n  Fifth extends ObjectSchema,\n>(\n  First: Struct<ObjectType<First>, First>,\n  Second: Struct<ObjectType<Second>, Second>,\n  Third: Struct<ObjectType<Third>, Third>,\n  Fourth: Struct<ObjectType<Fourth>, Fourth>,\n  Fifth: Struct<ObjectType<Fifth>, Fifth>,\n): Struct<\n  ObjectType<\n    Assign<Assign<Assign<Assign<First, Second>, Third>, Fourth>, Fifth>\n  >,\n  Assign<Assign<Assign<Assign<First, Second>, Third>, Fourth>, Fifth>\n>;\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param Structs - The structs to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign(...Structs: Struct<any>[]): any {\n  const isType = Structs[0]?.type === 'type';\n  const schemas = Structs.map(({ schema }) => schema);\n  const schema = Object.assign({}, ...schemas);\n  return isType ? type(schema) : object(schema);\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @param name - The name of the struct type.\n * @param validator - The validation function.\n * @returns A new struct type.\n */\nexport function define<Type>(\n  name: string,\n  validator: Validator,\n): Struct<Type, null> {\n  return new Struct({ type: name, schema: null, validator });\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n *\n * @param struct - The struct to augment.\n * @param log - The function to call when the value is not `undefined`.\n * @returns A new struct that will only accept `undefined` or values that pass\n * the input struct.\n */\nexport function deprecated<Type>(\n  struct: Struct<Type>,\n  log: (value: unknown, ctx: Context) => void,\n): Struct<Type> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      }\n      log(value, ctx);\n      return struct.validator(value, ctx);\n    },\n  });\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n *\n * @param fn - The callback to create the struct.\n * @returns A new struct with dynamic validation logic.\n */\nexport function dynamic<Type>(\n  fn: (value: unknown, ctx: Context) => Struct<Type, any>,\n): Struct<Type, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    },\n    refiner(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.refiner(value, ctx);\n    },\n  });\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n *\n * @param fn - The callback to create the struct.\n * @returns A new struct with lazily evaluated validation logic.\n */\nexport function lazy<Type>(fn: () => Struct<Type, any>): Struct<Type, null> {\n  let struct: Struct<Type, any> | undefined;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn();\n      yield* struct.entries(value, ctx);\n    },\n    validator(value, ctx) {\n      struct ??= fn();\n      return struct.validator(value, ctx);\n    },\n    coercer(value, ctx) {\n      struct ??= fn();\n      return struct.coercer(value, ctx);\n    },\n    refiner(value, ctx) {\n      struct ??= fn();\n      return struct.refiner(value, ctx);\n    },\n  });\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n *\n * @param struct - The struct to augment.\n * @param keys - The keys to omit.\n * @returns A new struct that will not accept the input keys.\n */\nexport function omit<Schema extends ObjectSchema, Key extends keyof Schema>(\n  struct: Struct<ObjectType<Schema>, Schema>,\n  keys: Key[],\n): Struct<ObjectType<Omit<Schema, Key>>, Omit<Schema, Key>> {\n  const { schema } = struct;\n  const subschema: any = { ...schema };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  switch (struct.type) {\n    case 'type':\n      return type(subschema as Omit<Schema, Key>);\n    default:\n      return object(subschema as Omit<Schema, Key>);\n  }\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept the input keys as `undefined`.\n */\nexport function partial<Schema extends ObjectSchema>(\n  struct: Struct<ObjectType<Schema>, Schema> | Schema,\n): Struct<\n  ObjectType<PartialObjectSchema<Schema>>,\n  PartialObjectSchema<Schema>\n> {\n  const isStruct = struct instanceof Struct;\n  const schema: any = isStruct ? { ...struct.schema } : { ...struct };\n\n  // eslint-disable-next-line guard-for-in\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  if (isStruct && struct.type === 'type') {\n    return type(schema) as any;\n  }\n\n  return object(schema) as any;\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n *\n * @param struct - The struct to augment.\n * @param keys - The keys to pick.\n * @returns A new struct that will only accept the input keys.\n */\nexport function pick<Schema extends ObjectSchema, Key extends keyof Schema>(\n  struct: Struct<ObjectType<Schema>, Schema>,\n  keys: Key[],\n): Struct<ObjectType<Pick<Schema, Key>>, Pick<Schema, Key>> {\n  const { schema } = struct;\n  const subschema: any = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  switch (struct.type) {\n    case 'type':\n      return type(subschema) as any;\n\n    default:\n      return object(subschema) as any;\n  }\n}\n", "import type { Infer } from '../struct.js';\nimport { ExactOptionalStruct, Struct } from '../struct.js';\nimport type {\n  ObjectSchema,\n  ObjectType,\n  AnyStruct,\n  InferStructTuple,\n  UnionToIntersection,\n} from '../utils.js';\nimport { print, run, isObject } from '../utils.js';\nimport { define } from './utilities.js';\n\n/**\n * Ensure that any value passes validation.\n *\n * @returns A struct that will always pass validation.\n */\nexport function any(): Struct<any, null> {\n  return define('any', () => true);\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n *\n * @param Element - The struct to validate each element in the array against.\n * @returns A new struct that will only accept arrays of the given type.\n */\nexport function array<Type extends Struct<any>>(\n  Element: Type,\n): Struct<Infer<Type>[], Type>;\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n *\n * @returns A new struct that will accept any array.\n */\nexport function array(): Struct<unknown[], undefined>;\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n *\n * @param Element - The struct to validate each element in the array against.\n * @returns A new struct that will only accept arrays of the given type.\n */\nexport function array<Type extends Struct<any>>(Element?: Type): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [index, arrayValue] of value.entries()) {\n          yield [index, arrayValue, Element];\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a bigint.\n *\n * @returns A new struct that will only accept bigints.\n */\nexport function bigint(): Struct<bigint, null> {\n  return define('bigint', (value) => {\n    return typeof value === 'bigint';\n  });\n}\n\n/**\n * Ensure that a value is a boolean.\n *\n * @returns A new struct that will only accept booleans.\n */\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean';\n  });\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n *\n * @returns A new struct that will only accept valid `Date` objects.\n */\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n *\n * @param values - The potential values that the input can be.\n * @returns A new struct that will only accept the given values.\n */\nexport function enums<Type extends number, Values extends readonly Type[]>(\n  values: Values,\n): Struct<Values[number], { [Key in Values[number]]: Key }>;\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n *\n * @param values - The potential values that the input can be.\n * @returns A new struct that will only accept the given values.\n */\nexport function enums<Type extends string, Values extends readonly Type[]>(\n  values: Values,\n): Struct<Values[number], { [Key in Values[number]]: Key }>;\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n *\n * @param values - The potential values that the input can be.\n * @returns A new struct that will only accept the given values.\n */\nexport function enums<\n  Type extends string | number,\n  Values extends readonly Type[],\n>(values: Values): any {\n  const schema: any = {};\n  const description = values.map((value) => print(value)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a function.\n *\n * @returns A new struct that will only accept functions.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n *\n * @param Class - The class that the value must be an instance of.\n * @returns A new struct that will only accept instances of the given class.\n */\nexport function instance<Type extends new (...args: any) => any>(\n  Class: Type,\n): Struct<InstanceType<Type>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is an integer.\n *\n * @returns A new struct that will only accept integers.\n */\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept values that match all of the\n * given structs.\n */\nexport function intersection<First extends AnyStruct, Rest extends AnyStruct[]>(\n  Structs: [First, ...Rest],\n): Struct<\n  Infer<First> & UnionToIntersection<InferStructTuple<Rest>[number]>,\n  null\n> {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, context) {\n      for (const { entries } of Structs) {\n        yield* entries(value, context);\n      }\n    },\n    *validator(value, context) {\n      for (const { validator } of Structs) {\n        yield* validator(value, context);\n      }\n    },\n    *refiner(value, context) {\n      for (const { refiner } of Structs) {\n        yield* refiner(value, context);\n      }\n    },\n  });\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type extends boolean>(\n  constant: Type,\n): Struct<Type, Type>;\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type extends number>(\n  constant: Type,\n): Struct<Type, Type>;\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type extends string>(\n  constant: Type,\n): Struct<Type, Type>;\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type>(constant: Type): Struct<Type, null>;\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type>(constant: Type): any {\n  const description = print(constant);\n  const valueType = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema:\n      valueType === 'string' ||\n      valueType === 'number' ||\n      valueType === 'boolean'\n        ? constant\n        : null,\n\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n *\n * @returns A new struct that will only accept `Map` objects.\n */\nexport function map(): Struct<Map<unknown, unknown>, null>;\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n *\n * @param Key - The struct to validate each key in the map against.\n * @param Value - The struct to validate each value in the map against.\n * @returns A new struct that will only accept `Map` objects.\n */\nexport function map<Key, Value>(\n  Key: Struct<Key>,\n  Value: Struct<Value>,\n): Struct<Map<Key, Value>, null>;\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n *\n * @param Key - The struct to validate each key in the map against.\n * @param Value - The struct to validate each value in the map against.\n * @returns A new struct that will only accept `Map` objects.\n */\nexport function map<Key, Value>(Key?: Struct<Key>, Value?: Struct<Value>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [mapKey, mapValue] of value.entries()) {\n          yield [mapKey as string, mapKey, Key];\n          yield [mapKey as string, mapValue, Value];\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that no value ever passes validation.\n *\n * @returns A new struct that will never pass validation.\n */\nexport function never(): Struct<never, null> {\n  return define('never', () => false);\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept `null` values.\n */\nexport function nullable<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): Struct<Type | null, Schema> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  });\n}\n\n/**\n * Ensure that a value is a number.\n *\n * @returns A new struct that will only accept numbers.\n */\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is an object, that it has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n *\n * @returns A new struct that will only accept objects.\n */\nexport function object(): Struct<Record<string, unknown>, null>;\n\n/**\n * Ensure that a value is an object, that it has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nexport function object<Schema extends ObjectSchema>(\n  schema: Schema,\n): Struct<ObjectType<Schema>, Schema>;\n\n/**\n * Ensure that a value is an object, that it has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nexport function object<Schema extends ObjectSchema>(\n  schema?: Schema | undefined,\n): any {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ?? null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          const propertySchema = schema[key];\n          if (\n            ExactOptionalStruct.isExactOptional(propertySchema) &&\n            !Object.prototype.hasOwnProperty.call(value, key)\n          ) {\n            continue;\n          }\n\n          yield [key, value[key], schema[key] as Struct<any>];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      );\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value;\n    },\n  });\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept `undefined` values.\n */\nexport function optional<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): Struct<Type | undefined, Schema> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  });\n}\n\n/**\n * Augment a struct such that, if it is the property of an object, it is exactly optional.\n * In other words, it is either present with the correct type, or not present at all.\n *\n * NOTE: Only intended for use with `object()` structs.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that can be used to create exactly optional properties of `object()`\n * structs.\n */\nexport function exactOptional<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): ExactOptionalStruct<Type, Schema> {\n  return new ExactOptionalStruct(struct);\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * @param Key - The struct to validate each key in the record against.\n * @param Value - The struct to validate each value in the record against.\n * @returns A new struct that will only accept objects.\n */\nexport function record<Key extends string, Value>(\n  Key: Struct<Key>,\n  Value: Struct<Value>,\n): Struct<Record<Key, Value>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        // eslint-disable-next-line guard-for-in\n        for (const objectKey in value) {\n          const objectValue = value[objectKey];\n          yield [objectKey, objectKey, Key];\n          yield [objectKey, objectValue, Value];\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n *\n * @returns A new struct that will only accept `RegExp` objects.\n */\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp;\n  });\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n *\n * @returns A new struct that will only accept `Set` objects.\n */\nexport function set(): Struct<Set<unknown>, null>;\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n *\n * @param Element - The struct to validate each element in the set against.\n * @returns A new struct that will only accept `Set` objects.\n */\nexport function set<Type>(Element: Struct<Type>): Struct<Set<Type>, null>;\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n *\n * @param Element - The struct to validate each element in the set against.\n * @returns A new struct that will only accept `Set` objects.\n */\nexport function set<Type>(Element?: Struct<Type>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const setValue of value) {\n          yield [setValue as string, setValue, Element];\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a string.\n *\n * @returns A new struct that will only accept strings.\n */\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept tuples of the given types.\n */\nexport function tuple<First extends AnyStruct, Rest extends AnyStruct[]>(\n  Structs: [First, ...Rest],\n): Struct<[Infer<First>, ...InferStructTuple<Rest>], null> {\n  const Never = never();\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Structs.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Structs[i] || Never];\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nexport function type<Schema extends ObjectSchema>(\n  schema: Schema,\n): Struct<ObjectType<Schema>, Schema> {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k] as Struct<any>];\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      );\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value;\n    },\n  });\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept values that match one of the\n * given structs.\n */\nexport function union<First extends AnyStruct, Rest extends AnyStruct[]>(\n  Structs: [First, ...Rest],\n): Struct<Infer<First> | InferStructTuple<Rest>[number], null> {\n  const description = Structs.map((struct) => struct.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n    coercer(value) {\n      for (const InnerStruct of Structs) {\n        const [error, coerced] = InnerStruct.validate(value, { coerce: true });\n        if (!error) {\n          return coerced;\n        }\n      }\n\n      return value;\n    },\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const InnerStruct of Structs) {\n        const [...tuples] = run(value, InnerStruct, ctx);\n        const [first] = tuples;\n\n        if (!first?.[0]) {\n          return [];\n        }\n\n        for (const [failure] of tuples) {\n          if (failure) {\n            failures.push(failure);\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value,\n        )}`,\n        ...failures,\n      ];\n    },\n  });\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n *\n * @returns A struct that will always pass validation.\n */\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true);\n}\n", "import type { Coercer } from '../struct.js';\nimport { Struct, is } from '../struct.js';\nimport { isPlainObject } from '../utils.js';\nimport { string, unknown } from './types.js';\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @param condition - A struct that the input must pass to be coerced.\n * @param coercer - A function that takes the input and returns the coerced\n * value.\n * @returns A new struct that will coerce its input before validating it.\n */\nexport function coerce<Type, Schema, CoercionType>(\n  struct: Struct<Type, Schema>,\n  condition: Struct<CoercionType, any>,\n  coercer: Coercer<CoercionType>,\n): Struct<Type, Schema> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx);\n    },\n  });\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @param fallback - The value to use when the input is `undefined`.\n * @param options - An optional options object.\n * @param options.strict - When `true`, the fallback will only be used when the\n * input is `undefined`. When `false`, the fallback will be used when the input\n * is `undefined` or when the input is a plain object and the fallback is a\n * plain object, and any keys in the fallback are missing from the input.\n * @returns A new struct that will replace `undefined` inputs with a default.\n */\nexport function defaulted<Type, Schema>(\n  struct: Struct<Type, Schema>,\n  fallback: any,\n  options: {\n    strict?: boolean | undefined;\n  } = {},\n): Struct<Type, Schema> {\n  return coerce(struct, unknown(), (value) => {\n    const result = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (value === undefined) {\n      return result;\n    }\n\n    if (!options.strict && isPlainObject(value) && isPlainObject(result)) {\n      const ret = { ...value };\n      let changed = false;\n\n      for (const key in result) {\n        if (ret[key] === undefined) {\n          ret[key] = result[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return value;\n  });\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will trim string inputs before validating them.\n */\nexport function trimmed<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): Struct<Type, Schema> {\n  return coerce(struct, string(), (value) => value.trim());\n}\n", "import type { Refiner } from '../struct.js';\nimport { Struct } from '../struct.js';\nimport { toFailures } from '../utils.js';\n\n/**\n * Ensure that a string, array, map, or set is empty.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will only accept empty values.\n */\nexport function empty<\n  Type extends string | any[] | Map<any, any> | Set<any>,\n  Schema,\n>(struct: Struct<Type, Schema>): Struct<Type, Schema> {\n  return refine(struct, 'empty', (value) => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const size = getSize(value);\n    return (\n      size === 0 ||\n      `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``\n    );\n  });\n}\n\n/**\n * Get the size of a string, array, map, or set.\n *\n * @param value - The value to measure.\n * @returns The size of the value.\n */\nfunction getSize(value: string | any[] | Map<any, any> | Set<any>): number {\n  if (value instanceof Map || value instanceof Set) {\n    return value.size;\n  }\n\n  return value.length;\n}\n\n/**\n * Ensure that a number or date is below a threshold.\n *\n * @param struct - The struct to augment.\n * @param threshold - The maximum value that the input can be.\n * @param options - An optional options object.\n * @param options.exclusive - When `true`, the input must be strictly less than\n * the threshold. When `false`, the input must be less than or equal to the\n * threshold.\n * @returns A new struct that will only accept values below the threshold.\n */\nexport function max<Type extends number | Date, Schema>(\n  struct: Struct<Type, Schema>,\n  threshold: Type,\n  options: {\n    exclusive?: boolean | undefined;\n  } = {},\n): Struct<Type, Schema> {\n  const { exclusive } = options;\n  return refine(struct, 'max', (value) => {\n    return exclusive\n      ? value < threshold\n      : value <= threshold ||\n          `Expected a ${struct.type} less than ${\n            exclusive ? '' : 'or equal to '\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          }${threshold} but received \\`${value}\\``;\n  });\n}\n\n/**\n * Ensure that a number or date is above a threshold.\n *\n * @param struct - The struct to augment.\n * @param threshold - The minimum value that the input can be.\n * @param options - An optional options object.\n * @param options.exclusive - When `true`, the input must be strictly greater\n * than the threshold. When `false`, the input must be greater than or equal to\n * the threshold.\n * @returns A new struct that will only accept values above the threshold.\n */\nexport function min<Type extends number | Date, Schema>(\n  struct: Struct<Type, Schema>,\n  threshold: Type,\n  options: {\n    exclusive?: boolean | undefined;\n  } = {},\n): Struct<Type, Schema> {\n  const { exclusive } = options;\n  return refine(struct, 'min', (value) => {\n    return exclusive\n      ? value > threshold\n      : value >= threshold ||\n          `Expected a ${struct.type} greater than ${\n            exclusive ? '' : 'or equal to '\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          }${threshold} but received \\`${value}\\``;\n  });\n}\n\n/**\n * Ensure that a string, array, map or set is not empty.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will only accept non-empty values.\n */\nexport function nonempty<\n  Type extends string | any[] | Map<any, any> | Set<any>,\n  Schema,\n>(struct: Struct<Type, Schema>): Struct<Type, Schema> {\n  return refine(struct, 'nonempty', (value) => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const size = getSize(value);\n    return (\n      size > 0 || `Expected a nonempty ${struct.type} but received an empty one`\n    );\n  });\n}\n\n/**\n * Ensure that a string matches a regular expression.\n *\n * @param struct - The struct to augment.\n * @param regexp - The regular expression to match against.\n * @returns A new struct that will only accept strings matching the regular\n * expression.\n */\nexport function pattern<Type extends string, Schema>(\n  struct: Struct<Type, Schema>,\n  regexp: RegExp,\n): Struct<Type, Schema> {\n  return refine(struct, 'pattern', (value) => {\n    return (\n      regexp.test(value) ||\n      `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`\n    );\n  });\n}\n\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length,\n * or time) between `min` and `max`.\n *\n * @param struct - The struct to augment.\n * @param minimum - The minimum size that the input can be.\n * @param maximum - The maximum size that the input can be.\n * @returns A new struct that will only accept values within the given size\n * range.\n */\nexport function size<\n  Type extends string | number | Date | any[] | Map<any, any> | Set<any>,\n  Schema,\n>(\n  struct: Struct<Type, Schema>,\n  minimum: number,\n  maximum: number = minimum,\n): Struct<Type, Schema> {\n  const expected = `Expected a ${struct.type}`;\n  const of =\n    minimum === maximum\n      ? `of \\`${minimum}\\``\n      : `between \\`${minimum}\\` and \\`${maximum}\\``;\n\n  return refine(struct, 'size', (value) => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return (\n        (minimum <= value && value <= maximum) ||\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `${expected} ${of} but received \\`${value}\\``\n      );\n    } else if (value instanceof Map || value instanceof Set) {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { size } = value;\n      return (\n        (minimum <= size && size <= maximum) ||\n        `${expected} with a size ${of} but received one with a size of \\`${size}\\``\n      );\n    }\n\n    const { length } = value;\n    return (\n      (minimum <= length && length <= maximum) ||\n      `${expected} with a length ${of} but received one with a length of \\`${length}\\``\n    );\n  });\n}\n\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n *\n * @param struct - The struct to augment.\n * @param name - The name of the refinement.\n * @param refiner - The refiner function.\n * @returns A new struct that will run the refiner function after the existing\n * validation.\n */\nexport function refine<Type, Schema>(\n  struct: Struct<Type, Schema>,\n  name: string,\n  refiner: Refiner<Type>,\n): Struct<Type, Schema> {\n  return new Struct({\n    ...struct,\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure, refinement: name };\n      }\n    },\n  });\n}\n", "export * from './error.js';\nexport * from './struct.js';\nexport * from './structs/coercions.js';\nexport * from './structs/refinements.js';\nexport * from './structs/types.js';\nexport * from './structs/utilities.js';\nexport type {\n  AnyStruct,\n  Assign,\n  EnumSchema,\n  If,\n  InferStructTuple,\n  IsExactMatch,\n  IsMatch,\n  IsRecord,\n  IsTuple,\n  IsUnion,\n  ObjectSchema,\n  ObjectType,\n  OmitBy,\n  Optionalize,\n  PartialObjectSchema,\n  PickBy,\n  Simplify,\n  ExactOptionalize,\n  StructSchema,\n  TupleSchema,\n  UnionToIntersection,\n} from './utils.js';\n", "'use strict';\n\n/** @template [T=undefined] */\nclass ErrorWithCause extends Error { // linemod-prefix-with: export\n  /**\n   * @param {string} message\n   * @param {{ cause?: T }} options\n   */\n  constructor (message, { cause } = {}) {\n    super(message);\n\n    /** @type {string} */\n    this.name = ErrorWithCause.name;\n    if (cause) {\n      /** @type {T} */\n      this.cause = cause;\n    }\n    /** @type {string} */\n    this.message = message;\n  }\n}\n\nmodule.exports = {      // linemod-remove\n  ErrorWithCause,       // linemod-remove\n};                      // linemod-remove\n", "'use strict';\n\n/**\n * @template {Error} T\n * @param {unknown} err\n * @param {new(...args: any[]) => T} reference\n * @returns {T|undefined}\n */\nconst findCauseByReference = (err, reference) => { // linemod-prefix-with: export\n  if (!err || !reference) return;\n  if (!(err instanceof Error)) return;\n  if (\n    !(reference.prototype instanceof Error) &&\n    // @ts-ignore\n    reference !== Error\n  ) return;\n\n  /**\n   * Ensures we don't go circular\n   *\n   * @type {Set<Error>}\n   */\n  const seen = new Set();\n\n  /** @type {Error|undefined} */\n  let currentErr = err;\n\n  while (currentErr && !seen.has(currentErr)) {\n    seen.add(currentErr);\n\n    if (currentErr instanceof reference) {\n      return currentErr;\n    }\n\n    currentErr = getErrorCause(currentErr);\n  }\n};\n\n/**\n * @param {Error|{ cause?: unknown|(()=>err)}} err\n * @returns {Error|undefined}\n */\nconst getErrorCause = (err) => { // linemod-prefix-with: export\n  if (!err || typeof err !== 'object' || !('cause' in err)) {\n    return;\n  }\n\n  // VError / NError style causes\n  if (typeof err.cause === 'function') {\n    const causeResult = err.cause();\n\n    return causeResult instanceof Error\n      ? causeResult\n      : undefined;\n  } else {\n    return err.cause instanceof Error\n      ? err.cause\n      : undefined;\n  }\n};\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @returns {string}\n */\nconst _stackWithCauses = (err, seen) => {\n  if (!(err instanceof Error)) return '';\n\n  const stack = err.stack || '';\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return stack + '\\ncauses have become circular...';\n  }\n\n  const cause = getErrorCause(err);\n\n  // TODO: Follow up in https://github.com/nodejs/node/issues/38725#issuecomment-920309092 on how to log stuff\n\n  if (cause) {\n    seen.add(err);\n    return (stack + '\\ncaused by: ' + _stackWithCauses(cause, seen));\n  } else {\n    return stack;\n  }\n};\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst stackWithCauses = (err) => _stackWithCauses(err, new Set()); // linemod-prefix-with: export\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @param {boolean} [skip]\n * @returns {string}\n */\nconst _messageWithCauses = (err, seen, skip) => {\n  if (!(err instanceof Error)) return '';\n\n  const message = skip ? '' : (err.message || '');\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return message + ': ...';\n  }\n\n  const cause = getErrorCause(err);\n\n  if (cause) {\n    seen.add(err);\n\n    const skipIfVErrorStyleCause = 'cause' in err && typeof err.cause === 'function';\n\n    return (message +\n      (skipIfVErrorStyleCause ? '' : ': ') +\n      _messageWithCauses(cause, seen, skipIfVErrorStyleCause));\n  } else {\n    return message;\n  }\n};\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst messageWithCauses = (err) => _messageWithCauses(err, new Set()); // linemod-prefix-with: export\n\nmodule.exports = {      // linemod-remove\n  findCauseByReference, // linemod-remove\n  getErrorCause,        // linemod-remove\n  stackWithCauses,      // linemod-remove\n  messageWithCauses,    // linemod-remove\n};                      // linemod-remove\n", "'use strict';\n\nconst { ErrorWithCause } = require('./lib/error-with-cause'); // linemod-replace-with: export { ErrorWithCause } from './lib/error-with-cause.mjs';\n\nconst { // linemod-replace-with: export {\n  findCauseByReference,\n  getErrorCause,\n  messageWithCauses,\n  stackWithCauses,\n} = require('./lib/helpers'); // linemod-replace-with: } from './lib/helpers.mjs';\n\nmodule.exports = {      // linemod-remove\n  ErrorWithCause,       // linemod-remove\n  findCauseByReference, // linemod-remove\n  getErrorCause,        // linemod-remove\n  stackWithCauses,      // linemod-remove\n  messageWithCauses,    // linemod-remove\n};                      // linemod-remove\n", "//\n// Types\n//\n\n/**\n * Makes every specified property of the specified object type mutable.\n *\n * @template ObjectValue - The object whose readonly properties to make mutable.\n * @template TargetKey - The property key(s) to make mutable.\n */\nexport type Mutable<\n  ObjectValue extends Record<string, unknown>,\n  TargetKey extends keyof ObjectValue,\n> = {\n  -readonly [Key in keyof Pick<ObjectValue, TargetKey>]: ObjectValue[Key];\n} & {\n  [Key in keyof Omit<ObjectValue, TargetKey>]: ObjectValue[Key];\n};\n\n/**\n * Get a type representing the public interface of the given type. The\n * returned type will have all public properties, but will omit private\n * properties.\n *\n * @template Interface - The interface to return a public representation of.\n */\nexport type PublicInterface<Interface> = Pick<Interface, keyof Interface>;\n\n/**\n * Useful for representing some value that _might_ be present and / or complete.\n *\n * @template Value - The value that might be present or complete.\n */\nexport type PartialOrAbsent<Value> = Partial<Value> | null | undefined;\n\n/**\n * Like {@link Array}, but always non-empty.\n *\n * @template Element - The non-empty array member type.\n */\nexport type NonEmptyArray<Element> = [Element, ...Element[]];\n\n/**\n * A JavaScript object that is not `null`, a function, or an array.\n */\nexport type RuntimeObject = Record<PropertyKey, unknown>;\n\n//\n// Type Guards\n//\n\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nexport function isNonEmptyArray<Element>(\n  value: Element[],\n): value is NonEmptyArray<Element> {\n  return Array.isArray(value) && value.length > 0;\n}\n\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nexport function isNullOrUndefined(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nexport function isObject(value: unknown): value is RuntimeObject {\n  return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\n\n//\n// Other utility functions\n//\n\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nexport const hasProperty = <\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  ObjectToCheck extends Object,\n  Property extends PropertyKey,\n>(\n  objectToCheck: ObjectToCheck,\n  name: Property,\n): objectToCheck is ObjectToCheck &\n  Record<\n    Property,\n    Property extends keyof ObjectToCheck ? ObjectToCheck[Property] : unknown\n  > => Object.hasOwnProperty.call(objectToCheck, name);\n\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nexport function getKnownPropertyNames<Key extends PropertyKey>(\n  object: Partial<Record<Key, any>>,\n): Key[] {\n  return Object.getOwnPropertyNames(object) as Key[];\n}\n\nexport type PlainObject = Record<number | string | symbol, unknown>;\n\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nexport enum JsonSize {\n  Null = 4,\n  Comma = 1,\n  Wrapper = 1,\n  True = 4,\n  False = 5,\n  Quote = 1,\n  Colon = 1,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Date = 24,\n}\n\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexport const ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nexport function isPlainObject(value: unknown): value is PlainObject {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n\n  try {\n    let proto = value;\n    while (Object.getPrototypeOf(proto) !== null) {\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    return Object.getPrototypeOf(value) === proto;\n  } catch (_) {\n    return false;\n  }\n}\n\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nexport function isASCII(character: string) {\n  return character.charCodeAt(0) <= 127;\n}\n\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nexport function calculateStringSize(value: string): number {\n  const size = value.split('').reduce((total, character) => {\n    if (isASCII(character)) {\n      return total + 1;\n    }\n    return total + 2;\n  }, 0);\n\n  // Also detect characters that need backslash escape\n  return size + (value.match(ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\n\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nexport function calculateNumberSize(value: number): number {\n  return value.toString().length;\n}\n", "import { ErrorWithCause } from 'pony-cause';\n\nimport { isNullOrUndefined, isObject } from './misc';\n\n/**\n * Type guard for determining whether the given value is an instance of Error.\n * For errors generated via `fs.promises`, `error instanceof Error` won't work,\n * so we have to come up with another way of testing.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nfunction isError(error: unknown): error is Error {\n  return (\n    error instanceof Error ||\n    (isObject(error) && error.constructor.name === 'Error')\n  );\n}\n\n/**\n * Type guard for determining whether the given value is an error object with a\n * `code` property such as the type of error that Node throws for filesystem\n * operations, etc.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nexport function isErrorWithCode(error: unknown): error is { code: string } {\n  return typeof error === 'object' && error !== null && 'code' in error;\n}\n\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nexport function isErrorWithMessage(\n  error: unknown,\n): error is { message: string } {\n  return typeof error === 'object' && error !== null && 'message' in error;\n}\n\n/**\n * Type guard for determining whether the given value is an error object with a\n * `stack` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns A boolean.\n */\nexport function isErrorWithStack(error: unknown): error is { stack: string } {\n  return typeof error === 'object' && error !== null && 'stack' in error;\n}\n\n/**\n * Attempts to obtain the message from a possible error object, defaulting to an\n * empty string if it is impossible to do so.\n *\n * @param error - The possible error to get the message from.\n * @returns The message if `error` is an object with a `message` property;\n * the string version of `error` if it is not `undefined` or `null`; otherwise\n * an empty string.\n */\nexport function getErrorMessage(error: unknown): string {\n  if (isErrorWithMessage(error) && typeof error.message === 'string') {\n    return error.message;\n  }\n\n  if (isNullOrUndefined(error)) {\n    return '';\n  }\n\n  return String(error);\n}\n\n/**\n * Builds a new error object, linking it to the original error via the `cause`\n * property if it is an Error.\n *\n * This function is useful to reframe error messages in general, but is\n * _critical_ when interacting with any of Node's filesystem functions as\n * provided via `fs.promises`, because these do not produce stack traces in the\n * case of an I/O error (see <https://github.com/nodejs/node/issues/30944>).\n *\n * @param originalError - The error to be wrapped (something throwable).\n * @param message - The desired message of the new error.\n * @returns A new error object.\n */\nexport function wrapError<Throwable>(\n  originalError: Throwable,\n  message: string,\n): Error & { code?: string } {\n  if (isError(originalError)) {\n    let error: Error & { code?: string };\n    if (Error.length === 2) {\n      // for some reason `tsserver` is not complaining that the\n      // Error constructor doesn't support a second argument in the editor,\n      // but `tsc` does. Error causes are not supported by our current tsc target (ES2020, we need ES2022 to make this work)\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      error = new Error(message, { cause: originalError });\n    } else {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      error = new ErrorWithCause(message, { cause: originalError });\n    }\n\n    if (isErrorWithCode(originalError)) {\n      error.code = originalError.code;\n    }\n\n    return error;\n  }\n\n  if (message.length > 0) {\n    return new Error(`${String(originalError)}: ${message}`);\n  }\n\n  return new Error(String(originalError));\n}\n", "import type { Struct } from '@metamask/superstruct';\nimport { assert as assertSuperstruct } from '@metamask/superstruct';\n\nimport { getErrorMessage } from './errors';\n\nexport type AssertionErrorConstructor =\n  | (new (args: { message: string }) => Error)\n  | ((args: { message: string }) => Error);\n\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(\n  fn: AssertionErrorConstructor,\n): fn is new (args: { message: string }) => Error {\n  /* istanbul ignore next */\n  return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error: unknown): string {\n  // We'll add our own period.\n  return getErrorMessage(error).replace(/\\.$/u, '');\n}\n\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper: AssertionErrorConstructor, message: string) {\n  if (isConstructable(ErrorWrapper)) {\n    return new ErrorWrapper({\n      message,\n    });\n  }\n  return ErrorWrapper({\n    message,\n  });\n}\n\n/**\n * The default error class that is thrown if an assertion fails.\n */\nexport class AssertionError extends Error {\n  readonly code = 'ERR_ASSERTION';\n\n  constructor(options: { message: string }) {\n    super(options.message);\n  }\n}\n\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nexport function assert(\n  value: any,\n  message: string | Error = 'Assertion failed.',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper: AssertionErrorConstructor = AssertionError,\n): asserts value {\n  if (!value) {\n    if (message instanceof Error) {\n      throw message;\n    }\n\n    throw getError(ErrorWrapper, message);\n  }\n}\n\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nexport function assertStruct<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  errorPrefix = 'Assertion failed',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper: AssertionErrorConstructor = AssertionError,\n): asserts value is Type {\n  try {\n    assertSuperstruct(value, struct);\n  } catch (error) {\n    throw getError(\n      ErrorWrapper,\n      `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`,\n    );\n  }\n}\n\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nexport function assertExhaustive(_object: never): never {\n  throw new Error(\n    'Invalid branch reached. Should be detected during compilation.',\n  );\n}\n", "import type { Struct } from '@metamask/superstruct';\nimport { pattern } from '@metamask/superstruct';\n\nimport { assert } from './assert';\n\nexport type Base64Options = {\n  /**\n   * Is the `=` padding at the end required or not.\n   *\n   * @default false\n   */\n  // Padding is optional in RFC 4648, that's why the default value is false\n  paddingRequired?: boolean;\n  /**\n   * Which character set should be used.\n   * The sets are based on {@link https://datatracker.ietf.org/doc/html/rfc4648 RFC 4648}.\n   *\n   * @default 'base64'\n   */\n  characterSet?: 'base64' | 'base64url';\n};\n\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nexport const base64 = <Type extends string, Schema>(\n  struct: Struct<Type, Schema>,\n  options: Base64Options = {},\n) => {\n  const paddingRequired = options.paddingRequired ?? false;\n  const characterSet = options.characterSet ?? 'base64';\n\n  let letters: string;\n  if (characterSet === 'base64') {\n    letters = String.raw`[A-Za-z0-9+\\/]`;\n  } else {\n    assert(characterSet === 'base64url');\n    letters = String.raw`[-_A-Za-z0-9]`;\n  }\n\n  let re: RegExp;\n  if (paddingRequired) {\n    re = new RegExp(\n      `^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`,\n      'u',\n    );\n  } else {\n    re = new RegExp(\n      `^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`,\n      'u',\n    );\n  }\n\n  return pattern(struct, re);\n};\n", "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\nexport interface Coder<F, T> {\n  encode(from: F): T;\n  decode(to: T): F;\n}\n\nexport interface BytesCoder extends Coder<Uint8Array, string> {\n  encode: (data: Uint8Array) => string;\n  decode: (str: string) => Uint8Array;\n}\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\nfunction isArrayOf(isString: boolean, arr: any[]) {\n  if (!Array.isArray(arr)) return false;\n  if (arr.length === 0) return true;\n  if (isString) {\n    return arr.every((item) => typeof item === 'string');\n  } else {\n    return arr.every((item) => Number.isSafeInteger(item));\n  }\n}\n\n// no abytes: seems to have 10% slowdown. Why?!\n\nfunction afn(input: Function): input is Function {\n  if (typeof input !== 'function') throw new Error('function expected');\n  return true;\n}\n\nfunction astr(label: string, input: unknown): input is string {\n  if (typeof input !== 'string') throw new Error(`${label}: string expected`);\n  return true;\n}\n\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n)) throw new Error(`invalid integer: ${n}`);\n}\n\nfunction aArr(input: any[]) {\n  if (!Array.isArray(input)) throw new Error('array expected');\n}\nfunction astrArr(label: string, input: string[]) {\n  if (!isArrayOf(true, input)) throw new Error(`${label}: array of strings expected`);\n}\nfunction anumArr(label: string, input: number[]) {\n  if (!isArrayOf(false, input)) throw new Error(`${label}: array of numbers expected`);\n}\n\n// TODO: some recusive type inference so it would check correct order of input/output inside rest?\n// like <string, number>, <number, bytes>, <bytes, float>\ntype Chain = [Coder<any, any>, ...Coder<any, any>[]];\n// Extract info from Coder type\ntype Input<F> = F extends Coder<infer T, any> ? T : never;\ntype Output<F> = F extends Coder<any, infer T> ? T : never;\n// Generic function for arrays\ntype First<T> = T extends [infer U, ...any[]] ? U : never;\ntype Last<T> = T extends [...any[], infer U] ? U : never;\ntype Tail<T> = T extends [any, ...infer U] ? U : never;\n\ntype AsChain<C extends Chain, Rest = Tail<C>> = {\n  // C[K] = Coder<Input<C[K]>, Input<Rest[k]>>\n  [K in keyof C]: Coder<Input<C[K]>, Input<K extends keyof Rest ? Rest[K] : any>>;\n};\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain<T extends Chain & AsChain<T>>(...args: T): Coder<Input<First<T>>, Output<Last<T>>> {\n  const id = (a: any) => a;\n  // Wrap call in closure so JIT can inline calls\n  const wrap = (a: any, b: any) => (c: any) => a(b(c));\n  // Construct chain of args[-1].encode(args[-2].encode([...]))\n  const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n  // Construct chain of args[0].decode(args[1].decode(...))\n  const decode = args.map((x) => x.decode).reduce(wrap, id);\n  return { encode, decode };\n}\n\n/**\n * Encodes integer radix representation to array of strings using alphabet and back.\n * Could also be array of strings.\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(letters: string | string[]): Coder<number[], string[]> {\n  // mapping 1 to \"b\"\n  const lettersA = typeof letters === 'string' ? letters.split('') : letters;\n  const len = lettersA.length;\n  astrArr('alphabet', lettersA);\n\n  // mapping \"b\" to 1\n  const indexes = new Map(lettersA.map((l, i) => [l, i]));\n  return {\n    encode: (digits: number[]) => {\n      aArr(digits);\n      return digits.map((i) => {\n        if (!Number.isSafeInteger(i) || i < 0 || i >= len)\n          throw new Error(\n            `alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`\n          );\n        return lettersA[i]!;\n      });\n    },\n    decode: (input: string[]): number[] => {\n      aArr(input);\n      return input.map((letter) => {\n        astr('alphabet.decode', letter);\n        const i = indexes.get(letter);\n        if (i === undefined) throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\n        return i;\n      });\n    },\n  };\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = ''): Coder<string[], string> {\n  astr('join', separator);\n  return {\n    encode: (from) => {\n      astrArr('join.decode', from);\n      return from.join(separator);\n    },\n    decode: (to) => {\n      astr('join.decode', to);\n      return to.split(separator);\n    },\n  };\n}\n\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits: number, chr = '='): Coder<string[], string[]> {\n  anumber(bits);\n  astr('padding', chr);\n  return {\n    encode(data: string[]): string[] {\n      astrArr('padding.encode', data);\n      while ((data.length * bits) % 8) data.push(chr);\n      return data;\n    },\n    decode(input: string[]): string[] {\n      astrArr('padding.decode', input);\n      let end = input.length;\n      if ((end * bits) % 8)\n        throw new Error('padding: invalid, string should have whole number of bytes');\n      for (; end > 0 && input[end - 1] === chr; end--) {\n        const last = end - 1;\n        const byte = last * bits;\n        if (byte % 8 === 0) throw new Error('padding: invalid, string has too much padding');\n      }\n      return input.slice(0, end);\n    },\n  };\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize<T>(fn: (val: T) => T): Coder<T, T> {\n  afn(fn);\n  return { encode: (from: T) => from, decode: (to: T) => fn(to) };\n}\n\n/**\n * Slow: O(n^2) time complexity\n */\nfunction convertRadix(data: number[], from: number, to: number): number[] {\n  // base 1 is impossible\n  if (from < 2) throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\n  if (to < 2) throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\n  aArr(data);\n  if (!data.length) return [];\n  let pos = 0;\n  const res = [];\n  const digits = Array.from(data, (d) => {\n    anumber(d);\n    if (d < 0 || d >= from) throw new Error(`invalid integer: ${d}`);\n    return d;\n  });\n  const dlen = digits.length;\n  while (true) {\n    let carry = 0;\n    let done = true;\n    for (let i = pos; i < dlen; i++) {\n      const digit = digits[i]!;\n      const fromCarry = from * carry;\n      const digitBase = fromCarry + digit;\n      if (\n        !Number.isSafeInteger(digitBase) ||\n        fromCarry / from !== carry ||\n        digitBase - digit !== fromCarry\n      ) {\n        throw new Error('convertRadix: carry overflow');\n      }\n      const div = digitBase / to;\n      carry = digitBase % to;\n      const rounded = Math.floor(div);\n      digits[i] = rounded;\n      if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n        throw new Error('convertRadix: carry overflow');\n      if (!done) continue;\n      else if (!rounded) pos = i;\n      else done = false;\n    }\n    res.push(carry);\n    if (done) break;\n  }\n  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);\n  return res.reverse();\n}\n\nconst gcd = (a: number, b: number): number => (b === 0 ? a : gcd(b, a % b));\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from: number, to: number) =>\n  from + (to - gcd(from, to));\nconst powers: number[] = /* @__PURE__ */ (() => {\n  let res = [];\n  for (let i = 0; i < 40; i++) res.push(2 ** i);\n  return res;\n})();\n/**\n * Implemented with numbers, because BigInt is 5x slower\n */\nfunction convertRadix2(data: number[], from: number, to: number, padding: boolean): number[] {\n  aArr(data);\n  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);\n  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);\n  if (radix2carry(from, to) > 32) {\n    throw new Error(\n      `convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`\n    );\n  }\n  let carry = 0;\n  let pos = 0; // bitwise position in current element\n  const max = powers[from]!;\n  const mask = powers[to]! - 1;\n  const res: number[] = [];\n  for (const n of data) {\n    anumber(n);\n    if (n >= max) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n    carry = (carry << from) | n;\n    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n    pos += from;\n    for (; pos >= to; pos -= to) res.push(((carry >> (pos - to)) & mask) >>> 0);\n    const pow = powers[pos];\n    if (pow === undefined) throw new Error('invalid carry');\n    carry &= pow - 1; // clean carry, otherwise it will cause overflow\n  }\n  carry = (carry << (to - pos)) & mask;\n  if (!padding && pos >= from) throw new Error('Excess padding');\n  if (!padding && carry > 0) throw new Error(`Non-zero padding: ${carry}`);\n  if (padding && pos > 0) res.push(carry >>> 0);\n  return res;\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num: number): Coder<Uint8Array, number[]> {\n  anumber(num);\n  const _256 = 2 ** 8;\n  return {\n    encode: (bytes: Uint8Array) => {\n      if (!isBytes(bytes)) throw new Error('radix.encode input should be Uint8Array');\n      return convertRadix(Array.from(bytes), _256, num);\n    },\n    decode: (digits: number[]) => {\n      anumArr('radix.decode', digits);\n      return Uint8Array.from(convertRadix(digits, num, _256));\n    },\n  };\n}\n\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits: number, revPadding = false): Coder<Uint8Array, number[]> {\n  anumber(bits);\n  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');\n  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n    throw new Error('radix2: carry overflow');\n  return {\n    encode: (bytes: Uint8Array) => {\n      if (!isBytes(bytes)) throw new Error('radix2.encode input should be Uint8Array');\n      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n    },\n    decode: (digits: number[]) => {\n      anumArr('radix2.decode', digits);\n      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n    },\n  };\n}\n\ntype ArgumentTypes<F extends Function> = F extends (...args: infer A) => any ? A : never;\nfunction unsafeWrapper<T extends (...args: any) => any>(fn: T) {\n  afn(fn);\n  return function (...args: ArgumentTypes<T>): ReturnType<T> | void {\n    try {\n      return fn.apply(null, args);\n    } catch (e) {}\n  };\n}\n\nfunction checksum(\n  len: number,\n  fn: (data: Uint8Array) => Uint8Array\n): Coder<Uint8Array, Uint8Array> {\n  anumber(len);\n  afn(fn);\n  return {\n    encode(data: Uint8Array) {\n      if (!isBytes(data)) throw new Error('checksum.encode: input should be Uint8Array');\n      const sum = fn(data).slice(0, len);\n      const res = new Uint8Array(data.length + len);\n      res.set(data);\n      res.set(sum, data.length);\n      return res;\n    },\n    decode(data: Uint8Array) {\n      if (!isBytes(data)) throw new Error('checksum.decode: input should be Uint8Array');\n      const payload = data.slice(0, -len);\n      const oldChecksum = data.slice(-len);\n      const newChecksum = fn(payload).slice(0, len);\n      for (let i = 0; i < len; i++)\n        if (newChecksum[i] !== oldChecksum[i]) throw new Error('Invalid checksum');\n      return payload;\n    },\n  };\n}\n\n// prettier-ignore\nexport const utils: { alphabet: typeof alphabet; chain: typeof chain; checksum: typeof checksum; convertRadix: typeof convertRadix; convertRadix2: typeof convertRadix2; radix: typeof radix; radix2: typeof radix2; join: typeof join; padding: typeof padding; } = {\n  alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n\n// RFC 4648 aka RFC 3548\n// ---------------------\n\n/**\n * base16 encoding from RFC 4648.\n * @example\n * ```js\n * base16.encode(Uint8Array.from([0x12, 0xab]));\n * // => '12AB'\n * ```\n */\nexport const base16: BytesCoder = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\n\n/**\n * base32 encoding from RFC 4648. Has padding.\n * Use `base32nopad` for unpadded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ===='\n * base32.decode('CKVQ====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32: BytesCoder = chain(\n  radix2(5),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\n  padding(5),\n  join('')\n);\n\n/**\n * base32 encoding from RFC 4648. No padding.\n * Use `base32` for padded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ'\n * base32nopad.decode('CKVQ');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32nopad: BytesCoder = chain(\n  radix2(5),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\n  join('')\n);\n/**\n * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hexnopad` for unpadded version.\n * @example\n * ```js\n * base32hex.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG===='\n * base32hex.decode('2ALG====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hex: BytesCoder = chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\n  padding(5),\n  join('')\n);\n\n/**\n * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hex` for padded version.\n * @example\n * ```js\n * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG'\n * base32hexnopad.decode('2ALG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hexnopad: BytesCoder = chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\n  join('')\n);\n/**\n * base32 encoding from RFC 4648. Doug Crockford's version.\n * https://www.crockford.com/base32.html\n * @example\n * ```js\n * base32crockford.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ANG'\n * base32crockford.decode('2ANG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32crockford: BytesCoder = chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'),\n  join(''),\n  normalize((s: string) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1'))\n);\n\n// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64\n// prettier-ignore\nconst hasBase64Builtin: boolean = /* @__PURE__ */ (() =>\n  typeof (Uint8Array as any).from([]).toBase64 === 'function' &&\n  typeof (Uint8Array as any).fromBase64 === 'function')();\n\nconst decodeBase64Builtin = (s: string, isUrl: boolean) => {\n  astr('base64', s);\n  const re = isUrl ? /^[A-Za-z0-9=_-]+$/ : /^[A-Za-z0-9=+/]+$/;\n  const alphabet = isUrl ? 'base64url' : 'base64';\n  if (s.length > 0 && !re.test(s)) throw new Error('invalid base64');\n  return (Uint8Array as any).fromBase64(s, { alphabet, lastChunkHandling: 'strict' });\n};\n\n/**\n * base64 from RFC 4648. Padded.\n * Use `base64nopad` for unpadded version.\n * Also check out `base64url`, `base64urlnopad`.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64: BytesCoder = hasBase64Builtin ? {\n  encode(b) { abytes(b); return (b as any).toBase64(); },\n  decode(s) { return decodeBase64Builtin(s, false); },\n} : chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\n  padding(6),\n  join('')\n);\n/**\n * base64 from RFC 4648. No padding.\n * Use `base64` for padded version.\n * @example\n * ```js\n * base64nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64nopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64nopad: BytesCoder = chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\n  join('')\n);\n\n/**\n * base64 from RFC 4648, using URL-safe alphabet. Padded.\n * Use `base64urlnopad` for unpadded version.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64url.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64url.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64url: BytesCoder = hasBase64Builtin ? {\n  encode(b) { abytes(b); return (b as any).toBase64({ alphabet: 'base64url' }); },\n  decode(s) { return decodeBase64Builtin(s, true); },\n} : chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\n  padding(6),\n  join('')\n);\n\n/**\n * base64 from RFC 4648, using URL-safe alphabet. No padding.\n * Use `base64url` for padded version.\n * @example\n * ```js\n * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64urlnopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64urlnopad: BytesCoder = chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\n  join('')\n);\n\n// base58 code\n// -----------\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc: string) =>\n  chain(radix(58), alphabet(abc), join(''));\n\n/**\n * base58: base64 without ambigous characters +, /, 0, O, I, l.\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\n * @example\n * ```js\n * base58.decode('01abcdef');\n * // => '3UhJW'\n * ```\n */\nexport const base58: BytesCoder = genBase58(\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n);\n/**\n * base58: flickr version. Check out `base58`.\n */\nexport const base58flickr: BytesCoder = genBase58(\n  '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n);\n/**\n * base58: XRP version. Check out `base58`.\n */\nexport const base58xrp: BytesCoder = genBase58(\n  'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'\n);\n\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n\n/**\n * base58: XMR version. Check out `base58`.\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n * Block encoding significantly reduces quadratic complexity of base58.\n */\nexport const base58xmr: BytesCoder = {\n  encode(data: Uint8Array) {\n    let res = '';\n    for (let i = 0; i < data.length; i += 8) {\n      const block = data.subarray(i, i + 8);\n      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length]!, '1');\n    }\n    return res;\n  },\n  decode(str: string) {\n    let res: number[] = [];\n    for (let i = 0; i < str.length; i += 11) {\n      const slice = str.slice(i, i + 11);\n      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n      const block = base58.decode(slice);\n      for (let j = 0; j < block.length - blockLen; j++) {\n        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');\n      }\n      res = res.concat(Array.from(block.slice(block.length - blockLen)));\n    }\n    return Uint8Array.from(res);\n  },\n};\n\n/**\n * Method, which creates base58check encoder.\n * Requires function, calculating sha256.\n */\nexport const createBase58check = (sha256: (data: Uint8Array) => Uint8Array): BytesCoder =>\n  chain(\n    checksum(4, (data) => sha256(sha256(data))),\n    base58\n  );\n\n/**\n * Use `createBase58check` instead.\n * @deprecated\n */\nexport const base58check: (sha256: (data: Uint8Array) => Uint8Array) => BytesCoder =\n  createBase58check;\n\n// Bech32 code\n// -----------\nexport interface Bech32Decoded<Prefix extends string = string> {\n  prefix: Prefix;\n  words: number[];\n}\nexport interface Bech32DecodedWithArray<Prefix extends string = string> {\n  prefix: Prefix;\n  words: number[];\n  bytes: Uint8Array;\n}\n\nconst BECH_ALPHABET: Coder<number[], string> = chain(\n  alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'),\n  join('')\n);\n\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre: number): number {\n  const b = pre >> 25;\n  let chk = (pre & 0x1ffffff) << 5;\n  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n    if (((b >> i) & 1) === 1) chk ^= POLYMOD_GENERATORS[i]!;\n  }\n  return chk;\n}\n\nfunction bechChecksum(prefix: string, words: number[], encodingConst = 1): string {\n  const len = prefix.length;\n  let chk = 1;\n  for (let i = 0; i < len; i++) {\n    const c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);\n    chk = bech32Polymod(chk) ^ (c >> 5);\n  }\n  chk = bech32Polymod(chk);\n  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n  for (let v of words) chk = bech32Polymod(chk) ^ v;\n  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);\n  chk ^= encodingConst;\n  return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]!], 30, 5, false));\n}\n\nexport interface Bech32 {\n  encode<Prefix extends string>(\n    prefix: Prefix,\n    words: number[] | Uint8Array,\n    limit?: number | false\n  ): `${Lowercase<Prefix>}1${string}`;\n  decode<Prefix extends string>(\n    str: `${Prefix}1${string}`,\n    limit?: number | false\n  ): Bech32Decoded<Prefix>;\n  encodeFromBytes(prefix: string, bytes: Uint8Array): string;\n  decodeToBytes(str: string): Bech32DecodedWithArray;\n  decodeUnsafe(str: string, limit?: number | false): void | Bech32Decoded<string>;\n  fromWords(to: number[]): Uint8Array;\n  fromWordsUnsafe(to: number[]): void | Uint8Array;\n  toWords(from: Uint8Array): number[];\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding: 'bech32' | 'bech32m'): Bech32 {\n  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n  const _words = radix2(5);\n  const fromWords = _words.decode;\n  const toWords = _words.encode;\n  const fromWordsUnsafe = unsafeWrapper(fromWords);\n\n  function encode<Prefix extends string>(\n    prefix: Prefix,\n    words: number[] | Uint8Array,\n    limit: number | false = 90\n  ): `${Lowercase<Prefix>}1${string}` {\n    astr('bech32.encode prefix', prefix);\n    if (isBytes(words)) words = Array.from(words);\n    anumArr('bech32.encode', words);\n    const plen = prefix.length;\n    if (plen === 0) throw new TypeError(`Invalid prefix length ${plen}`);\n    const actualLength = plen + 7 + words.length;\n    if (limit !== false && actualLength > limit)\n      throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n    const lowered = prefix.toLowerCase();\n    const sum = bechChecksum(lowered, words, ENCODING_CONST);\n    return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}` as `${Lowercase<Prefix>}1${string}`;\n  }\n\n  function decode<Prefix extends string>(\n    str: `${Prefix}1${string}`,\n    limit?: number | false\n  ): Bech32Decoded<Prefix>;\n  function decode(str: string, limit?: number | false): Bech32Decoded;\n  function decode(str: string, limit: number | false = 90): Bech32Decoded {\n    astr('bech32.decode input', str);\n    const slen = str.length;\n    if (slen < 8 || (limit !== false && slen > limit))\n      throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\n    // don't allow mixed case\n    const lowered = str.toLowerCase();\n    if (str !== lowered && str !== str.toUpperCase())\n      throw new Error(`String must be lowercase or uppercase`);\n    const sepIndex = lowered.lastIndexOf('1');\n    if (sepIndex === 0 || sepIndex === -1)\n      throw new Error(`Letter \"1\" must be present between prefix and data only`);\n    const prefix = lowered.slice(0, sepIndex);\n    const data = lowered.slice(sepIndex + 1);\n    if (data.length < 6) throw new Error('Data must be at least 6 characters long');\n    const words = BECH_ALPHABET.decode(data).slice(0, -6);\n    const sum = bechChecksum(prefix, words, ENCODING_CONST);\n    if (!data.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n    return { prefix, words };\n  }\n\n  const decodeUnsafe = unsafeWrapper(decode);\n\n  function decodeToBytes(str: string): Bech32DecodedWithArray {\n    const { prefix, words } = decode(str, false);\n    return { prefix, words, bytes: fromWords(words) };\n  }\n\n  function encodeFromBytes(prefix: string, bytes: Uint8Array) {\n    return encode(prefix, toWords(bytes));\n  }\n\n  return {\n    encode,\n    decode,\n    encodeFromBytes,\n    decodeToBytes,\n    decodeUnsafe,\n    fromWords,\n    fromWordsUnsafe,\n    toWords,\n  };\n}\n\n/**\n * bech32 from BIP 173. Operates on words.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32: Bech32 = genBech32('bech32');\n\n/**\n * bech32m from BIP 350. Operates on words.\n * It was to mitigate `bech32` weaknesses.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32m: Bech32 = genBech32('bech32m');\n\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\n * @example\n * ```js\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\n * const str = utf8.encode(b); // \"hey\"\n * ```\n */\nexport const utf8: BytesCoder = {\n  encode: (data) => new TextDecoder().decode(data),\n  decode: (str) => new TextEncoder().encode(str),\n};\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\n// prettier-ignore\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  typeof (Uint8Array as any).from([]).toHex === 'function' &&\n  typeof (Uint8Array as any).fromHex === 'function')();\n// prettier-ignore\nconst hexBuiltin: BytesCoder = {\n  encode(data) { abytes(data); return (data as any).toHex(); },\n  decode(s) { astr('hex', s); return (Uint8Array as any).fromHex(s); },\n};\n/**\n * hex string decoder. Uses built-in function, when available.\n * @example\n * ```js\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\n * const str = hex.encode(b); // \"0102ff\"\n * ```\n */\nexport const hex: BytesCoder = hasHexBuiltin\n  ? hexBuiltin\n  : chain(\n      radix2(4),\n      alphabet('0123456789abcdef'),\n      join(''),\n      normalize((s: string) => {\n        if (typeof s !== 'string' || s.length % 2 !== 0)\n          throw new TypeError(\n            `hex.decode: expected string, got ${typeof s} with length ${s.length}`\n          );\n        return s.toLowerCase();\n      })\n    );\n\nexport type SomeCoders = {\n  utf8: BytesCoder;\n  hex: BytesCoder;\n  base16: BytesCoder;\n  base32: BytesCoder;\n  base64: BytesCoder;\n  base64url: BytesCoder;\n  base58: BytesCoder;\n  base58xmr: BytesCoder;\n};\n// prettier-ignore\nconst CODERS: SomeCoders = {\n  utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\ntype CoderType = keyof SomeCoders;\nconst coderTypeError =\n  'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\n\n/** @deprecated */\nexport const bytesToString = (type: CoderType, bytes: Uint8Array): string => {\n  if (typeof type !== 'string' || !CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\n  if (!isBytes(bytes)) throw new TypeError('bytesToString() expects Uint8Array');\n  return CODERS[type].encode(bytes);\n};\n\n/** @deprecated */\nexport const str: (type: CoderType, bytes: Uint8Array) => string = bytesToString; // as in python, but for bytes only\n\n/** @deprecated */\nexport const stringToBytes = (type: CoderType, str: string): Uint8Array => {\n  if (!CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\n  if (typeof str !== 'string') throw new TypeError('stringToBytes() expects string');\n  return CODERS[type].decode(str);\n};\n/** @deprecated */\nexport const bytes: (type: CoderType, str: string) => Uint8Array = stringToBytes;\n", "import { pattern, type Struct, string } from '@metamask/superstruct';\nimport { keccak_256 as keccak256 } from '@noble/hashes/sha3';\nimport { memoize } from 'lodash';\n\nimport { assert } from './assert';\n\nexport type Hex = `0x${string}`;\n\n// Use native regexes instead of superstruct for maximum performance.\n// Pre-compiled regex for maximum performance - avoids recompilation on each call\nconst HEX_REGEX = /^(?:0x)?[0-9a-f]+$/iu;\nconst STRICT_HEX_REGEX = /^0x[0-9a-f]+$/iu;\nconst HEX_ADDRESS_REGEX = /^0x[0-9a-f]{40}$/u;\nconst HEX_CHECKSUM_ADDRESS_REGEX = /^0x[0-9a-fA-F]{40}$/u;\n\nexport const HexStruct = pattern(string(), HEX_REGEX);\nexport const StrictHexStruct = pattern(string(), STRICT_HEX_REGEX) as Struct<\n  Hex,\n  null\n>;\nexport const HexAddressStruct = pattern(string(), HEX_ADDRESS_REGEX) as Struct<\n  Hex,\n  null\n>;\nexport const HexChecksumAddressStruct = pattern(\n  string(),\n  HEX_CHECKSUM_ADDRESS_REGEX,\n) as Struct<Hex, null>;\n\nconst isString = (value: unknown): value is string => typeof value === 'string';\n\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nexport function isHexString(value: unknown): value is string {\n  return isString(value) && HEX_REGEX.test(value);\n}\n\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nexport function isStrictHexString(value: unknown): value is Hex {\n  return isString(value) && STRICT_HEX_REGEX.test(value);\n}\n\n/**\n * Check if a string is a valid hex address.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex address.\n */\nexport function isHexAddress(value: unknown): value is Hex {\n  return isString(value) && HEX_ADDRESS_REGEX.test(value);\n}\n\n/**\n * Check if a string is a valid hex checksum address.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex checksum address.\n */\nexport function isHexChecksumAddress(value: unknown): value is Hex {\n  return isString(value) && HEX_CHECKSUM_ADDRESS_REGEX.test(value);\n}\n\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nexport function assertIsHexString(value: unknown): asserts value is string {\n  assert(isHexString(value), 'Value must be a hexadecimal string.');\n}\n\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nexport function assertIsStrictHexString(value: unknown): asserts value is Hex {\n  assert(\n    isStrictHexString(value),\n    'Value must be a hexadecimal string, starting with \"0x\".',\n  );\n}\n\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n * This is the unmemoized version, primarily used for testing.\n *\n * @param hexAddress - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nexport function getChecksumAddressUnmemoized(hexAddress: Hex): Hex {\n  assert(isHexChecksumAddress(hexAddress), 'Invalid hex address.');\n  const address = remove0x(hexAddress).toLowerCase();\n\n  const hashBytes = keccak256(address);\n  const { length } = address;\n  const result = new Array(length); // Pre-allocate array\n\n  for (let i = 0; i < length; i++) {\n    /* eslint-disable no-bitwise */\n    const byteIndex = i >> 1; // Faster than Math.floor(i / 2)\n    const nibbleIndex = i & 1; // Faster than i % 2\n    const byte = hashBytes[byteIndex] as number;\n    const nibble = nibbleIndex === 0 ? byte >> 4 : byte & 0x0f;\n    /* eslint-enable no-bitwise */\n\n    result[i] = nibble >= 8 ? (address[i] as string).toUpperCase() : address[i];\n  }\n\n  return `0x${result.join('')}`;\n}\n\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n * This function is memoized for performance.\n *\n * @param hexAddress - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nexport const getChecksumAddress = memoize(getChecksumAddressUnmemoized);\n\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nexport function isValidChecksumAddressUnmemoized(possibleChecksum: Hex) {\n  if (!isHexChecksumAddress(possibleChecksum)) {\n    return false;\n  }\n\n  return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\n\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nexport const isValidChecksumAddress = memoize(isValidChecksumAddressUnmemoized);\n\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nexport function isValidHexAddressUnmemoized(possibleAddress: Hex) {\n  return (\n    isHexAddress(possibleAddress) || isValidChecksumAddress(possibleAddress)\n  );\n}\n\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nexport const isValidHexAddress = memoize(isValidHexAddressUnmemoized);\n\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nexport function add0x(hexadecimal: string): Hex {\n  if (hexadecimal.startsWith('0x')) {\n    return hexadecimal as Hex;\n  }\n\n  if (hexadecimal.startsWith('0X')) {\n    return `0x${hexadecimal.substring(2)}`;\n  }\n\n  return `0x${hexadecimal}`;\n}\n\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nexport function remove0x(hexadecimal: string): string {\n  if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n    return hexadecimal.substring(2);\n  }\n\n  return hexadecimal;\n}\n", "import { base64 } from '@scure/base';\n\nimport { assert } from './assert';\nimport type { Hex } from './hex';\nimport { add0x, assertIsHexString, remove0x } from './hex';\n\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n\nexport type Bytes = bigint | number | string | Uint8Array;\n\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder(): () => string[] {\n  // To avoid issues with tree shaking, we need to use a function to return the\n  // array. This is because the array is only used in the `bytesToHex` function\n  // and if we were to use a global variable, the array might be removed by the\n  // tree shaker.\n  const lookupTable: string[] = [];\n\n  return () => {\n    if (lookupTable.length === 0) {\n      for (let i = 0; i < 256; i++) {\n        lookupTable.push(i.toString(16).padStart(2, '0'));\n      }\n    }\n\n    return lookupTable;\n  };\n}\n\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nexport function isBytes(value: unknown): value is Uint8Array {\n  return value instanceof Uint8Array;\n}\n\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nexport function assertIsBytes(value: unknown): asserts value is Uint8Array {\n  assert(isBytes(value), 'Value must be a Uint8Array.');\n}\n\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nexport function bytesToHex(bytes: Uint8Array): Hex {\n  assertIsBytes(bytes);\n\n  if (bytes.length === 0) {\n    return '0x';\n  }\n\n  const lookupTable = getPrecomputedHexValues();\n  const hexadecimal = new Array(bytes.length);\n\n  for (let i = 0; i < bytes.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    hexadecimal[i] = lookupTable[bytes[i]!];\n  }\n\n  return add0x(hexadecimal.join(''));\n}\n\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nexport function bytesToBigInt(bytes: Uint8Array): bigint {\n  assertIsBytes(bytes);\n\n  const hexadecimal = bytesToHex(bytes);\n  return BigInt(hexadecimal);\n}\n\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nexport function bytesToSignedBigInt(bytes: Uint8Array): bigint {\n  assertIsBytes(bytes);\n\n  let value = BigInt(0);\n  for (const byte of bytes) {\n    // eslint-disable-next-line no-bitwise\n    value = (value << BigInt(8)) + BigInt(byte);\n  }\n\n  return BigInt.asIntN(bytes.length * 8, value);\n}\n\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nexport function bytesToNumber(bytes: Uint8Array): number {\n  assertIsBytes(bytes);\n\n  const bigint = bytesToBigInt(bytes);\n\n  assert(\n    bigint <= BigInt(Number.MAX_SAFE_INTEGER),\n    'Number is not a safe integer. Use `bytesToBigInt` instead.',\n  );\n\n  return Number(bigint);\n}\n\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nexport function bytesToString(bytes: Uint8Array): string {\n  assertIsBytes(bytes);\n\n  return new TextDecoder().decode(bytes);\n}\n\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nexport function bytesToBase64(bytes: Uint8Array): string {\n  assertIsBytes(bytes);\n\n  return base64.encode(bytes);\n}\n\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function hexToBytes(value: string): Uint8Array {\n  // \"0x\" is often used as empty byte array.\n  if (value?.toLowerCase?.() === '0x') {\n    return new Uint8Array();\n  }\n\n  assertIsHexString(value);\n\n  // Remove the `0x` prefix if it exists, and pad the string to have an even\n  // number of characters.\n  const strippedValue = remove0x(value).toLowerCase();\n  const normalizedValue =\n    strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n  const bytes = new Uint8Array(normalizedValue.length / 2);\n\n  for (let i = 0; i < bytes.length; i++) {\n    // While this is not the prettiest way to convert a hexadecimal string to a\n    // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n    // character.\n    const c1 = normalizedValue.charCodeAt(i * 2);\n    const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n    const n1 =\n      c1 -\n      (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n        ? HEX_MINIMUM_NUMBER_CHARACTER\n        : HEX_CHARACTER_OFFSET);\n    const n2 =\n      c2 -\n      (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n        ? HEX_MINIMUM_NUMBER_CHARACTER\n        : HEX_CHARACTER_OFFSET);\n\n    bytes[i] = n1 * 16 + n2;\n  }\n\n  return bytes;\n}\n\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function bigIntToBytes(value: bigint): Uint8Array {\n  assert(typeof value === 'bigint', 'Value must be a bigint.');\n  assert(value >= BigInt(0), 'Value must be a non-negative bigint.');\n\n  const hexadecimal = value.toString(16);\n  return hexToBytes(hexadecimal);\n}\n\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value: bigint, bytes: number): boolean {\n  assert(bytes > 0);\n\n  /* eslint-disable no-bitwise */\n  const mask = value >> BigInt(31);\n  return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n  /* eslint-enable no-bitwise */\n}\n\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nexport function signedBigIntToBytes(\n  value: bigint,\n  byteLength: number,\n): Uint8Array {\n  assert(typeof value === 'bigint', 'Value must be a bigint.');\n  assert(typeof byteLength === 'number', 'Byte length must be a number.');\n  assert(byteLength > 0, 'Byte length must be greater than 0.');\n  assert(\n    bigIntFits(value, byteLength),\n    'Byte length is too small to represent the given value.',\n  );\n\n  // ESLint doesn't like mutating function parameters, so to avoid having to\n  // disable the rule, we create a new variable.\n  let numberValue = value;\n  const bytes = new Uint8Array(byteLength);\n\n  for (let i = 0; i < bytes.length; i++) {\n    bytes[i] = Number(BigInt.asUintN(8, numberValue));\n    // eslint-disable-next-line no-bitwise\n    numberValue >>= BigInt(8);\n  }\n\n  return bytes.reverse();\n}\n\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nexport function numberToBytes(value: number): Uint8Array {\n  assert(typeof value === 'number', 'Value must be a number.');\n  assert(value >= 0, 'Value must be a non-negative number.');\n  assert(\n    Number.isSafeInteger(value),\n    'Value is not a safe integer. Use `bigIntToBytes` instead.',\n  );\n\n  const hexadecimal = value.toString(16);\n  return hexToBytes(hexadecimal);\n}\n\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function stringToBytes(value: string): Uint8Array {\n  assert(typeof value === 'string', 'Value must be a string.');\n\n  return new TextEncoder().encode(value);\n}\n\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function base64ToBytes(value: string): Uint8Array {\n  assert(typeof value === 'string', 'Value must be a string.');\n\n  return base64.decode(value);\n}\n\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function valueToBytes(value: Bytes): Uint8Array {\n  if (typeof value === 'bigint') {\n    return bigIntToBytes(value);\n  }\n\n  if (typeof value === 'number') {\n    return numberToBytes(value);\n  }\n\n  if (typeof value === 'string') {\n    if (value.startsWith('0x')) {\n      return hexToBytes(value);\n    }\n\n    return stringToBytes(value);\n  }\n\n  if (isBytes(value)) {\n    return value;\n  }\n\n  throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\n\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nexport function concatBytes(values: Bytes[]): Uint8Array {\n  const normalizedValues = new Array(values.length);\n  let byteLength = 0;\n\n  for (let i = 0; i < values.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const value = valueToBytes(values[i]!);\n\n    normalizedValues[i] = value;\n    byteLength += value.length;\n  }\n\n  const bytes = new Uint8Array(byteLength);\n  for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n    // While we could simply spread the values into an array and use\n    // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n    bytes.set(normalizedValues[i], offset);\n    offset += normalizedValues[i].length;\n  }\n\n  return bytes;\n}\n\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nexport function createDataView(bytes: Uint8Array): DataView {\n  // To maintain compatibility with Node.js, we need to check if the bytes are\n  // a Buffer. If so, we need to slice the buffer to get the underlying\n  // ArrayBuffer.\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n    const buffer = bytes.buffer.slice(\n      bytes.byteOffset,\n      bytes.byteOffset + bytes.byteLength,\n    );\n\n    return new DataView(buffer);\n  }\n\n  return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\n\n/**\n * Compare two Uint8Arrays using a constant-time style loop to reduce timing\n * side-channels when comparing sensitive data (e.g., mnemonic bytes, keys,\n * authentication tags). Does not early-return on the first difference:\n * work done depends only on the input lengths, so byte content does not affect timing.\n *\n * When to use:\n * - Use for secret or security-sensitive byte comparisons to avoid content-based timing leaks.\n * - Prefer when inputs are fixed-length (or validated to equal length) at the API boundary.\n *\n * @param a - The first Uint8Array to compare.\n * @param b - The second Uint8Array to compare.\n * @returns Whether the Uint8Arrays are equal.\n */\nexport function areUint8ArraysEqual(a: Uint8Array, b: Uint8Array): boolean {\n  // eslint-disable-next-line no-bitwise\n  let diff = a.byteLength ^ b.byteLength;\n  const len = Math.max(a.byteLength, b.byteLength);\n\n  for (let i = 0; i < len; i++) {\n    const aByte = a[i] ?? 0;\n    const bByte = b[i] ?? 0;\n    // eslint-disable-next-line no-bitwise\n    diff |= aByte ^ bByte;\n  }\n\n  return diff === 0;\n}\n", "import type { Struct } from '@metamask/superstruct';\nimport { define } from '@metamask/superstruct';\n\n/**\n * Defines a new string-struct matching a regular expression.\n *\n * @example\n * const EthAddressStruct = definePattern('EthAddress', /^0x[0-9a-f]{40}$/iu);\n * type EthAddress = Infer<typeof EthAddressStruct>; // string\n *\n * const CaipChainIdStruct = defineTypedPattern<`${string}:${string}`>(\n *   'CaipChainId',\n *   /^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}$/u;\n * );\n * type CaipChainId = Infer<typeof CaipChainIdStruct>; // `${string}:${string}`\n * @param name - Type name.\n * @param pattern - Regular expression to match.\n * @template Pattern - The pattern type, defaults to `string`.\n * @returns A new string-struct that matches the given pattern.\n */\nexport function definePattern<Pattern extends string = string>(\n  name: string,\n  pattern: RegExp,\n): Struct<Pattern, null> {\n  return define<Pattern>(name, (value: unknown): boolean | string => {\n    return typeof value === 'string' && pattern.test(value);\n  });\n}\n", "import type { Infer } from '@metamask/superstruct';\n\nimport { definePattern } from './superstruct';\n\nexport const CAIP_CHAIN_ID_REGEX =\n  /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\n\nexport const CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\n\nexport const CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\n\nexport const CAIP_ACCOUNT_ID_REGEX =\n  /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\n\nexport const CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n\nexport const CAIP_ASSET_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\n\nexport const CAIP_ASSET_REFERENCE_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n\nexport const CAIP_TOKEN_ID_REGEX = /^[-.%a-zA-Z0-9]{1,78}$/u;\n\nexport const CAIP_ASSET_TYPE_REGEX =\n  /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u;\n\nexport const CAIP_ASSET_ID_REGEX =\n  /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u;\n\nconst CAIP_ASSET_TYPE_OR_ID_REGEX =\n  /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})(\\/(?<tokenId>[-.%a-zA-Z0-9]{1,78}))?$/u;\n\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexport const CaipChainIdStruct = definePattern<`${string}:${string}`>(\n  'CaipChainId',\n  CAIP_CHAIN_ID_REGEX,\n);\nexport type CaipChainId = Infer<typeof CaipChainIdStruct>;\n\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexport const CaipNamespaceStruct = definePattern(\n  'CaipNamespace',\n  CAIP_NAMESPACE_REGEX,\n);\nexport type CaipNamespace = Infer<typeof CaipNamespaceStruct>;\n\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexport const CaipReferenceStruct = definePattern(\n  'CaipReference',\n  CAIP_REFERENCE_REGEX,\n);\nexport type CaipReference = Infer<typeof CaipReferenceStruct>;\n\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexport const CaipAccountIdStruct =\n  definePattern<`${string}:${string}:${string}`>(\n    'CaipAccountId',\n    CAIP_ACCOUNT_ID_REGEX,\n  );\nexport type CaipAccountId = Infer<typeof CaipAccountIdStruct>;\n\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexport const CaipAccountAddressStruct = definePattern(\n  'CaipAccountAddress',\n  CAIP_ACCOUNT_ADDRESS_REGEX,\n);\nexport type CaipAccountAddress = Infer<typeof CaipAccountAddressStruct>;\n\n/**\n * A CAIP-19 asset namespace, i.e., a namespace domain of an asset.\n */\nexport const CaipAssetNamespaceStruct = definePattern(\n  'CaipAssetNamespace',\n  CAIP_ASSET_NAMESPACE_REGEX,\n);\nexport type CaipAssetNamespace = Infer<typeof CaipAssetNamespaceStruct>;\n\n/**\n * A CAIP-19 asset reference, i.e., an identifier for an asset within a given namespace.\n */\nexport const CaipAssetReferenceStruct = definePattern(\n  'CaipAssetReference',\n  CAIP_ASSET_REFERENCE_REGEX,\n);\nexport type CaipAssetReference = Infer<typeof CaipAssetReferenceStruct>;\n\n/**\n * A CAIP-19 asset token ID, i.e., a unique identifier for an addressable asset of a given type\n */\nexport const CaipTokenIdStruct = definePattern(\n  'CaipTokenId',\n  CAIP_TOKEN_ID_REGEX,\n);\nexport type CaipTokenId = Infer<typeof CaipTokenIdStruct>;\n\n/**\n * A CAIP-19 asset type identifier, i.e., a human-readable type of asset identifier.\n */\nexport const CaipAssetTypeStruct =\n  definePattern<`${string}:${string}/${string}:${string}`>(\n    'CaipAssetType',\n    CAIP_ASSET_TYPE_REGEX,\n  );\nexport type CaipAssetType = Infer<typeof CaipAssetTypeStruct>;\n\n/**\n * A CAIP-19 asset ID identifier, i.e., a human-readable type of asset ID.\n */\nexport const CaipAssetIdStruct =\n  definePattern<`${string}:${string}/${string}:${string}/${string}`>(\n    'CaipAssetId',\n    CAIP_ASSET_ID_REGEX,\n  );\nexport type CaipAssetId = Infer<typeof CaipAssetIdStruct>;\n\n/**\n * A CAIP-19 asset type or asset ID identifier, i.e., a human-readable type of asset identifier.\n */\nexport const CaipAssetTypeOrIdStruct = definePattern<\n  CaipAssetType | CaipAssetId\n>('CaipAssetTypeOrId', CAIP_ASSET_TYPE_OR_ID_REGEX);\nexport type CaipAssetTypeOrId = Infer<typeof CaipAssetTypeOrIdStruct>;\n\n/** Known CAIP namespaces. */\nexport enum KnownCaipNamespace {\n  /** BIP-122 (Bitcoin) compatible chains. */\n  Bip122 = 'bip122',\n  /** Solana compatible chains */\n  Solana = 'solana',\n  /** Tron compatible chains */\n  Tron = 'tron',\n  /** EIP-155 compatible chains. */\n  Eip155 = 'eip155',\n  Wallet = 'wallet',\n}\n\n/**\n * A CAIP-2 chain ID that is guaranteed to have a known CAIP namespace\n * (@see {@link KnownCaipNamespace}).\n *\n * This is a narrower, more type-safe alternative to {@link CaipChainId} for use cases\n * where the chain namespace must be one of the known standards.\n *\n * @template Namespace - The namespace of the CAIP-2 chain ID. Must be a known namespace specified in {@link KnownCaipNamespace}.\n */\nexport type KnownCaipNamespacedChainId<\n  Namespace extends `${KnownCaipNamespace}` = `${KnownCaipNamespace}`,\n> = `${Namespace}:${string}`;\n\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nexport function isCaipChainId(value: unknown): value is CaipChainId {\n  return typeof value === 'string' && CAIP_CHAIN_ID_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nexport function isCaipNamespace(value: unknown): value is CaipNamespace {\n  return typeof value === 'string' && CAIP_NAMESPACE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nexport function isCaipReference(value: unknown): value is CaipReference {\n  return typeof value === 'string' && CAIP_REFERENCE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nexport function isCaipAccountId(value: unknown): value is CaipAccountId {\n  return typeof value === 'string' && CAIP_ACCOUNT_ID_REGEX.test(value);\n}\n\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nexport function isCaipAccountAddress(\n  value: unknown,\n): value is CaipAccountAddress {\n  return typeof value === 'string' && CAIP_ACCOUNT_ADDRESS_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAssetNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetNamespace}.\n */\nexport function isCaipAssetNamespace(\n  value: unknown,\n): value is CaipAssetNamespace {\n  return typeof value === 'string' && CAIP_ASSET_NAMESPACE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAssetReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetReference}.\n */\nexport function isCaipAssetReference(\n  value: unknown,\n): value is CaipAssetReference {\n  return typeof value === 'string' && CAIP_ASSET_REFERENCE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipTokenId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipTokenId}.\n */\nexport function isCaipTokenId(value: unknown): value is CaipTokenId {\n  return typeof value === 'string' && CAIP_TOKEN_ID_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAssetType}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetType}.\n */\nexport function isCaipAssetType(value: unknown): value is CaipAssetType {\n  return typeof value === 'string' && CAIP_ASSET_TYPE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAssetId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetId}.\n */\nexport function isCaipAssetId(value: unknown): value is CaipAssetId {\n  return typeof value === 'string' && CAIP_ASSET_ID_REGEX.test(value);\n}\n\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nexport function parseCaipChainId(caipChainId: CaipChainId): {\n  namespace: CaipNamespace;\n  reference: CaipReference;\n} {\n  const match = CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n  if (!match?.groups) {\n    throw new Error('Invalid CAIP chain ID.');\n  }\n\n  return {\n    namespace: match.groups.namespace as CaipNamespace,\n    reference: match.groups.reference as CaipReference,\n  };\n}\n\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nexport function parseCaipAccountId(caipAccountId: CaipAccountId): {\n  address: CaipAccountAddress;\n  chainId: CaipChainId;\n  chain: { namespace: CaipNamespace; reference: CaipReference };\n} {\n  const match = CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n  if (!match?.groups) {\n    throw new Error('Invalid CAIP account ID.');\n  }\n\n  return {\n    address: match.groups.accountAddress as CaipAccountAddress,\n    chainId: match.groups.chainId as CaipChainId,\n    chain: {\n      namespace: match.groups.namespace as CaipNamespace,\n      reference: match.groups.reference as CaipReference,\n    },\n  };\n}\n\n/**\n * Parse a CAIP-19 asset type to an object containing the chain ID, parsed chain ID,\n * asset namespace, and asset reference\n *\n * This validates the CAIP-19 asset type before parsing it.\n *\n * @param caipAssetType - The CAIP-19 asset type to validate and parse.\n * @returns The parsed CAIP-19 asset type.\n */\nexport function parseCaipAssetType(caipAssetType: CaipAssetType): {\n  assetNamespace: CaipAssetNamespace;\n  assetReference: CaipAssetReference;\n  chainId: CaipChainId;\n  chain: { namespace: CaipNamespace; reference: CaipReference };\n} {\n  const match = CAIP_ASSET_TYPE_REGEX.exec(caipAssetType);\n  if (!match?.groups) {\n    throw new Error('Invalid CAIP asset type.');\n  }\n\n  return {\n    assetNamespace: match.groups.assetNamespace as CaipAssetNamespace,\n    assetReference: match.groups.assetReference as CaipAssetReference,\n    chainId: match.groups.chainId as CaipChainId,\n    chain: {\n      namespace: match.groups.namespace as CaipNamespace,\n      reference: match.groups.reference as CaipReference,\n    },\n  };\n}\n\n/**\n * Parse a CAIP-19 asset ID to an object containing the chain ID, parsed chain ID,\n * asset namespace, asset reference, and token ID.\n *\n * This validates the CAIP-19 asset ID before parsing it.\n *\n * @param caipAssetId - The CAIP-19 asset ID to validate and parse.\n * @returns The parsed CAIP-19 asset ID.\n */\nexport function parseCaipAssetId(caipAssetId: CaipAssetId): {\n  assetNamespace: CaipAssetNamespace;\n  assetReference: CaipAssetReference;\n  tokenId: CaipTokenId;\n  chainId: CaipChainId;\n  chain: { namespace: CaipNamespace; reference: CaipReference };\n} {\n  const match = CAIP_ASSET_ID_REGEX.exec(caipAssetId);\n  if (!match?.groups) {\n    throw new Error('Invalid CAIP asset ID.');\n  }\n\n  return {\n    assetNamespace: match.groups.assetNamespace as CaipAssetNamespace,\n    assetReference: match.groups.assetReference as CaipAssetReference,\n    tokenId: match.groups.tokenId as CaipTokenId,\n    chainId: match.groups.chainId as CaipChainId,\n    chain: {\n      namespace: match.groups.namespace as CaipNamespace,\n      reference: match.groups.reference as CaipReference,\n    },\n  };\n}\n\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nexport function toCaipChainId(\n  namespace: CaipNamespace,\n  reference: CaipReference,\n): CaipChainId {\n  if (!isCaipNamespace(namespace)) {\n    throw new Error(\n      `Invalid \"namespace\", must match: ${CAIP_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipReference(reference)) {\n    throw new Error(\n      `Invalid \"reference\", must match: ${CAIP_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  return `${namespace}:${reference}`;\n}\n\n/**\n * Account ID as defined per the CAIP-10\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md}.\n *\n * It defines a way to uniquely identify any blockchain account in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identity of a blockchain within a given namespace.\n * @param accountAddress - The address of the blockchain account.\n * @throws {@link Error}\n * This exception is thrown if the inputs do not comply with the CAIP-10\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md#syntax}.\n * @returns A CAIP account ID.\n */\nexport function toCaipAccountId(\n  namespace: CaipNamespace,\n  reference: CaipReference,\n  accountAddress: CaipAccountAddress,\n): CaipAccountId {\n  if (!isCaipNamespace(namespace)) {\n    throw new Error(\n      `Invalid \"namespace\", must match: ${CAIP_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipReference(reference)) {\n    throw new Error(\n      `Invalid \"reference\", must match: ${CAIP_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAccountAddress(accountAddress)) {\n    throw new Error(\n      `Invalid \"accountAddress\", must match: ${CAIP_ACCOUNT_ADDRESS_REGEX.toString()}`,\n    );\n  }\n\n  return `${namespace}:${reference}:${accountAddress}`;\n}\n\n/**\n * Asset Type as defined per the CAIP-19\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-19.md}.\n *\n * It defines a way to uniquely identify any blockchain asset in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identity of a blockchain within a given namespace.\n * @param assetNamespace - The namespace domain of an asset.\n * @param assetReference - The identity of an asset within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs do not comply with the CAIP-19\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-19.md#syntax}.\n * @returns A CAIP asset type.\n */\nexport function toCaipAssetType(\n  namespace: CaipNamespace,\n  reference: CaipReference,\n  assetNamespace: CaipAssetNamespace,\n  assetReference: CaipAssetReference,\n): CaipAssetType {\n  if (!isCaipNamespace(namespace)) {\n    throw new Error(\n      `Invalid \"namespace\", must match: ${CAIP_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipReference(reference)) {\n    throw new Error(\n      `Invalid \"reference\", must match: ${CAIP_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAssetNamespace(assetNamespace)) {\n    throw new Error(\n      `Invalid \"assetNamespace\", must match: ${CAIP_ASSET_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAssetReference(assetReference)) {\n    throw new Error(\n      `Invalid \"assetReference\", must match: ${CAIP_ASSET_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  return `${namespace}:${reference}/${assetNamespace}:${assetReference}`;\n}\n\n/**\n * Asset ID as defined per the CAIP-19\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-19.md}.\n *\n * It defines a way to uniquely identify any blockchain asset in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identity of a blockchain within a given namespace.\n * @param assetNamespace - The namespace domain of an asset.\n * @param assetReference - The identity of an asset within a given namespace.\n * @param tokenId - The unique identifier for an addressable asset of a given type.\n * @throws {@link Error}\n * This exception is thrown if the inputs do not comply with the CAIP-19\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-19.md#syntax}.\n * @returns A CAIP asset ID.\n */\nexport function toCaipAssetId(\n  namespace: CaipNamespace,\n  reference: CaipReference,\n  assetNamespace: CaipAssetNamespace,\n  assetReference: CaipAssetReference,\n  tokenId: CaipTokenId,\n): CaipAssetId {\n  if (!isCaipNamespace(namespace)) {\n    throw new Error(\n      `Invalid \"namespace\", must match: ${CAIP_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipReference(reference)) {\n    throw new Error(\n      `Invalid \"reference\", must match: ${CAIP_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAssetNamespace(assetNamespace)) {\n    throw new Error(\n      `Invalid \"assetNamespace\", must match: ${CAIP_ASSET_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAssetReference(assetReference)) {\n    throw new Error(\n      `Invalid \"assetReference\", must match: ${CAIP_ASSET_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipTokenId(tokenId)) {\n    throw new Error(\n      `Invalid \"tokenId\", must match: ${CAIP_TOKEN_ID_REGEX.toString()}`,\n    );\n  }\n\n  return `${namespace}:${reference}/${assetNamespace}:${assetReference}/${tokenId}`;\n}\n", "import { size, string } from '@metamask/superstruct';\n\nimport { base64 } from './base64';\n\nexport const ChecksumStruct = size(\n  base64(string(), { paddingRequired: true }),\n  44,\n  44,\n);\n", "import type { Infer } from '@metamask/superstruct';\nimport {\n  bigint,\n  coerce,\n  create,\n  instance,\n  number,\n  string,\n  StructError,\n  union,\n} from '@metamask/superstruct';\n\nimport { assert } from './assert';\nimport { bytesToHex, hexToBytes } from './bytes';\nimport type { Hex } from './hex';\nimport { StrictHexStruct } from './hex';\n\nconst NumberLikeStruct = union([number(), bigint(), string(), StrictHexStruct]);\nconst NumberCoercer = coerce(number(), NumberLikeStruct, Number);\nconst BigIntCoercer = coerce(bigint(), NumberLikeStruct, BigInt);\n\nconst BytesLikeStruct = union([StrictHexStruct, instance(Uint8Array)]);\nconst BytesCoercer = coerce(\n  instance(Uint8Array),\n  union([StrictHexStruct]),\n  hexToBytes,\n);\n\nconst HexCoercer = coerce(StrictHexStruct, instance(Uint8Array), bytesToHex);\n\nexport type NumberLike = Infer<typeof NumberLikeStruct>;\nexport type BytesLike = Infer<typeof BytesLikeStruct>;\n\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nexport function createNumber(value: NumberLike): number {\n  try {\n    const result = create(value, NumberCoercer);\n\n    assert(\n      Number.isFinite(result),\n      `Expected a number-like value, got \"${value}\".`,\n    );\n\n    return result;\n  } catch (error) {\n    if (error instanceof StructError) {\n      throw new Error(`Expected a number-like value, got \"${value}\".`);\n    }\n\n    /* istanbul ignore next */\n    throw error;\n  }\n}\n\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nexport function createBigInt(value: NumberLike): bigint {\n  try {\n    // The `BigInt` constructor throws if the value is not a number-like value.\n    // There is no need to validate the value manually.\n    return create(value, BigIntCoercer);\n  } catch (error) {\n    if (error instanceof StructError) {\n      throw new Error(\n        `Expected a number-like value, got \"${String(error.value)}\".`,\n      );\n    }\n\n    /* istanbul ignore next */\n    throw error;\n  }\n}\n\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nexport function createBytes(value: BytesLike): Uint8Array {\n  if (typeof value === 'string' && value.toLowerCase() === '0x') {\n    return new Uint8Array();\n  }\n\n  try {\n    return create(value, BytesCoercer);\n  } catch (error) {\n    if (error instanceof StructError) {\n      throw new Error(\n        `Expected a bytes-like value, got \"${String(error.value)}\".`,\n      );\n    }\n\n    /* istanbul ignore next */\n    throw error;\n  }\n}\n\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nexport function createHex(value: BytesLike): Hex {\n  if (\n    (value instanceof Uint8Array && value.length === 0) ||\n    (typeof value === 'string' && value.toLowerCase() === '0x')\n  ) {\n    return '0x';\n  }\n\n  try {\n    return create(value, HexCoercer);\n  } catch (error) {\n    if (error instanceof StructError) {\n      throw new Error(\n        `Expected a bytes-like value, got \"${String(error.value)}\".`,\n      );\n    }\n\n    /* istanbul ignore next */\n    throw error;\n  }\n}\n", "/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap<Key, Value> implements ReadonlyMap<Key, Value> {\n  readonly #map: Map<Key, Value>;\n\n  public get size() {\n    return this.#map.size;\n  }\n\n  public [Symbol.iterator]() {\n    return this.#map[Symbol.iterator]();\n  }\n\n  constructor(entries?: readonly (readonly [Key, Value])[] | null) {\n    this.#map = new Map<Key, Value>(entries);\n    Object.freeze(this);\n  }\n\n  public entries() {\n    return this.#map.entries();\n  }\n\n  public forEach(\n    callbackfn: (value: Value, key: Key, map: this) => void,\n    thisArg?: any,\n  ): void {\n    // We have to wrap the specified callback in order to prevent it from\n    // receiving a reference to the inner map.\n    return this.#map.forEach((value: Value, key: Key, _map: unknown) =>\n      callbackfn.call(thisArg, value, key, this),\n    );\n  }\n\n  public get(key: Key) {\n    return this.#map.get(key);\n  }\n\n  public has(key: Key) {\n    return this.#map.has(key);\n  }\n\n  public keys() {\n    return this.#map.keys();\n  }\n\n  public values() {\n    return this.#map.values();\n  }\n\n  public toString(): string {\n    return `FrozenMap(${this.size}) {${\n      this.size > 0\n        ? ` ${[...this.entries()]\n            .map(([key, value]) => `${String(key)} => ${String(value)}`)\n            .join(', ')} `\n        : ''\n    }}`;\n  }\n}\n\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet<Value> implements ReadonlySet<Value> {\n  readonly #set: Set<Value>;\n\n  public get size() {\n    return this.#set.size;\n  }\n\n  public [Symbol.iterator]() {\n    return this.#set[Symbol.iterator]();\n  }\n\n  constructor(values?: readonly Value[] | null) {\n    this.#set = new Set<Value>(values);\n    Object.freeze(this);\n  }\n\n  public entries() {\n    return this.#set.entries();\n  }\n\n  public forEach(\n    callbackfn: (value: Value, value2: Value, set: this) => void,\n    thisArg?: any,\n  ): void {\n    // We have to wrap the specified callback in order to prevent it from\n    // receiving a reference to the inner set.\n    return this.#set.forEach((value: Value, value2: Value, _set: unknown) =>\n      callbackfn.call(thisArg, value, value2, this),\n    );\n  }\n\n  public has(value: Value) {\n    return this.#set.has(value);\n  }\n\n  public keys() {\n    return this.#set.keys();\n  }\n\n  public values() {\n    return this.#set.values();\n  }\n\n  public toString(): string {\n    return `FrozenSet(${this.size}) {${\n      this.size > 0\n        ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n        : ''\n    }}`;\n  }\n}\n\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\n\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n\nexport { FrozenMap, FrozenSet };\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.cjs.map", "import {\n  any,\n  array,\n  coerce,\n  create,\n  define,\n  integer,\n  is,\n  literal,\n  nullable,\n  number,\n  object as superstructObject,\n  optional,\n  record,\n  string,\n  union,\n  unknown,\n  Struct,\n  refine,\n} from '@metamask/superstruct';\nimport type {\n  Context,\n  Infer,\n  ObjectSchema,\n  Simplify,\n  Optionalize,\n} from '@metamask/superstruct';\n\nimport type { AssertionErrorConstructor } from './assert';\nimport { assertStruct } from './assert';\nimport { hasProperty } from './misc';\n\n/**\n * Any JSON-compatible value.\n */\nexport type Json =\n  | null\n  | boolean\n  | number\n  | string\n  | Json[]\n  | { [prop: string]: Json };\n\n/**\n * A helper type to make properties with `undefined` in their type optional, but\n * not `undefined` itself.\n *\n * @deprecated Use `ObjectType` and/or `ExactOptionalize` from `@metamask/superstruct@>=3.2.0` instead.\n * @example\n * ```ts\n * type Foo = ObjectOptional<{ foo: string | undefined }>;\n * // Foo is equivalent to { foo?: string }\n * ```\n */\nexport type ObjectOptional<Schema extends Record<string, unknown>> = {\n  [Key in keyof Schema as Schema[Key] extends ExactOptionalGuard\n    ? Key\n    : never]?: Schema[Key] extends ExactOptionalGuard & infer Original\n    ? Original\n    : never;\n} & {\n  [Key in keyof Schema as Schema[Key] extends ExactOptionalGuard\n    ? never\n    : Key]: Schema[Key];\n};\n\n/**\n * An object type with support for exact optionals. This is used by the `object`\n * struct. This uses the {@link ObjectOptional} helper to make properties with\n * `undefined` in their type optional, but not `undefined` itself.\n *\n * @deprecated Use `ObjectType` from `@metamask/superstruct@>=3.2.0` instead.\n */\nexport type ObjectType<Schema extends ObjectSchema> = Simplify<\n  ObjectOptional<\n    Optionalize<{\n      [Key in keyof Schema]: Infer<Schema[Key]>;\n    }>\n  >\n>;\n\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @deprecated Use `exactOptional` and `object` from `@metamask/superstruct@>=3.2.0` instead.\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nexport const object = <Schema extends ObjectSchema>(\n  schema: Schema,\n): Struct<ObjectType<Schema>> =>\n  // The type is slightly different from a regular object struct, because we\n  // want to make properties with `undefined` in their type optional, but not\n  // `undefined` itself. This means that we need a type cast.\n  superstructObject(schema) as unknown as Struct<ObjectType<Schema>>;\n\ndeclare const exactOptionalSymbol: unique symbol;\ntype ExactOptionalGuard = {\n  _exactOptionalGuard?: typeof exactOptionalSymbol;\n};\n\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }: Context): boolean {\n  const field = path[path.length - 1];\n  return hasProperty(branch[branch.length - 2], field);\n}\n\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @deprecated Use `exactOptional` and `object` from `@metamask/superstruct@>=3.2.0` instead.\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nexport function exactOptional<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): Struct<Type & ExactOptionalGuard, Schema> {\n  return new Struct<Type & ExactOptionalGuard, Schema>({\n    ...struct,\n\n    type: `optional ${struct.type}`,\n    validator: (value, context) =>\n      !hasOptional(context) || struct.validator(value, context),\n\n    refiner: (value, context) =>\n      !hasOptional(context) || struct.refiner(value as Type, context),\n  });\n}\n\n/**\n * Validate an unknown input to be valid JSON.\n *\n * Useful for constructing JSON structs.\n *\n * @param json - An unknown value.\n * @returns True if the value is valid JSON, otherwise false.\n */\nfunction validateJson(json: unknown): boolean {\n  if (json === null || typeof json === 'boolean' || typeof json === 'string') {\n    return true;\n  }\n\n  if (typeof json === 'number' && Number.isFinite(json)) {\n    return true;\n  }\n\n  if (typeof json === 'object') {\n    let every = true;\n    if (Array.isArray(json)) {\n      // Ignoring linting error since for-of is significantly slower than a normal for-loop\n      // and performance is important in this specific function.\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (let i = 0; i < json.length; i++) {\n        if (!validateJson(json[i])) {\n          every = false;\n          break;\n        }\n      }\n      return every;\n    }\n\n    const entries = Object.entries(json);\n    // Ignoring linting errors since for-of is significantly slower than a normal for-loop\n    // and performance is important in this specific function.\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < entries.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      if (typeof entries[i]![0] !== 'string' || !validateJson(entries[i]![1])) {\n        every = false;\n        break;\n      }\n    }\n    return every;\n  }\n\n  return false;\n}\n\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\nexport const UnsafeJsonStruct: Struct<Json> = define('JSON', (json) =>\n  validateJson(json),\n);\n\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexport const JsonStruct = coerce(\n  UnsafeJsonStruct,\n  refine(any(), 'JSON', (value) => is(value, UnsafeJsonStruct)),\n  (value) =>\n    JSON.parse(\n      JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n          return undefined;\n        }\n        return propValue;\n      }),\n    ),\n);\n\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nexport function isValidJson(value: unknown): value is Json {\n  try {\n    getSafeJson(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nexport function getSafeJson<Type extends Json = Json>(value: unknown): Type {\n  return create(value, JsonStruct) as Type;\n}\n\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nexport function getJsonSize(value: unknown): number {\n  assertStruct(value, JsonStruct, 'Invalid JSON value');\n\n  const json = JSON.stringify(value);\n  return new TextEncoder().encode(json).byteLength;\n}\n\n/**\n * The string '2.0'.\n */\nexport const jsonrpc2 = '2.0' as const;\nexport const JsonRpcVersionStruct = literal(jsonrpc2);\n\n/**\n * A String specifying the version of the JSON-RPC protocol.\n * MUST be exactly \"2.0\".\n */\nexport type JsonRpcVersion2 = typeof jsonrpc2;\n\nexport const JsonRpcIdStruct = nullable(union([number(), string()]));\n\n/**\n * An identifier established by the Client that MUST contain a String, Number,\n * or NULL value if included. If it is not included it is assumed to be a\n * notification. The value SHOULD normally not be Null and Numbers SHOULD\n * NOT contain fractional parts.\n */\nexport type JsonRpcId = Infer<typeof JsonRpcIdStruct>;\n\nexport const JsonRpcErrorStruct = object({\n  code: integer(),\n  message: string(),\n  data: exactOptional(JsonStruct),\n  stack: exactOptional(string()),\n});\n\n/**\n * Mark a certain key of a type as optional.\n */\nexport type OptionalField<\n  Type extends Record<string, unknown>,\n  Key extends keyof Type,\n> = Omit<Type, Key> & Partial<Pick<Type, Key>>;\n\n/**\n * A JSON-RPC error object.\n *\n * Note that TypeScript infers `unknown | undefined` as `unknown`, meaning that\n * the `data` field is not optional. To make it optional, we use the\n * `OptionalField` helper, to explicitly make it optional.\n */\nexport type JsonRpcError = OptionalField<\n  Infer<typeof JsonRpcErrorStruct>,\n  'data'\n>;\n\nexport const JsonRpcParamsStruct: Struct<Json[] | Record<string, Json>, null> =\n  union([record(string(), JsonStruct), array(JsonStruct)]);\n\nexport type JsonRpcParams = Json[] | Record<string, Json>;\n\nexport const JsonRpcRequestStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  method: string(),\n  params: exactOptional(JsonRpcParamsStruct),\n});\n\nexport type InferWithParams<\n  Type extends Struct<any>,\n  Params extends JsonRpcParams,\n> = Infer<Type> & {\n  params?: Params;\n};\n\n/**\n * A JSON-RPC request object.\n */\nexport type JsonRpcRequest<Params extends JsonRpcParams = JsonRpcParams> =\n  InferWithParams<typeof JsonRpcRequestStruct, Params>;\n\nexport const JsonRpcNotificationStruct = object({\n  jsonrpc: JsonRpcVersionStruct,\n  method: string(),\n  params: exactOptional(JsonRpcParamsStruct),\n});\n\n/**\n * A JSON-RPC notification object.\n */\nexport type JsonRpcNotification<Params extends JsonRpcParams = JsonRpcParams> =\n  InferWithParams<typeof JsonRpcNotificationStruct, Params>;\n\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nexport function isJsonRpcNotification(\n  value: unknown,\n): value is JsonRpcNotification {\n  return is(value, JsonRpcNotificationStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nexport function assertIsJsonRpcNotification(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcNotification {\n  assertStruct(\n    value,\n    JsonRpcNotificationStruct,\n    'Invalid JSON-RPC notification',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nexport function isJsonRpcRequest(value: unknown): value is JsonRpcRequest {\n  return is(value, JsonRpcRequestStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nexport function assertIsJsonRpcRequest(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcRequest {\n  assertStruct(\n    value,\n    JsonRpcRequestStruct,\n    'Invalid JSON-RPC request',\n    ErrorWrapper,\n  );\n}\n\nexport const PendingJsonRpcResponseStruct = superstructObject({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: optional(unknown()),\n  error: optional(JsonRpcErrorStruct),\n});\n\n/**\n * A JSON-RPC response object that has not yet been resolved.\n */\nexport type PendingJsonRpcResponse<Result extends Json = Json> = Omit<\n  Infer<typeof PendingJsonRpcResponseStruct>,\n  'result'\n> & {\n  result?: Result;\n};\n\nexport const JsonRpcSuccessStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: JsonStruct,\n});\n\n/**\n * A successful JSON-RPC response object.\n */\nexport type JsonRpcSuccess<Result extends Json = Json> = Omit<\n  Infer<typeof JsonRpcSuccessStruct>,\n  'result'\n> & {\n  result: Result;\n};\n\nexport const JsonRpcFailureStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  error: JsonRpcErrorStruct as Struct<JsonRpcError>,\n});\n\n/**\n * A failed JSON-RPC response object.\n */\nexport type JsonRpcFailure = Infer<typeof JsonRpcFailureStruct>;\n\nexport const JsonRpcResponseStruct = union([\n  JsonRpcSuccessStruct,\n  JsonRpcFailureStruct,\n]);\n\n/**\n * A JSON-RPC response object. Must be checked to determine whether it's a\n * success or failure.\n *\n * @template Result - The type of the result.\n */\nexport type JsonRpcResponse<Result extends Json = Json> =\n  | JsonRpcSuccess<Result>\n  | JsonRpcFailure;\n\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nexport function isPendingJsonRpcResponse(\n  response: unknown,\n): response is PendingJsonRpcResponse {\n  return is(response, PendingJsonRpcResponseStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nexport function assertIsPendingJsonRpcResponse(\n  response: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts response is PendingJsonRpcResponse {\n  assertStruct(\n    response,\n    PendingJsonRpcResponseStruct,\n    'Invalid pending JSON-RPC response',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nexport function isJsonRpcResponse(\n  response: unknown,\n): response is JsonRpcResponse {\n  return is(response, JsonRpcResponseStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nexport function assertIsJsonRpcResponse(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcResponse {\n  assertStruct(\n    value,\n    JsonRpcResponseStruct,\n    'Invalid JSON-RPC response',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nexport function isJsonRpcSuccess(value: unknown): value is JsonRpcSuccess {\n  return is(value, JsonRpcSuccessStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nexport function assertIsJsonRpcSuccess(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcSuccess {\n  assertStruct(\n    value,\n    JsonRpcSuccessStruct,\n    'Invalid JSON-RPC success response',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nexport function isJsonRpcFailure(value: unknown): value is JsonRpcFailure {\n  return is(value, JsonRpcFailureStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nexport function assertIsJsonRpcFailure(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcFailure {\n  assertStruct(\n    value,\n    JsonRpcFailureStruct,\n    'Invalid JSON-RPC failure response',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nexport function isJsonRpcError(value: unknown): value is JsonRpcError {\n  return is(value, JsonRpcErrorStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nexport function assertIsJsonRpcError(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcError {\n  assertStruct(\n    value,\n    JsonRpcErrorStruct,\n    'Invalid JSON-RPC error',\n    ErrorWrapper,\n  );\n}\n\ntype JsonRpcValidatorOptions = {\n  permitEmptyString?: boolean;\n  permitFractions?: boolean;\n  permitNull?: boolean;\n};\n\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nexport function getJsonRpcIdValidator(options?: JsonRpcValidatorOptions) {\n  const { permitEmptyString, permitFractions, permitNull } = {\n    permitEmptyString: true,\n    permitFractions: false,\n    permitNull: true,\n    ...options,\n  };\n\n  /**\n   * Type guard for {@link JsonRpcId}.\n   *\n   * @param id - The JSON-RPC ID value to check.\n   * @returns Whether the given ID is valid per the options given to the\n   * factory.\n   */\n  const isValidJsonRpcId = (id: unknown): id is JsonRpcId => {\n    return Boolean(\n      (typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n        (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n        (permitNull && id === null),\n    );\n  };\n\n  return isValidJsonRpcId;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.cjs.map", "import type { Debugger } from 'debug';\nimport debug from 'debug';\n\nconst globalLogger = debug('metamask');\n\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nexport function createProjectLogger(projectName: string): Debugger {\n  return globalLogger.extend(projectName);\n}\n\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nexport function createModuleLogger(\n  projectLogger: Debugger,\n  moduleName: string,\n): Debugger {\n  return projectLogger.extend(moduleName);\n}\n", "import { assert } from './assert';\nimport type { Hex } from './hex';\nimport { add0x, assertIsHexString } from './hex';\n\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nexport const numberToHex = (value: number): Hex => {\n  assert(typeof value === 'number', 'Value must be a number.');\n  assert(value >= 0, 'Value must be a non-negative number.');\n  assert(\n    Number.isSafeInteger(value),\n    'Value is not a safe integer. Use `bigIntToHex` instead.',\n  );\n\n  return add0x(value.toString(16));\n};\n\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nexport const bigIntToHex = (value: bigint): Hex => {\n  assert(typeof value === 'bigint', 'Value must be a bigint.');\n  assert(value >= 0, 'Value must be a non-negative bigint.');\n\n  return add0x(value.toString(16));\n};\n\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nexport const hexToNumber = (value: string): number => {\n  assertIsHexString(value);\n\n  // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n  // not. Using this is slightly faster than `Number(add0x(value))`.\n  const numberValue = parseInt(value, 16);\n\n  assert(\n    Number.isSafeInteger(numberValue),\n    'Value is not a safe integer. Use `hexToBigInt` instead.',\n  );\n\n  return numberValue;\n};\n\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nexport const hexToBigInt = (value: string): bigint => {\n  assertIsHexString(value);\n\n  // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n  return BigInt(add0x(value));\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.cjs.map", "/**\n * A deferred Promise.\n *\n * A deferred Promise is one that can be resolved or rejected independently of\n * the Promise construction.\n * @template Result - The result type of the Promise.\n */\nexport type DeferredPromise<Result = void> = {\n  /**\n   * The Promise that has been deferred.\n   */\n  promise: Promise<Result>;\n  /**\n   * A function that resolves the Promise.\n   */\n  resolve: (result: Result) => void;\n  /**\n   * A function that rejects the Promise.\n   */\n  reject: (error: unknown) => void;\n};\n\n/**\n * Create a defered Promise.\n *\n * If the Promise is rejected prior to a handler being added, this can result in an\n * `UnhandledPromiseRejection` error. Optionally this can be suppressed with the\n * `suppressUnhandledRejection` flag, as it's common to belatedly handle deferred Promises, or to\n * ignore them if they're no longer relevant (e.g. related to a cancelled request).\n *\n * However, be very careful that you have handled the Promise if you do this. Suppressing these\n * errors is dangerous, they exist for good reason. An unhandled rejection can hide errors, making\n * debugging extremely difficult. They should only be suppressed if you're confident that the\n * Promise is always handled correctly, in both the success and failure cases.\n *\n * @param args - The arguments.\n * @param args.suppressUnhandledRejection - This option adds an empty error handler\n * to the Promise to suppress the UnhandledPromiseRejection error. This can be\n * useful if the deferred Promise is sometimes intentionally not used.\n * @returns A deferred Promise.\n * @template Result - The result type of the Promise.\n */\nexport function createDeferredPromise<Result = void>({\n  suppressUnhandledRejection = false,\n}: {\n  suppressUnhandledRejection?: boolean;\n} = {}): DeferredPromise<Result> {\n  let resolve: DeferredPromise<Result>['resolve'];\n  let reject: DeferredPromise<Result>['reject'];\n  const promise = new Promise<Result>(\n    (\n      innerResolve: DeferredPromise<Result>['resolve'],\n      innerReject: DeferredPromise<Result>['reject'],\n    ) => {\n      resolve = innerResolve;\n      reject = innerReject;\n    },\n  );\n\n  if (suppressUnhandledRejection) {\n    promise.catch((_error) => {\n      // This handler is used to suppress the UnhandledPromiseRejection error\n    });\n  }\n\n  // @ts-expect-error We know that these are assigned, but TypeScript doesn't\n  return { promise, resolve, reject };\n}\n", "/**\n * Common duration constants, in milliseconds.\n */\nexport enum Duration {\n  /**\n   * A millisecond.\n   */\n  Millisecond = 1,\n\n  /**\n   * A second, in milliseconds.\n   */\n  Second = 1000, // Millisecond * 1000\n\n  /**\n   * A minute, in milliseconds.\n   */\n  Minute = 60_000, // Second * 60\n\n  /**\n   * An hour, in milliseconds.\n   */\n  Hour = 3_600_000, // Minute * 60\n\n  /**\n   * A day, in milliseconds.\n   */\n  Day = 86_400_000, // Hour * 24\n\n  /**\n   * A week, in milliseconds.\n   */\n  Week = 604_800_000, // Day * 7\n\n  /**\n   * A year, in milliseconds.\n   */\n  Year = 31_536_000_000, // Day * 365\n}\n\nconst isNonNegativeInteger = (number: number) =>\n  Number.isInteger(number) && number >= 0;\n\nconst assertIsNonNegativeInteger = (number: number, name: string) => {\n  if (!isNonNegativeInteger(number)) {\n    throw new Error(\n      `\"${name}\" must be a non-negative integer. Received: \"${number}\".`,\n    );\n  }\n};\n\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nexport function inMilliseconds(count: number, duration: Duration): number {\n  assertIsNonNegativeInteger(count, 'count');\n  return count * duration;\n}\n\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nexport function timeSince(timestamp: number): number {\n  assertIsNonNegativeInteger(timestamp, 'timestamp');\n  return Date.now() - timestamp;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.cjs.map", "import type { Struct } from '@metamask/superstruct';\nimport { is, refine, string } from '@metamask/superstruct';\nimport {\n  gt as gtSemver,\n  gtr as gtrSemver,\n  satisfies as satisfiesSemver,\n  valid as validSemVerVersion,\n  validRange as validSemVerRange,\n} from 'semver';\n\nimport { assertStruct } from './assert';\nimport type { Opaque } from './opaque';\n\n/**\n * {@link https://codemix.com/opaque-types-in-javascript/ Opaque} type for SemVer ranges.\n *\n * @example Use {@link assertIsSemVerRange} and {@link isValidSemVerRange} to cast to proper type.\n * ```typescript\n * const unsafeRange: string = dataFromUser();\n * assertIsSemVerRange(unsafeRange);\n * unsafeRange\n * // ^? SemVerRange\n * ```\n * @example If you know what you're doing and want to side-step type safety, casting from a string works correctly.\n * ```typescript\n * const unsafeRange: string = dataFromUser();\n * unsafeRange as SemVerRange;\n * // ^? SemVerRange\n * ```\n * @see {@link assertIsSemVerRange}\n * @see {@link isValidSemVerRange}\n */\nexport type SemVerRange = Opaque<string, typeof semVerRange>;\ndeclare const semVerRange: unique symbol;\n\n/**\n * {@link https://codemix.com/opaque-types-in-javascript/ Opaque} type for singular SemVer version.\n *\n * @example Use {@link assertIsSemVerVersion} and {@link isValidSemVerVersion} to cast to proper type.\n * ```typescript\n * const unsafeVersion: string = dataFromUser();\n * assertIsSemVerVersion(unsafeRange);\n * unsafeVersion\n * // ^? SemVerVersion\n * ```\n * @example If you know what you're doing and want to side-step type safety, casting from a string works correctly.\n * ```typescript\n * const unsafeVersion: string = dataFromUser();\n * unsafeRange as SemVerVersion;\n * // ^? SemVerVersion\n * ```\n * @see {@link assertIsSemVerVersion}\n * @see {@link isValidSemVerVersion}\n */\nexport type SemVerVersion = Opaque<string, typeof semVerVersion>;\ndeclare const semVerVersion: unique symbol;\n\n/**\n * A struct for validating a version string.\n */\nexport const VersionStruct = refine<SemVerVersion, null>(\n  string() as unknown as Struct<SemVerVersion, null>,\n  'Version',\n  (value) => {\n    if (validSemVerVersion(value) === null) {\n      return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n  },\n);\n\nexport const VersionRangeStruct = refine<SemVerRange, null>(\n  string() as unknown as Struct<SemVerRange, null>,\n  'Version range',\n  (value) => {\n    if (validSemVerRange(value) === null) {\n      return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n  },\n);\n\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nexport function isValidSemVerVersion(\n  version: unknown,\n): version is SemVerVersion {\n  return is(version, VersionStruct);\n}\n\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nexport function isValidSemVerRange(\n  versionRange: unknown,\n): versionRange is SemVerRange {\n  return is(versionRange, VersionRangeStruct);\n}\n\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nexport function assertIsSemVerVersion(\n  version: unknown,\n): asserts version is SemVerVersion {\n  assertStruct(version, VersionStruct);\n}\n\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nexport function assertIsSemVerRange(\n  range: unknown,\n): asserts range is SemVerRange {\n  assertStruct(range, VersionRangeStruct);\n}\n\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nexport function gtVersion(\n  version1: SemVerVersion,\n  version2: SemVerVersion,\n): boolean {\n  return gtSemver(version1, version2);\n}\n\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nexport function gtRange(version: SemVerVersion, range: SemVerRange): boolean {\n  return gtrSemver(version, range);\n}\n\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nexport function satisfiesVersionRange(\n  version: SemVerVersion,\n  versionRange: SemVerRange,\n): boolean {\n  return satisfiesSemver(version, versionRange, {\n    includePrerelease: true,\n  });\n}\n", "/* eslint-disable operator-assignment */\n/*\nPrimary Attribution\nRichard Moore <ricmoo@me.com>\nhttps://github.com/ethers-io\n\nNote, Richard is a god of ether gods. Follow and respect him, and use Ethers.io!\n*/\n\nconst zero = BigInt(0);\nconst negative1 = BigInt(-1);\n\n/**\n * Converts a string, number, or bigint to a bigint.\n *\n * @param arg - The value to convert to bigint.\n * @returns The bigint representation of the input.\n * @throws Error if the input type cannot be converted to bigint.\n */\nexport function numericToBigInt(arg: string | number | bigint): bigint {\n  if (typeof arg === 'string') {\n    return BigInt(arg);\n  }\n  if (typeof arg === 'number') {\n    return BigInt(arg);\n  }\n  if (typeof arg === 'bigint') {\n    return arg;\n  }\n\n  throw new Error(`Cannot convert ${typeof arg} to BigInt`);\n}\n\n// complete ethereum unit map\nexport const unitMap = {\n  noether: '0',\n  wei: '1',\n  kwei: '1000',\n  Kwei: '1000',\n  babbage: '1000',\n  femtoether: '1000',\n  mwei: '1000000',\n  Mwei: '1000000',\n  lovelace: '1000000',\n  picoether: '1000000',\n  gwei: '1000000000',\n  Gwei: '1000000000',\n  shannon: '1000000000',\n  nanoether: '1000000000',\n  nano: '1000000000',\n  szabo: '1000000000000',\n  microether: '1000000000000',\n  micro: '1000000000000',\n  finney: '1000000000000000',\n  milliether: '1000000000000000',\n  milli: '1000000000000000',\n  ether: '1000000000000000000',\n  kether: '1000000000000000000000',\n  grand: '1000000000000000000000',\n  mether: '1000000000000000000000000',\n  gether: '1000000000000000000000000000',\n  tether: '1000000000000000000000000000000',\n} as const;\n\n// Pre-computed unit values as BigInt for performance\nconst unitMapBigInt = Object.fromEntries(\n  Object.entries(unitMap).map(([key, value]) => [key, BigInt(value)]),\n) as Record<EthereumUnit, bigint>;\n\nconst unitLengths = Object.fromEntries(\n  Object.entries(unitMap).map(([key, value]) => [key, value.length - 1 || 1]),\n) as Record<EthereumUnit, number>;\n\nconst NUMBER_REGEX = /^-?[0-9.]+$/u;\nconst FRACTION_REGEX = /^([0-9]*[1-9]|0)(0*)/u;\nconst COMMIFY_REGEX = /\\B(?=(\\d{3})+(?!\\d))/gu;\n\ntype EthereumUnit = keyof typeof unitMap;\n\n/**\n * Returns value of unit in Wei.\n *\n * @param unitInput - The unit to convert to, default ether.\n * @returns Value of the unit (in Wei).\n * @throws Error if the unit is not correct.\n */\nexport function getValueOfUnit(unitInput: EthereumUnit = 'ether'): bigint {\n  const unit = unitInput.toLowerCase() as EthereumUnit;\n  const unitValue = unitMapBigInt[unit];\n\n  if (unitValue === undefined) {\n    throw new Error(\n      `The unit provided ${unitInput} doesn't exist, please use the one of the following units ${JSON.stringify(\n        unitMap,\n        null,\n        2,\n      )}`,\n    );\n  }\n\n  return unitValue;\n}\n\n/**\n * Converts a number to a string.\n *\n * @param arg - The number to convert to a string.\n * @returns The string representation of the number.\n * @throws Error if the number is invalid.\n */\nexport function numberToString(arg: string | number | bigint) {\n  if (typeof arg === 'string') {\n    if (!NUMBER_REGEX.test(arg)) {\n      throw new Error(\n        `while converting number to string, invalid number value '${arg}', should be a number matching (^-?[0-9.]+).`,\n      );\n    }\n    return arg;\n  }\n  if (typeof arg === 'number') {\n    return String(arg);\n  }\n  if (typeof arg === 'bigint') {\n    return arg.toString();\n  }\n  throw new Error(\n    `while converting number to string, invalid number value '${String(\n      arg,\n    )}' type ${typeof arg}.`,\n  );\n}\n\n/**\n * Converts a number from Wei to a string.\n *\n * @param weiInput - The number to convert from Wei.\n * @param unit - The unit to convert to, default ether.\n * @param optionsInput - The options to use for the conversion.\n * @param optionsInput.pad - Whether to pad the fractional part with zeros.\n * @param optionsInput.commify - Whether to add commas to separate thousands.\n * @returns The string representation of the number.\n * @throws Error if the number is invalid.\n */\nexport function fromWei(\n  weiInput: string | number | bigint,\n  unit: EthereumUnit,\n  optionsInput?: { pad?: boolean; commify?: boolean },\n) {\n  let wei = numericToBigInt(weiInput);\n  const negative = wei < zero;\n  const unitLower = unit.toLowerCase() as EthereumUnit;\n  const base = unitMapBigInt[unitLower];\n  const baseLength = unitLengths[unitLower];\n  const options = optionsInput ?? {};\n\n  if (base === undefined) {\n    throw new Error(\n      `The unit provided ${unit} doesn't exist, please use the one of the following units ${JSON.stringify(\n        unitMap,\n        null,\n        2,\n      )}`,\n    );\n  }\n\n  // Handle special case of noether (base = 0)\n  if (base === zero) {\n    return negative ? '-0' : '0';\n  }\n\n  if (negative) {\n    wei = wei * negative1;\n  }\n\n  let fraction = (wei % base).toString();\n\n  fraction = fraction.padStart(baseLength, '0');\n\n  if (!options.pad) {\n    const fractionMatch = fraction.match(FRACTION_REGEX);\n    // istanbul ignore next: defensive fallback that's never reachable but necessary to satisfy TS\n    fraction = fractionMatch?.[1] ?? '0';\n  }\n\n  let whole = (wei / base).toString();\n\n  if (options.commify) {\n    whole = whole.replace(COMMIFY_REGEX, ',');\n  }\n\n  let value = `${whole}${fraction === '0' ? '' : `.${fraction}`}`;\n\n  if (negative) {\n    value = `-${value}`;\n  }\n\n  return value;\n}\n\n/**\n * Converts a number to Wei.\n *\n * @param etherInput - The number to convert to Wei.\n * @param unit - The unit to convert to, default ether.\n * @returns The number in Wei.\n * @throws Error if the number is invalid.\n */\nexport function toWei(\n  etherInput: string | number | bigint,\n  unit: EthereumUnit,\n): bigint {\n  const unitLower = unit.toLowerCase() as EthereumUnit;\n  const base = unitMapBigInt[unitLower];\n  const baseLength = unitLengths[unitLower];\n\n  if (base === undefined) {\n    throw new Error(\n      `The unit provided ${unit} doesn't exist, please use the one of the following units ${JSON.stringify(\n        unitMap,\n        null,\n        2,\n      )}`,\n    );\n  }\n\n  // Handle special case of noether (base = 0)\n  if (base === zero) {\n    return zero;\n  }\n\n  // Fast path for bigint inputs when unit is wei (no conversion needed)\n  if (typeof etherInput === 'bigint' && unitLower === 'wei') {\n    return etherInput;\n  }\n\n  // Fast path for bigint inputs with whole units (no fractional part)\n  if (typeof etherInput === 'bigint') {\n    return etherInput * base;\n  }\n\n  let ether = numberToString(etherInput);\n\n  // Is it negative?\n  const negative = ether.startsWith('-');\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error(\n      `While converting number ${etherInput} to wei, invalid value`,\n    );\n  }\n\n  // Split it into a whole and fractional part\n  const comps = ether.split('.');\n  if (comps.length > 2) {\n    throw new Error(\n      `While converting number ${etherInput} to wei,  too many decimal points`,\n    );\n  }\n\n  let whole = comps[0];\n  let fraction = comps[1];\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error(\n      `While converting number ${etherInput} to wei, too many decimal places`,\n    );\n  }\n\n  fraction = fraction.padEnd(baseLength, '0');\n\n  const wholeBigInt = BigInt(whole);\n  const fractionBigInt = BigInt(fraction);\n  let wei = wholeBigInt * base + fractionBigInt;\n\n  if (negative) {\n    wei = wei * negative1;\n  }\n\n  return wei;\n}\n", "export * from './assert';\nexport * from './base64';\nexport * from './bytes';\nexport * from './caip-types';\nexport * from './checksum';\nexport * from './coercers';\nexport * from './collections';\nexport * from './encryption-types';\nexport * from './errors';\nexport type { Hex } from './hex';\nexport {\n  HexStruct,\n  StrictHexStruct,\n  HexAddressStruct,\n  HexChecksumAddressStruct,\n  isHexString,\n  isStrictHexString,\n  isHexAddress,\n  isHexChecksumAddress,\n  assertIsHexString,\n  assertIsStrictHexString,\n  isValidHexAddress,\n  getChecksumAddress,\n  isValidChecksumAddress,\n  add0x,\n  remove0x,\n} from './hex';\nexport * from './json';\nexport * from './keyring';\nexport * from './logging';\nexport * from './misc';\nexport * from './number';\nexport * from './opaque';\nexport * from './promise';\nexport * from './superstruct';\nexport * from './time';\nexport * from './transaction-types';\nexport * from './versions';\nexport {\n  toWei,\n  fromWei,\n  numberToString,\n  getValueOfUnit,\n  unitMap,\n} from './unitsConversion';\n", "import { hasProperty, isObject } from '@metamask/utils';\n\n/**\n * Attempt to get an error message from a value.\n *\n * - If the value is an error, the error's message is returned.\n * - If the value is an object with a `message` property, the value of that\n * property is returned.\n * - If the value is a string, the value is returned.\n * - Otherwise, \"Unknown error.\" is returned.\n *\n * @param error - The value to get an error message from.\n * @returns The error message.\n * @internal\n */\nexport const getErrorMessage = (error?: unknown): string => {\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  if (\n    isObject(error) &&\n    hasProperty(error, 'message') &&\n    typeof error.message === 'string'\n  ) {\n    return error.message;\n  }\n\n  return 'Unknown error.';\n};\n\n/**\n * Get the error stack from a value. If the value is an error, the error's stack\n * is returned. Otherwise, it returns `undefined`.\n *\n * @param error - The value to get an error stack from.\n * @returns The error stack, or `undefined` if the value is not an error.\n * @internal\n */\nexport const getErrorStack = (error?: unknown): string | undefined => {\n  if (error instanceof Error) {\n    return error.stack;\n  }\n\n  return undefined;\n};\n\n/**\n * An error that is thrown when the ABI encoder or decoder encounters an\n * issue.\n */\nexport class ParserError extends Error {\n  readonly name = 'ParserError';\n\n  constructor(message: string, originalError?: unknown) {\n    super(message);\n\n    const originalStack = getErrorStack(originalError);\n    if (originalStack) {\n      this.stack = originalStack;\n    }\n  }\n}\n", "import { assert } from '@metamask/utils';\n\ntype IteratorValue = {\n  skip(length: number): void;\n  value: Uint8Array;\n};\n\n/**\n * Iterate over a buffer with the specified size. This will yield a part of the\n * buffer starting at an increment of the specified size, until the end of the\n * buffer is reached.\n *\n * Calling the `skip` function will make it skip the specified number of bytes.\n *\n * @param buffer - The buffer to iterate over.\n * @param size - The number of bytes to iterate with.\n * @returns An iterator that yields the parts of the byte array.\n * @yields The parts of the byte array.\n */\nexport const iterate = function* (\n  buffer: Uint8Array,\n  size = 32,\n): Generator<IteratorValue, IteratorValue, IteratorValue> {\n  for (let pointer = 0; pointer < buffer.length; pointer += size) {\n    const skip = (length: number) => {\n      assert(length >= 0, 'Cannot skip a negative number of bytes.');\n      assert(length % size === 0, 'Length must be a multiple of the size.');\n\n      pointer += length;\n    };\n\n    const value = buffer.subarray(pointer);\n\n    yield { skip, value };\n  }\n\n  return {\n    skip: () => undefined,\n    value: new Uint8Array(),\n  };\n};\n", "import { concatBytes } from '@metamask/utils';\n\nconst BUFFER_WIDTH = 32;\n\n/**\n * Set `buffer` in `target` at the specified position.\n *\n * @param target - The buffer to set to.\n * @param buffer - The buffer to set in the target.\n * @param position - The position at which to set the target.\n * @returns The combined buffer.\n */\nexport const set = (\n  target: Uint8Array,\n  buffer: Uint8Array,\n  position: number,\n): Uint8Array => {\n  return concatBytes([\n    target.subarray(0, position),\n    buffer,\n    target.subarray(position + buffer.length),\n  ]);\n};\n\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the start.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nexport const padStart = (\n  buffer: Uint8Array,\n  length = BUFFER_WIDTH,\n): Uint8Array => {\n  const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(\n    0x00,\n  );\n\n  return concatBytes([padding, buffer]);\n};\n\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the end.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nexport const padEnd = (\n  buffer: Uint8Array,\n  length = BUFFER_WIDTH,\n): Uint8Array => {\n  const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(\n    0x00,\n  );\n\n  return concatBytes([buffer, padding]);\n};\n", "export * from './buffer';\n", "import {\n  add0x,\n  assert,\n  BytesLike,\n  bytesToHex,\n  concatBytes,\n  createBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { padStart } from '../utils';\nimport { Parser } from './parser';\n\n/**\n * Normalize an address value. This accepts the address as:\n *\n * - A hex string starting with the `0x` prefix.\n * - A byte array (`Uint8Array` or `Buffer`).\n *\n * It checks that the address is 20 bytes long.\n *\n * @param value - The value to normalize.\n * @returns The normalized address as `Uint8Array`.\n */\nexport const getAddress = (value: BytesLike): Uint8Array => {\n  const bytesValue = createBytes(value);\n  assert(\n    bytesValue.length <= 20,\n    new ParserError(\n      `Invalid address value. Expected address to be 20 bytes long, but received ${bytesValue.length} bytes.`,\n    ),\n  );\n\n  return padStart(bytesValue, 20);\n};\n\nexport const address: Parser<BytesLike, string> = {\n  isDynamic: false,\n\n  /**\n   * Get if the given value is a valid address type. Since `address` is a simple\n   * type, this is just a check that the value is \"address\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a valid address type.\n   */\n  isType: (type) => type === 'address',\n\n  /**\n   * Get the byte length of an encoded address. Since `address` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual addresses are only 20 bytes long, but the encoding of\n   * the `address` type is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded address.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given address to a 32-byte-long byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The address to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded address added to it.\n   */\n  encode({ buffer, value, packed }): Uint8Array {\n    const addressValue = getAddress(value);\n\n    // If we're using packed encoding, we can just add the address bytes to the\n    // byte array, without adding any padding.\n    if (packed) {\n      return concatBytes([buffer, addressValue]);\n    }\n\n    const addressBuffer = padStart(addressValue);\n    return concatBytes([buffer, addressBuffer]);\n  },\n\n  /**\n   * Decode the given byte array to an address.\n   *\n   * @param args - The decoding arguments.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded address as a hexadecimal string, starting with the\n   * \"0x\"-prefix.\n   */\n  decode({ value }): string {\n    return add0x(bytesToHex(value.slice(12, 32)));\n  },\n};\n", "import { assert, BytesLike, concatBytes, createBytes } from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { padEnd } from '../utils';\nimport { Parser } from './parser';\n\nconst BYTES_REGEX = /^bytes([0-9]{1,2})$/u;\n\n/**\n * Get the length of the specified type. If a length is not specified, or if the\n * length is out of range (0 < n <= 32), this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The byte length of the type.\n */\nexport const getByteLength = (type: string): number => {\n  const bytes = type.match(BYTES_REGEX)?.[1];\n  assert(\n    bytes,\n    `Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`,\n  );\n\n  const length = Number(bytes);\n  assert(\n    length > 0 && length <= 32,\n    new ParserError(\n      `Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`,\n    ),\n  );\n\n  return length;\n};\n\nexport const fixedBytes: Parser<BytesLike, Uint8Array> = {\n  isDynamic: false,\n\n  /**\n   * Check if a type is a fixed bytes type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a fixed bytes type.\n   */\n  isType(type: string): boolean {\n    return BYTES_REGEX.test(type);\n  },\n\n  /**\n   * Get the byte length of an encoded fixed bytes type.\n   *\n   * @returns The byte length of the type.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode a fixed bytes value.\n   *\n   * @param args - The arguments to encode.\n   * @param args.type - The type of the value.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded value added to it.\n   */\n  encode({ type, buffer, value, packed }): Uint8Array {\n    const length = getByteLength(type);\n    const bufferValue = createBytes(value);\n\n    assert(\n      bufferValue.length <= length,\n      new ParserError(\n        `Expected a value of length ${length}, but received a value of length ${bufferValue.length}.`,\n      ),\n    );\n\n    // For packed encoding, the value is padded to the length of the type, and\n    // then added to the byte array.\n    if (packed) {\n      return concatBytes([buffer, padEnd(bufferValue, length)]);\n    }\n\n    return concatBytes([buffer, padEnd(bufferValue)]);\n  },\n\n  /**\n   * Decode a fixed bytes value.\n   *\n   * @param args - The arguments to decode.\n   * @param args.type - The type of the value.\n   * @param args.value - The value to decode.\n   * @returns The decoded value as a `Uint8Array`.\n   */\n  decode({ type, value }): Uint8Array {\n    const length = getByteLength(type);\n\n    // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n    // into a new array.\n    return value.slice(0, length);\n  },\n};\n", "import { assert } from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { getParser, isDynamicParser, pack, unpack } from '../packer';\nimport { Parser } from './parser';\n\nconst TUPLE_REGEX = /^\\((.+)\\)$/u;\n\nconst isTupleType = (type: string): boolean => TUPLE_REGEX.test(type);\n\n/**\n * Get elements from a tuple type.\n *\n * @param type - The tuple type to get the types for.\n * @returns The elements of the tuple as string array.\n */\nexport const getTupleElements = (type: string): string[] => {\n  assert(\n    type.startsWith('(') && type.endsWith(')'),\n    new ParserError(\n      `Invalid tuple type. Expected tuple type, but received \"${type}\".`,\n    ),\n  );\n\n  const elements: string[] = [];\n  let current = '';\n  let depth = 0;\n\n  for (let i = 1; i < type.length - 1; i++) {\n    const char = type[i];\n\n    if (char === ',' && depth === 0) {\n      elements.push(current.trim());\n      current = '';\n    } else {\n      current += char;\n\n      if (char === '(') {\n        depth += 1;\n      } else if (char === ')') {\n        depth -= 1;\n      }\n    }\n  }\n\n  if (current.trim()) {\n    elements.push(current.trim());\n  }\n\n  return elements;\n};\n\nexport const tuple: Parser<unknown[]> = {\n  /**\n   * Check if the tuple is dynamic. Tuples are dynamic if one or more elements\n   * of the tuple are dynamic.\n   *\n   * @param type - The type to check.\n   * @returns Whether the tuple is dynamic.\n   */\n  isDynamic(type: string): boolean {\n    const elements = getTupleElements(type);\n    return elements.some((element) => {\n      const parser = getParser(element);\n      return isDynamicParser(parser, element);\n    });\n  },\n\n  /**\n   * Check if a type is a tuple type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a tuple type.\n   */\n  isType(type: string): boolean {\n    return isTupleType(type);\n  },\n\n  /**\n   * Get the byte length of a tuple type. If the tuple is dynamic, this will\n   * always return 32. If the tuple is static, this will return the sum of the\n   * byte lengths of the tuple elements.\n   *\n   * @param type - The type to get the byte length for.\n   * @returns The byte length of the tuple type.\n   */\n  getByteLength(type: string): number {\n    if (isDynamicParser(this, type)) {\n      return 32;\n    }\n\n    const elements = getTupleElements(type);\n\n    return elements.reduce((total, element) => {\n      return total + getParser(element).getByteLength(element);\n    }, 0);\n  },\n\n  /**\n   * Encode a tuple value.\n   *\n   * @param args - The encoding arguments.\n   * @param args.type - The type of the value.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The value to encode.\n   * @param args.packed - Whether to use non-standard packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded value added to it.\n   */\n  encode({ type, buffer, value, packed, tight }): Uint8Array {\n    const elements = getTupleElements(type);\n    return pack({\n      types: elements,\n      values: value,\n      byteArray: buffer,\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode a tuple value.\n   *\n   * @param args - The decoding arguments.\n   * @param args.type - The type of the value.\n   * @param args.value - The value to decode.\n   * @param args.skip - A function to skip a number of bytes.\n   * @returns The decoded value.\n   */\n  decode({ type, value, skip }): unknown[] {\n    const elements = getTupleElements(type);\n\n    const length = this.getByteLength(type) - 32;\n    skip(length);\n\n    return unpack(elements, value);\n  },\n};\n", "import {\n  assert,\n  bytesToNumber,\n  concatBytes,\n  numberToBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { getParser, isDynamicParser, pack, unpack } from '../packer';\nimport { padStart } from '../utils';\nimport { fixedBytes } from './fixed-bytes';\nimport { Parser } from './parser';\nimport { tuple } from './tuple';\n\nconst ARRAY_REGEX = /^(?<type>.*)\\[(?<length>\\d*?)\\]$/u;\n\nexport const isArrayType = (type: string): boolean => ARRAY_REGEX.test(type);\n\n/**\n * Get the type of the array.\n *\n * @param type - The type to get the array type for.\n * @returns The array type.\n */\nexport const getArrayType = (\n  type: string,\n): [type: string, length: number | undefined] => {\n  const match = type.match(ARRAY_REGEX);\n  assert(\n    match?.groups?.type,\n    new ParserError(\n      `Invalid array type. Expected an array type, but received \"${type}\".`,\n    ),\n  );\n\n  return [\n    match.groups.type,\n    match.groups.length ? parseInt(match.groups.length, 10) : undefined,\n  ];\n};\n\n/**\n * Get the type of the array as a tuple type. This is used for encoding fixed\n * length arrays, which are encoded as tuples.\n *\n * @param innerType - The type of the array.\n * @param length - The length of the array.\n * @returns The tuple type.\n */\nexport const getTupleType = (innerType: string, length: number): string => {\n  return `(${new Array(length).fill(innerType).join(',')})`;\n};\n\nexport const array: Parser<unknown[]> = {\n  /**\n   * Check if the array is dynamic. Arrays are dynamic if the array does not\n   * have a fixed length, or if the array type is dynamic.\n   *\n   * @param type - The type to check.\n   * @returns Whether the array is dynamic.\n   */\n  isDynamic(type: string): boolean {\n    const [innerType, length] = getArrayType(type);\n    return (\n      // `T[]` is dynamic for any `T`. `T[k]` is dynamic for any dynamic `T` and\n      // any `k >= 0`.\n      length === undefined || isDynamicParser(getParser(innerType), innerType)\n    );\n  },\n\n  /**\n   * Check if a type is an array type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is an array type.\n   */\n  isType(type: string): boolean {\n    return isArrayType(type);\n  },\n\n  /**\n   * Get the byte length of an encoded array. If the array is dynamic, this\n   * returns 32, i.e., the length of the pointer to the array. If the array is\n   * static, this returns the byte length of the resulting tuple type.\n   *\n   * @param type - The type to get the byte length for.\n   * @returns The byte length of an encoded array.\n   */\n  getByteLength(type: string): number {\n    assert(\n      isArrayType(type),\n      new ParserError(`Expected an array type, but received \"${type}\".`),\n    );\n\n    const [innerType, length] = getArrayType(type);\n    if (!isDynamicParser(this, type) && length !== undefined) {\n      return tuple.getByteLength(getTupleType(innerType, length));\n    }\n\n    return 32;\n  },\n\n  /**\n   * Encode the given array to a byte array. If the array is static, this uses\n   * the tuple encoder.\n   *\n   * @param args - The encoding arguments.\n   * @param args.type - The type of the array.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The array to encode.\n   * @param args.packed - Whether to use non-standard packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded array added to it.\n   */\n  encode({ type, buffer, value, packed, tight }): Uint8Array {\n    const [arrayType, fixedLength] = getArrayType(type);\n\n    // Packed encoding does not support nested arrays.\n    assert(\n      !packed || !isArrayType(arrayType),\n      new ParserError(`Cannot pack nested arrays.`),\n    );\n\n    // Tightly pack `T[]` where `T` is a dynamic type. This is not supported in\n    // Solidity, but is commonly used in the Ethereum ecosystem.\n    if (packed && isDynamicParser(getParser(arrayType), arrayType)) {\n      return pack({\n        types: new Array(value.length).fill(arrayType),\n        values: value,\n        byteArray: buffer,\n        packed,\n        arrayPacked: true,\n        tight,\n      });\n    }\n\n    if (fixedLength) {\n      assert(\n        fixedLength === value.length,\n        new ParserError(\n          `Array length does not match type length. Expected a length of ${fixedLength}, but received ${value.length}.`,\n        ),\n      );\n\n      // `T[k]` for any `T` and `k` is encoded as `(T[0], ..., T[k - 1])`.\n      return tuple.encode({\n        type: getTupleType(arrayType, fixedLength),\n        buffer,\n        value,\n        // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n        // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n        // support to provide compatibility with it.\n        packed: fixedBytes.isType(arrayType) && tight,\n        tight,\n      });\n    }\n\n    // For packed encoding, we don't need to encode the length of the array,\n    // so we can just encode the values.\n    if (packed) {\n      return pack({\n        types: new Array(value.length).fill(arrayType),\n        values: value,\n        byteArray: buffer,\n        // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n        // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n        // support to provide compatibility with it.\n        packed: fixedBytes.isType(arrayType) && tight,\n        arrayPacked: true,\n        tight,\n      });\n    }\n\n    // `T[]` with `k` elements is encoded as `k (T[0], ..., T[k - 1])`. That\n    // means that we just need to encode the length of the array, and then the\n    // array itself. The pointer is encoded by the {@link pack} function.\n    const arrayLength = padStart(numberToBytes(value.length));\n    return pack({\n      types: new Array(value.length).fill(arrayType),\n      values: value,\n      byteArray: concatBytes([buffer, arrayLength]),\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode an array from the given byte array.\n   *\n   * @param args - The decoding arguments.\n   * @param args.type - The type of the array.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded array.\n   */\n  decode({ type, value, ...rest }): unknown[] {\n    const [arrayType, fixedLength] = getArrayType(type);\n\n    if (fixedLength) {\n      const result = tuple.decode({\n        type: getTupleType(arrayType, fixedLength),\n        value,\n        ...rest,\n      });\n\n      assert(\n        result.length === fixedLength,\n        new ParserError(\n          `Array length does not match type length. Expected a length of ${fixedLength}, but received ${result.length}.`,\n        ),\n      );\n\n      return result;\n    }\n\n    const arrayLength = bytesToNumber(value.subarray(0, 32));\n    return unpack(new Array(arrayLength).fill(arrayType), value.subarray(32));\n  },\n};\n", "import {\n  assert,\n  bigIntToBytes,\n  bytesToBigInt,\n  bytesToSignedBigInt,\n  concatBytes,\n  createBigInt,\n  NumberLike,\n  signedBigIntToBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { padStart } from '../utils';\nimport { DecodeArgs, Parser } from './parser';\n\nconst NUMBER_REGEX = /^u?int(?<length>[0-9]*)?$/u;\n\n/**\n * Check if a number type is signed.\n *\n * @param type - The type to check.\n * @returns Whether the type is signed.\n */\nexport const isSigned = (type: string): boolean => {\n  return !type.startsWith('u');\n};\n\n/**\n * Get the length of the specified type. If a length is not specified, if the\n * length is out of range (8 <= n <= 256), or if the length is not a multiple of\n * 8, this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The bit length of the type.\n */\nexport const getLength = (type: string): number => {\n  if (type === 'int' || type === 'uint') {\n    return 256;\n  }\n\n  const match = type.match(NUMBER_REGEX);\n  assert(\n    match?.groups?.length,\n    new ParserError(\n      `Invalid number type. Expected a number type, but received \"${type}\".`,\n    ),\n  );\n\n  const length = parseInt(match.groups.length, 10);\n  assert(\n    length >= 8 && length <= 256,\n    new ParserError(\n      `Invalid number length. Expected a number between 8 and 256, but received \"${type}\".`,\n    ),\n  );\n\n  assert(\n    length % 8 === 0,\n    new ParserError(\n      `Invalid number length. Expected a multiple of 8, but received \"${type}\".`,\n    ),\n  );\n\n  return length;\n};\n\n/**\n * Assert that the byte length of the given value is in range for the given\n * number type.\n *\n * @param value - The value to check.\n * @param type - The type of the value.\n * @throws If the value is out of range for the type.\n */\nexport const assertNumberLength = (value: bigint, type: string) => {\n  const length = getLength(type);\n  const maxValue =\n    BigInt(2) ** BigInt(length - (isSigned(type) ? 1 : 0)) - BigInt(1);\n\n  if (isSigned(type)) {\n    // Signed types must be in the range of `-(2^(length - 1))` to\n    // `2^(length - 1) - 1`.\n    assert(\n      value >= -(maxValue + BigInt(1)) && value <= maxValue,\n      new ParserError(`Number \"${value}\" is out of range for type \"${type}\".`),\n    );\n\n    return;\n  }\n\n  // Unsigned types must be in the range of `0` to `2^length - 1`.\n  assert(\n    value <= maxValue,\n    new ParserError(`Number \"${value}\" is out of range for type \"${type}\".`),\n  );\n};\n\n/**\n * Normalize a `bigint` value. This accepts the value as:\n *\n * - A `bigint`.\n * - A `number`.\n * - A decimal string, i.e., a string that does not start with \"0x\".\n * - A hexadecimal string, i.e., a string that starts with \"0x\".\n *\n * @param value - The number-like value to parse.\n * @returns The value parsed as bigint.\n */\nexport const getBigInt = (value: NumberLike): bigint => {\n  try {\n    return createBigInt(value);\n  } catch {\n    throw new ParserError(\n      `Invalid number. Expected a valid number value, but received \"${value}\".`,\n    );\n  }\n};\n\nexport const number: Parser<NumberLike, bigint> = {\n  isDynamic: false,\n\n  /**\n   * Check if a type is a number type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a number type.\n   */\n  isType(type: string): boolean {\n    return NUMBER_REGEX.test(type);\n  },\n\n  /**\n   * Get the byte length of an encoded number type. Since `int` and `uint` are\n   * simple types, this will always return 32.\n   *\n   * @returns The byte length of the type.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode a number value.\n   *\n   * @param args - The arguments to encode.\n   * @param args.type - The type of the value.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded value added to it.\n   */\n  encode({ type, buffer, value, packed }): Uint8Array {\n    const bigIntValue = getBigInt(value);\n\n    assertNumberLength(bigIntValue, type);\n\n    if (isSigned(type)) {\n      // For packed encoding, the value is padded to the length of the type, and\n      // then added to the byte array.\n      if (packed) {\n        const length = getLength(type) / 8;\n        return concatBytes([buffer, signedBigIntToBytes(bigIntValue, length)]);\n      }\n\n      return concatBytes([\n        buffer,\n        padStart(signedBigIntToBytes(bigIntValue, 32)),\n      ]);\n    }\n\n    // For packed encoding, the value is padded to the length of the type, and\n    // then added to the byte array.\n    if (packed) {\n      const length = getLength(type) / 8;\n      return concatBytes([\n        buffer,\n        padStart(bigIntToBytes(bigIntValue), length),\n      ]);\n    }\n\n    return concatBytes([buffer, padStart(bigIntToBytes(bigIntValue))]);\n  },\n\n  /**\n   * Decode a number value.\n   *\n   * @param args - The decoding arguments.\n   * @param args.type - The type of the value.\n   * @param args.value - The value to decode.\n   * @returns The decoded value.\n   */\n  decode({ type, value }: DecodeArgs): bigint {\n    const buffer = value.subarray(0, 32);\n    if (isSigned(type)) {\n      const numberValue = bytesToSignedBigInt(buffer);\n      assertNumberLength(numberValue, type);\n      return numberValue;\n    }\n\n    const numberValue = bytesToBigInt(buffer);\n    assertNumberLength(numberValue, type);\n    return numberValue;\n  },\n};\n", "import { coerce, create, literal, union, boolean } from '@metamask/superstruct';\nimport { bigIntToBytes, concatBytes } from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { number } from './number';\nimport { Parser } from './parser';\n\n/**\n * A boolean-like value. This can be a boolean literal, or \"true\" or \"false\".\n */\nexport type BooleanLike = 'true' | 'false' | boolean;\n\nconst BooleanCoercer = coerce(\n  boolean(),\n  union([literal('true'), literal('false')]),\n  (value) => value === 'true',\n);\n\n/**\n * Normalize a boolean value. This accepts the boolean as:\n *\n * - A boolean literal.\n * - The string \"true\" or \"false\".\n *\n * @param value - The value to get a boolean for.\n * @returns The parsed boolean value. This is `BigInt(1)` for truthy values, or\n * `BigInt(0)` for falsy values.\n */\nexport const getBooleanValue = (value: BooleanLike): bigint => {\n  try {\n    const booleanValue = create(value, BooleanCoercer);\n    if (booleanValue) {\n      return BigInt(1);\n    }\n\n    return BigInt(0);\n  } catch {\n    throw new ParserError(\n      `Invalid boolean value. Expected a boolean literal, or the string \"true\" or \"false\", but received \"${value}\".`,\n    );\n  }\n};\n\nexport const bool: Parser<BooleanLike, boolean> = {\n  isDynamic: false,\n\n  /**\n   * Get if the given value is a valid boolean type. Since `bool` is a simple\n   * type, this is just a check that the value is \"bool\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a valid boolean type.\n   */\n  isType: (type) => type === 'bool',\n\n  /**\n   * Get the byte length of an encoded boolean. Since `bool` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual booleans are only 1 byte long, but the encoding of\n   * the `bool` type is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded boolean.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given boolean to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The boolean to encode.\n   * @param args.packed - Whether the value is packed.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded boolean added to it.\n   */\n  encode({ buffer, value, packed, tight }): Uint8Array {\n    const booleanValue = getBooleanValue(value);\n\n    // For packed encoding, we add a single byte (`0x00` or `0x01`) to the byte\n    // array.\n    if (packed) {\n      return concatBytes([buffer, bigIntToBytes(booleanValue)]);\n    }\n\n    // Booleans are encoded as 32-byte integers, so we use the number parser\n    // to encode the boolean value.\n    return number.encode({\n      type: 'uint256',\n      buffer,\n      value: booleanValue,\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode the given byte array to a boolean.\n   *\n   * @param args - The decoding arguments.\n   * @returns The decoded boolean.\n   */\n  decode(args): boolean {\n    // Booleans are encoded as 32-byte integers, so we use the number parser\n    // to decode the boolean value.\n    return number.decode({ ...args, type: 'uint256' }) === BigInt(1);\n  },\n};\n", "import {\n  BytesLike,\n  bytesToNumber,\n  concatBytes,\n  createBytes,\n  numberToBytes,\n} from '@metamask/utils';\n\nimport { padEnd, padStart } from '../utils';\nimport { Parser } from './parser';\n\nexport const bytes: Parser<BytesLike, Uint8Array> = {\n  isDynamic: true,\n\n  /**\n   * Check if a type is a bytes type. Since `bytes` is a simple type, this is\n   * just a check that the type is \"bytes\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a bytes type.\n   */\n  isType: (type) => type === 'bytes',\n\n  /**\n   * Get the byte length of an encoded bytes value. Since `bytes` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual length of a bytes value is variable, but the encoded\n   * static value (pointer) is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded bytes value.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given bytes value to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The bytes value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded bytes value added to it.\n   */\n  encode({ buffer, value, packed }): Uint8Array {\n    const bufferValue = createBytes(value);\n\n    // For packed encoding, we can just add the bytes value to the byte array,\n    // without adding any padding or alignment. There is also no need to\n    // encode the length of the bytes.\n    if (packed) {\n      return concatBytes([buffer, bufferValue]);\n    }\n\n    const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;\n\n    // Bytes of length `k` are encoded as `k pad_right(bytes)`.\n    return concatBytes([\n      buffer,\n      padStart(numberToBytes(bufferValue.byteLength)),\n      padEnd(bufferValue, paddedSize),\n    ]);\n  },\n\n  /**\n   * Decode the given byte array to a bytes value.\n   *\n   * @param args - The decoding arguments.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded bytes value as a `Uint8Array`.\n   */\n  decode({ value }): Uint8Array {\n    const bytesValue = value.subarray(0, 32);\n    const length = bytesToNumber(bytesValue);\n\n    // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n    // into a new array.\n    return value.slice(32, 32 + length);\n  },\n};\n", "import { coerce, create, instance, object, union } from '@metamask/superstruct';\nimport {\n  assert,\n  bytesToHex,\n  concatBytes,\n  createBytes,\n  hexToBytes,\n  StrictHexStruct,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { fixedBytes } from './fixed-bytes';\nimport { Parser } from './parser';\n\n/**\n * A Solidity function-like value. This can be a hex string, a byte array, or a\n * {@link SolidityFunction} object.\n */\nexport type FunctionLike = string | Uint8Array | SolidityFunction;\n\n/**\n * A Solidity function, i.e., the address of a contract and the selector of a\n * function within that contract.\n */\nexport type SolidityFunction = {\n  /**\n   * The address of the contract. Must be a 40-character long hex string\n   * (excluding the \"0x\"-prefix).\n   */\n  address: string;\n\n  /**\n   * The selector of the function. Must be an 8-character long hex string\n   * (excluding the \"0x\"-prefix).\n   */\n  selector: string;\n};\n\n/**\n * A struct that represents a Solidity function. The value must be a hex string\n * or a byte array. The created value will always be an object with an `address`\n * and `selector` property.\n */\nconst FunctionStruct = coerce(\n  object({\n    address: StrictHexStruct,\n    selector: StrictHexStruct,\n  }),\n  union([StrictHexStruct, instance(Uint8Array)]),\n  (value) => {\n    const bytes = createBytes(value);\n    assert(\n      bytes.length === 24,\n      new ParserError(\n        `Invalid Solidity function. Expected function to be 24 bytes long, but received ${bytes.length} bytes.`,\n      ),\n    );\n\n    return {\n      address: bytesToHex(bytes.subarray(0, 20)),\n      selector: bytesToHex(bytes.subarray(20, 24)),\n    };\n  },\n);\n\n/**\n * Normalize a function. This accepts the function as:\n *\n * - A {@link SolidityFunction} object.\n * - A hexadecimal string.\n * - A byte array.\n *\n * @param input - The function-like input.\n * @returns The function as buffer.\n */\nexport const getFunction = (input: FunctionLike): Uint8Array => {\n  const value = create(input, FunctionStruct);\n  return concatBytes([hexToBytes(value.address), hexToBytes(value.selector)]);\n};\n\nexport const fn: Parser<FunctionLike, SolidityFunction> = {\n  isDynamic: false,\n\n  /**\n   * Check if a type is a function type. Since `function` is a simple type, this\n   * is just a check that the type is \"function\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a function type.\n   */\n  isType: (type) => type === 'function',\n\n  /**\n   * Get the byte length of an encoded function. Since `function` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual functions are only 24 bytes long, but the encoding of\n   * the `function` type is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded function.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given function to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The function to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded function added to it.\n   */\n  encode({ buffer, value, packed, tight }): Uint8Array {\n    const fnValue = getFunction(value);\n\n    // Functions are encoded as `bytes24`, so we use the fixedBytes parser to\n    // encode the function.\n    return fixedBytes.encode({\n      type: 'bytes24',\n      buffer,\n      value: fnValue,\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode the given byte array to a function.\n   *\n   * @param args - The decoding arguments.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded function as a {@link SolidityFunction} object.\n   */\n  decode({ value }): SolidityFunction {\n    return {\n      address: bytesToHex(value.slice(0, 20)),\n      selector: bytesToHex(value.slice(20, 24)),\n    };\n  },\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=parser.js.map", "import { bytesToString, stringToBytes } from '@metamask/utils';\n\nimport { bytes } from './bytes';\nimport { Parser } from './parser';\n\nexport const string: Parser<string> = {\n  isDynamic: true,\n\n  /**\n   * Check if a type is a string type. Since `string` is a simple type, this\n   * is just a check if the type is \"string\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a string type.\n   */\n  isType: (type) => type === 'string',\n\n  /**\n   * Get the byte length of an encoded string type. Since `string` is a simple\n   * type, this will always return 32.\n   *\n   * Note that actual strings are variable in length, but the encoded static\n   * value (pointer) is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded string.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given string value to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The string value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded string value added to it.\n   */\n  encode({ buffer, value, packed, tight }): Uint8Array {\n    // Strings are encoded as UTF-8 bytes, so we use the bytes parser to encode\n    // the string as bytes.\n    return bytes.encode({\n      type: 'bytes',\n      buffer,\n      value: stringToBytes(value),\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode the given byte array to a string value.\n   *\n   * @param args - The decoding arguments.\n   * @returns The decoded string value.\n   */\n  decode(args): string {\n    // Strings are encoded as UTF-8 bytes, so we use the bytes parser to decode\n    // the bytes, and convert them to a string.\n    return bytesToString(bytes.decode(args));\n  },\n};\n", "export * from './address';\nexport * from './array';\nexport * from './bool';\nexport * from './bytes';\nexport * from './fixed-bytes';\nexport * from './function';\nexport * from './number';\nexport * from './parser';\nexport * from './string';\nexport * from './tuple';\n", "import {\n  assert,\n  bytesToNumber,\n  concatBytes,\n  numberToBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from './errors';\nimport { iterate } from './iterator';\nimport {\n  address,\n  array,\n  bool,\n  bytes,\n  fixedBytes,\n  fn,\n  number,\n  Parser,\n  string,\n  tuple,\n} from './parsers';\nimport { TypeMap } from './types';\nimport { padStart, set } from './utils';\n\n/**\n * Get the parser for the specified type.\n *\n * @param type - The type to get a parser for.\n * @returns The parser.\n * @throws If there is no parser for the specified type.\n */\nexport const getParser = (type: string): Parser => {\n  const parsers: { [key: string]: Parser } = {\n    address,\n    array,\n    bool,\n    bytes,\n    fixedBytes,\n    function: fn,\n    number,\n    string,\n    tuple,\n  };\n\n  const staticParser = parsers[type];\n  if (staticParser) {\n    return staticParser;\n  }\n\n  const parser = Object.values(parsers).find((value) => value.isType(type));\n  if (parser) {\n    return parser;\n  }\n\n  throw new ParserError(`The type \"${type}\" is not supported.`);\n};\n\n/**\n * Check if the specified parser is dynamic, for the provided types. This is\n * primarily used for parsing tuples, where a tuple can be dynamic based on the\n * types. For other parsers, it will simply use the set `isDynamic` value.\n *\n * @param parser - The parser to check.\n * @param type - The type to check the parser with.\n * @returns Whether the parser is dynamic.\n */\nexport const isDynamicParser = (parser: Parser, type: string): boolean => {\n  const { isDynamic } = parser;\n  if (typeof isDynamic === 'function') {\n    return isDynamic(type);\n  }\n\n  return isDynamic;\n};\n\ntype Pointer = {\n  position: number;\n  pointer: number;\n};\n\ntype PackState = {\n  staticBuffer: Uint8Array;\n  dynamicBuffer: Uint8Array;\n  pointers: Pointer[];\n};\n\nexport type PackArgs<Type extends readonly string[]> = {\n  /**\n   * The types of the values to pack.\n   */\n  types: Type;\n\n  /**\n   * The values to pack.\n   */\n  values: TypeMap<Type, 'input'>;\n\n  /**\n   * Whether to use the non-standard packed mode.\n   */\n  packed?: boolean | undefined;\n\n  /**\n   * Whether to use tight packing mode. Only applicable when `packed` is true.\n   * When true, the packed mode will not add any padding bytes. This matches\n   * the packing behaviour of `ethereumjs-abi`, but is not standard.\n   */\n  tight?: boolean | undefined;\n\n  /**\n   * Whether to use the non-standard packed mode in \"array\" mode. This is\n   * normally only used by the {@link array} parser.\n   */\n  arrayPacked?: boolean | undefined;\n\n  /**\n   * The byte array to encode the values into.\n   */\n  byteArray?: Uint8Array;\n};\n\n/**\n * Pack the provided values in a buffer, encoded with the specified types. If a\n * buffer is specified, the resulting value will be concatenated with the\n * buffer.\n *\n * @param args - The arguments object.\n * @param args.types - The types of the values to pack.\n * @param args.values - The values to pack.\n * @param args.packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param args.arrayPacked - Whether to use the non-standard packed mode for\n * arrays. Defaults to `false`.\n * @param args.byteArray - The byte array to encode the values into. Defaults to\n * an empty array.\n * @param args.tight - Whether to use tight packing mode. Only applicable when\n * `packed` is true. When true, the packed mode will not add any padding bytes.\n * This matches the packing behaviour of `ethereumjs-abi`, but is not standard.\n * @returns The resulting encoded buffer.\n */\nexport const pack = <Type extends readonly string[]>({\n  types,\n  values,\n  packed = false,\n  tight = false,\n  arrayPacked = false,\n  byteArray = new Uint8Array(),\n}: PackArgs<Type>): Uint8Array => {\n  assert(\n    types.length === values.length,\n    new ParserError(\n      `The number of types (${types.length}) does not match the number of values (${values.length}).`,\n    ),\n  );\n\n  const { staticBuffer, dynamicBuffer, pointers } = types.reduce<PackState>(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ staticBuffer, dynamicBuffer, pointers }, type, index) => {\n      const parser = getParser(type);\n      const value = values[index];\n\n      // If packed mode is enabled, we can skip the dynamic check, as all\n      // values are encoded in the static buffer.\n      if (packed || arrayPacked || !isDynamicParser(parser, type)) {\n        return {\n          staticBuffer: parser.encode({\n            buffer: staticBuffer,\n            value,\n            type,\n            packed,\n            tight,\n          }),\n          dynamicBuffer,\n          pointers,\n        };\n      }\n\n      const newStaticBuffer = concatBytes([staticBuffer, new Uint8Array(32)]);\n      const newDynamicBuffer = parser.encode({\n        buffer: dynamicBuffer,\n        value,\n        type,\n        packed,\n        tight,\n      });\n\n      return {\n        staticBuffer: newStaticBuffer,\n        dynamicBuffer: newDynamicBuffer,\n        pointers: [\n          ...pointers,\n          { position: staticBuffer.length, pointer: dynamicBuffer.length },\n        ],\n      };\n    },\n    {\n      staticBuffer: new Uint8Array(),\n      dynamicBuffer: new Uint8Array(),\n      pointers: [],\n    },\n  );\n\n  // If packed mode is enabled, there shouldn't be any dynamic values.\n  assert(\n    (!packed && !arrayPacked) || dynamicBuffer.length === 0,\n    new ParserError('Invalid pack state.'),\n  );\n\n  const dynamicStart = staticBuffer.length;\n  const updatedBuffer = pointers.reduce((target, { pointer, position }) => {\n    const offset = padStart(numberToBytes(dynamicStart + pointer));\n    return set(target, offset, position);\n  }, staticBuffer);\n\n  return concatBytes([byteArray, updatedBuffer, dynamicBuffer]);\n};\n\nexport const unpack = <\n  Type extends readonly string[],\n  Output = TypeMap<Type, 'output'>,\n>(\n  types: Type,\n  buffer: Uint8Array,\n): Output => {\n  const iterator = iterate(buffer);\n\n  return types.map((type) => {\n    const {\n      value: { value, skip },\n      done,\n    } = iterator.next();\n    assert(\n      !done,\n      new ParserError(\n        `The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse \"${type}\".`,\n      ),\n    );\n\n    const parser = getParser(type);\n    const isDynamic = isDynamicParser(parser, type);\n\n    if (isDynamic) {\n      const pointer = bytesToNumber(value.subarray(0, 32));\n      const target = buffer.subarray(pointer);\n\n      return parser.decode({ type, value: target, skip });\n    }\n\n    return parser.decode({ type, value, skip });\n  }) as unknown as Output;\n};\n", "// ESLint gets confused by the nested list and tables in the docs, so we disable\n// the rule for this file.\n/* eslint-disable jsdoc/check-indentation, jsdoc/match-description */\n\nimport { assert, BytesLike, createBytes } from '@metamask/utils';\n\nimport { getErrorMessage, ParserError } from './errors';\nimport { pack, unpack } from './packer';\nimport { TypeMap } from './types';\n\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types.\n *\n * This will attempt to parse the values into the correct types. For example,\n * if you pass in a hex string for a `uint256`, it will be parsed into a\n * `bigint`. Regular strings are interpreted as UTF-8 strings. If you want to\n * pass in a hex string, you must pass it in as a `Uint8Array`, or use the\n * \"0x\"-prefix.\n *\n * It will also attempt to infer the types of the values. For example, if you\n * pass in a string for a `uint256`, it will result in a TypeScript compile-time\n * error. This does not work for all types, however. For example, if you use\n * nested arrays or tuples, the type will be inferred as `unknown`.\n *\n * The following types are supported:\n *\n * - `address`: A 20-byte Ethereum address.\n *   - As a 40-character-long hexadecimal string, starting with \"0x\".\n *   - As a 20-byte-long byte array, i.e., `Uint8Array`.\n * - `bool`: A boolean value.\n *   - As a boolean literal, i.e., `true` or `false`.\n *   - As the strings \"true\" or \"false\".\n * - `bytes(n)`: A dynamic byte array.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n *   - As a regular string, which will be interpreted as UTF-8.\n * - `function`: A Solidity function.\n *   - As a 48-character-long hexadecimal string, starting with \"0x\".\n *   - As a 24-byte-long byte array, i.e., `Uint8Array`.\n *   - As a {@link SolidityFunction} object.\n * - `int(n)`: A signed integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n * - `string`: A dynamic UTF-8 string.\n *   - As a regular string.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n * - `tuple`: A tuple of values.\n *   - As an array of values.\n * - `uint(n)`: An unsigned integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html\n * @param types - The types to encode.\n * @param values - The values to encode. This array must have the same length as\n * the types array.\n * @param packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param tight - Whether to pack the values tightly. When enabled, the values\n * will be packed without any padding. This matches the behaviour of\n * `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nexport const encode = <Type extends readonly string[]>(\n  types: Type,\n  values: TypeMap<Type, 'input'>,\n  packed?: boolean,\n  tight?: boolean,\n): Uint8Array => {\n  try {\n    return pack({ types, values, packed, tight });\n  } catch (error) {\n    if (error instanceof ParserError) {\n      throw new ParserError(`Unable to encode value: ${error.message}`, error);\n    }\n\n    throw new ParserError(\n      `An unexpected error occurred: ${getErrorMessage(error)}`,\n      error,\n    );\n  }\n};\n\n/**\n * Encode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to encode.\n * @param value - The value to encode.\n * @returns The ABI encoded bytes.\n */\nexport const encodeSingle = <Type extends string>(\n  type: Type,\n  value: TypeMap<[Type], 'input'>[0],\n): Uint8Array => {\n  return encode([type], [value]);\n};\n\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types. This is similar to {@link encode}, but the values are encoded in\n * the non-standard packed mode. This differs from the standard encoding in the\n * following ways:\n *\n * - Most values are packed tightly, without alignment padding.\n *   - The exception is array values, which are padded to 32 bytes.\n * - Values are still padded to their full size, i.e., `uint16` values are still\n *  padded to 2 bytes, regardless of the length of the value.\n * - The encoding of dynamic types (`bytes`, `string`) is different. The length\n * of the dynamic type is not included in the encoding, and the dynamic type is\n * not padded to a multiple of 32 bytes.\n * - All values are encoded in-place, without any offsets.\n *\n * The encoding of this is ambiguous as soon as there is more than one dynamic\n * type. That means that these values cannot be decoded with {@link decode} or\n * Solidity's `abi.decode` function.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodePacked } from '@metamask/abi-utils';\n *\n * const encoded = encodePacked(['uint8'], [42]);\n *\n * console.log(encoded); // `Uint8Array [ 42 ]`\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#non-standard-packed-mode\n * @param types - The types to encode.\n * @param values - The values to encode.\n * @param tight - Whether to pack the values tightly. When enabled, `bytesN`\n * values in arrays will be packed without any padding. This matches the\n * behaviour of `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nexport const encodePacked = <Type extends readonly string[]>(\n  types: Type,\n  values: TypeMap<Type, 'input'>,\n  tight?: boolean,\n): Uint8Array => {\n  return encode(types, values, true, tight);\n};\n\n/**\n * Decode an ABI encoded buffer with the specified types. The types must be\n * valid Solidity ABI types.\n *\n * This will attempt to infer the output types from the input types. For\n * example, if you use `uint256` as an input type, the output type will be\n * `bigint`. This does not work for all types, however. For example, if you use\n * nested array types or tuple types, the output type will be `unknown`.\n *\n * The resulting types of the values will be as follows:\n *\n * | Contract ABI Type | Resulting JavaScript Type |\n * | ----------------- | ------------------------- |\n * | `address`         | `string`                  |\n * | `bool`            | `boolean`                 |\n * | `bytes(n)`        | `Uint8Array`              |\n * | `function`        | {@link SolidityFunction}  |\n * | `int(n)`          | `bigint`                  |\n * | `string`          | `string`                  |\n * | `tuple`           | `Array`                   |\n * | `array`           | `Array`                   |\n * | `uint(n)`         | `bigint`                  |\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param types - The types to decode the bytes with.\n * @param value - The bytes-like value to decode.\n * @returns The decoded values as array.\n */\nexport const decode = <\n  Type extends readonly string[],\n  Output = TypeMap<Type, 'output'>,\n>(\n  types: Type,\n  value: BytesLike,\n): Output => {\n  const bytes = createBytes(value);\n\n  try {\n    return unpack(types, bytes);\n  } catch (error) {\n    if (error instanceof ParserError) {\n      throw new ParserError(`Unable to decode value: ${error.message}`, error);\n    }\n\n    throw new ParserError(\n      `An unexpected error occurred: ${getErrorMessage(error)}`,\n      error,\n    );\n  }\n};\n\n/**\n * Decode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link decode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to decode.\n * @param value - The bytes-like value to decode.\n * @returns The decoded value.\n */\nexport const decodeSingle = <Type extends string>(\n  type: Type,\n  value: BytesLike,\n): TypeMap<[Type], 'output'>[0] => {\n  const result = decode([type] as const, value);\n  assert(\n    result.length === 1,\n    new ParserError('Decoded value array has unexpected length.'),\n  );\n\n  return result[0];\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=abi.js.map", "export * from './abi';\n", "export * from './abi';\nexport * from './errors';\nexport * from './types';\n\nexport type { BytesLike, NumberLike } from '@metamask/utils';\nexport type { BooleanLike, FunctionLike, SolidityFunction } from './parsers';\n", "/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any;\n  key: any;\n  type: string;\n  refinement: string | undefined;\n  message: string;\n  explanation?: string | undefined;\n  branch: any[];\n  path: any[];\n};\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any;\n\n  key!: any;\n\n  type!: string;\n\n  refinement!: string | undefined;\n\n  path!: any[];\n\n  branch!: any[];\n\n  failures: () => Failure[];\n\n  [x: string]: any;\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Failure[] | undefined;\n    const { message, explanation, ...rest } = failure;\n    const { path } = failure;\n    const cause =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n    super(explanation ?? cause);\n\n    if (explanation !== null && explanation !== undefined) {\n      this.cause = cause;\n    }\n\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()]);\n    };\n  }\n}\n", "import type { Failure } from './error.js';\nimport type {\n  Struct,\n  Infer,\n  Result,\n  Context,\n  Describe,\n  ExactOptionalStruct,\n} from './struct.js';\n\n/**\n * Check if a value is an iterator.\n *\n * @param value - The value to check.\n * @returns Whether the value is an iterator.\n */\nfunction isIterable<Type>(value: unknown): value is Iterable<Type> {\n  return isObject(value) && typeof value[Symbol.iterator] === 'function';\n}\n\n/**\n * Check if a value is a plain object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a plain object.\n */\nexport function isObject(\n  value: unknown,\n): value is Record<PropertyKey, unknown> {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Check if a value is a plain object.\n *\n * @param value - The value to check.\n * @returns Whether the value is a plain object.\n */\nexport function isPlainObject(value: unknown): value is { [key: string]: any } {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Return a value as a printable string.\n *\n * @param value - The value to print.\n * @returns The value as a string.\n */\nexport function print(value: any): string {\n  if (typeof value === 'symbol') {\n    return value.toString();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n\n/**\n * Shift (remove and return) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n *\n * @param input - The iterator to shift.\n * @returns The first value of the iterator, or `undefined` if the iterator is\n * empty.\n */\nexport function shiftIterator<Type>(input: Iterator<Type>): Type | undefined {\n  const { done, value } = input.next();\n  return done ? undefined : value;\n}\n\n/**\n * Convert a single validation result to a failure.\n *\n * @param result - The result to convert.\n * @param context - The context of the validation.\n * @param struct - The struct being validated.\n * @param value - The value being validated.\n * @returns A failure if the result is a failure, or `undefined` if the result\n * is a success.\n */\nexport function toFailure<Type, Schema>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<Type, Schema>,\n  value: any,\n): Failure | undefined {\n  if (result === true) {\n    return undefined;\n  } else if (result === false) {\n    // eslint-disable-next-line no-param-reassign\n    result = {};\n  } else if (typeof result === 'string') {\n    // eslint-disable-next-line no-param-reassign\n    result = { message: result };\n  }\n\n  const { path, branch } = context;\n  const { type } = struct;\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result;\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  };\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n *\n * @param result - The result to convert.\n * @param context - The context of the validation.\n * @param struct - The struct being validated.\n * @param value - The value being validated.\n * @yields The failures.\n * @returns An iterable of failures.\n */\nexport function* toFailures<Type, Schema>(\n  result: Result,\n  context: Context,\n  struct: Struct<Type, Schema>,\n  value: any,\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    // eslint-disable-next-line no-param-reassign\n    result = [result];\n  }\n\n  for (const validationResult of result) {\n    const failure = toFailure(validationResult, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n *\n * @param value - The value to check.\n * @param struct - The struct to check against.\n * @param options - Optional settings.\n * @param options.path - The path to the value in the input data.\n * @param options.branch - The branch of the value in the input data.\n * @param options.coerce - Whether to coerce the value before validating it.\n * @param options.mask - Whether to mask the value before validating it.\n * @param options.message - An optional message to include in the error.\n * @yields An iterator of failures or success.\n * @returns An iterator of failures or success.\n */\nexport function* run<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  options: {\n    path?: any[] | undefined;\n    branch?: any[] | undefined;\n    coerce?: boolean | undefined;\n    mask?: boolean | undefined;\n    message?: string | undefined;\n  } = {},\n): IterableIterator<[Failure, undefined] | [undefined, Type]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options;\n  const context: Context = { path, branch };\n\n  if (coerce) {\n    // eslint-disable-next-line no-param-reassign\n    value = struct.coercer(value, context);\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let status: 'valid' | 'not_refined' | 'not_valid' = 'valid';\n\n  for (const failure of struct.validator(value, context)) {\n    failure.explanation = options.message;\n    status = 'not_valid';\n    yield [failure, undefined];\n  }\n\n  // eslint-disable-next-line prefer-const\n  for (let [innerKey, innerValue, innerStruct] of struct.entries(\n    value,\n    context,\n  )) {\n    const iterable = run(innerValue, innerStruct as Struct, {\n      path: innerKey === undefined ? path : [...path, innerKey],\n      branch: innerKey === undefined ? branch : [...branch, innerValue],\n      coerce,\n      mask,\n      message: options.message,\n    });\n\n    for (const result of iterable) {\n      if (result[0]) {\n        status =\n          result[0].refinement === null || result[0].refinement === undefined\n            ? 'not_valid'\n            : 'not_refined';\n\n        yield [result[0], undefined];\n      } else if (coerce) {\n        innerValue = result[1];\n\n        if (innerKey === undefined) {\n          // eslint-disable-next-line no-param-reassign\n          value = innerValue;\n        } else if (value instanceof Map) {\n          value.set(innerKey, innerValue);\n        } else if (value instanceof Set) {\n          value.add(innerValue);\n        } else if (isObject(value)) {\n          if (innerValue !== undefined || innerKey in value) {\n            value[innerKey] = innerValue;\n          }\n        }\n      }\n    }\n  }\n\n  if (status !== 'not_valid') {\n    for (const failure of struct.refiner(value as Type, context)) {\n      failure.explanation = options.message;\n      status = 'not_refined';\n      yield [failure, undefined];\n    }\n  }\n\n  if (status === 'valid') {\n    yield [undefined, value as Type];\n  }\n}\n\n/**\n * Convert a union of type to an intersection.\n */\nexport type UnionToIntersection<Union> = (\n  Union extends any ? (arg: Union) => any : never\n) extends (arg: infer Type) => void\n  ? Type\n  : never;\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\nexport type Assign<Type, OtherType> = Simplify<\n  OtherType & Omit<Type, keyof OtherType>\n>;\n\n/**\n * A schema for enum structs.\n */\nexport type EnumSchema<Type extends string | number | undefined | null> = {\n  [Key in NonNullable<Type>]: Key;\n};\n\n/**\n * Check if a type is a match for another whilst treating overlapping\n * unions as a match.\n */\nexport type IsMatch<Type, OtherType> = Type extends OtherType\n  ? OtherType extends Type\n    ? Type\n    : never\n  : never;\n\n/**\n * Check if a type is an exact match.\n */\nexport type IsExactMatch<Type, OtherType> = (<Inner>() => Inner extends Type\n  ? 1\n  : 2) extends <Inner>() => Inner extends OtherType ? 1 : 2\n  ? Type\n  : never;\n\n/**\n * Check if a type is a record type.\n */\nexport type IsRecord<Type> = Type extends object\n  ? string extends keyof Type\n    ? Type\n    : never\n  : never;\n\n/**\n * Check if a type is a tuple.\n */\nexport type IsTuple<Type> = Type extends [any]\n  ? Type\n  : Type extends [any, any]\n  ? Type\n  : Type extends [any, any, any]\n  ? Type\n  : Type extends [any, any, any, any]\n  ? Type\n  : Type extends [any, any, any, any, any]\n  ? Type\n  : never;\n\n/**\n * Check if a type is a union.\n */\nexport type IsUnion<Type, Union extends Type = Type> = (\n  Type extends any ? (Union extends Type ? false : true) : false\n) extends false\n  ? never\n  : Type;\n\n/**\n * A schema for object structs.\n */\nexport type ObjectSchema = Record<string, Struct<any, any>>;\n\n/**\n * Infer a type from an object struct schema.\n */\nexport type ObjectType<Schema extends ObjectSchema> = Simplify<\n  // ExactOptionalize first ensures that properties of `exactOptional()` structs\n  // are optional, then Optionalize ensures that properties that can have the\n  // value `undefined` are optional.\n  Optionalize<ExactOptionalize<Schema>>\n>;\n\n/**\n * Make properties of `exactOptional()` structs optional.\n */\nexport type ExactOptionalize<Schema extends ObjectSchema> = {\n  [K in keyof OmitExactOptional<Schema>]: Infer<OmitExactOptional<Schema>[K]>;\n} & {\n  [K in keyof PickExactOptional<Schema>]?: Infer<PickExactOptional<Schema>[K]>;\n};\n\ntype OmitExactOptional<Schema extends ObjectSchema> = Omit<\n  Schema,\n  {\n    [K in keyof Schema]: Schema[K] extends ExactOptionalStruct<any, any>\n      ? Schema[K] extends never\n        ? never\n        : K\n      : never;\n  }[keyof Schema]\n>;\n\ntype PickExactOptional<Schema extends ObjectSchema> = Pick<\n  Schema,\n  {\n    [K in keyof Schema]: Schema[K] extends ExactOptionalStruct<any, any>\n      ? Schema[K] extends never\n        ? never\n        : K\n      : never;\n  }[keyof Schema]\n>;\n\n/**\n * Make properties that can have the value `undefined` optional.\n */\nexport type Optionalize<Schema extends object> = OmitBy<Schema, undefined> &\n  Partial<PickBy<Schema, undefined>>;\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\nexport type OmitBy<Type, Value> = Omit<\n  Type,\n  {\n    [Key in keyof Type]: Value extends Extract<Type[Key], Value> ? Key : never;\n  }[keyof Type]\n>;\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\nexport type PickBy<Type, Value> = Pick<\n  Type,\n  {\n    [Key in keyof Type]: Value extends Extract<Type[Key], Value> ? Key : never;\n  }[keyof Type]\n>;\n\n/**\n * Transform an object schema type to represent a partial.\n */\nexport type PartialObjectSchema<Schema extends ObjectSchema> = {\n  [K in keyof Schema]: Struct<Infer<Schema[K]> | undefined>;\n};\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\nexport type Simplify<Type> = Type extends any[] | Date\n  ? Type\n  : // eslint-disable-next-line @typescript-eslint/ban-types\n    { [Key in keyof Type]: Type[Key] } & {};\n\nexport type If<Condition extends boolean, Then, Else> = Condition extends true\n  ? Then\n  : Else;\n\n/**\n * A schema for any type of struct.\n */\nexport type StructSchema<Type> = [Type] extends [string | undefined | null]\n  ? [Type] extends [IsMatch<Type, string | undefined | null>]\n    ? null\n    : [Type] extends [IsUnion<Type>]\n    ? EnumSchema<Type>\n    : Type\n  : [Type] extends [number | undefined | null]\n  ? [Type] extends [IsMatch<Type, number | undefined | null>]\n    ? null\n    : [Type] extends [IsUnion<Type>]\n    ? EnumSchema<Type>\n    : Type\n  : [Type] extends [boolean]\n  ? [Type] extends [IsExactMatch<Type, boolean>]\n    ? null\n    : Type\n  : Type extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : Type extends (infer Inner)[]\n  ? Type extends IsTuple<Type>\n    ? null\n    : Struct<Inner>\n  : Type extends object\n  ? Type extends IsRecord<Type>\n    ? null\n    : { [K in keyof Type]: Describe<Type[K]> }\n  : null;\n\n/**\n * A schema for tuple structs.\n */\nexport type TupleSchema<Type> = { [K in keyof Type]: Struct<Type[K]> };\n\n/**\n * Shorthand type for matching any `Struct`.\n */\nexport type AnyStruct = Struct<any, any>;\n\n/**\n * Infer a tuple of types from a tuple of `Struct`s.\n *\n * This is used to recursively retrieve the type from `union` `intersection` and\n * `tuple` structs.\n */\nexport type InferStructTuple<\n  Tuple extends AnyStruct[],\n  Length extends number = Tuple['length'],\n> = Length extends Length\n  ? number extends Length\n    ? Tuple\n    : InferTuple<Tuple, Length, []>\n  : never;\n\ntype InferTuple<\n  Tuple extends AnyStruct[],\n  Length extends number,\n  Accumulated extends unknown[],\n  Index extends number = Accumulated['length'],\n> = Index extends Length\n  ? Accumulated\n  : InferTuple<Tuple, Length, [...Accumulated, Infer<Tuple[Index]>]>;\n", "import type { Failure } from './error.js';\nimport { StructError } from './error.js';\nimport type { StructSchema } from './utils.js';\nimport { isObject, toFailures, shiftIterator, run } from './utils.js';\n\ntype StructParams<Type, Schema> = {\n  type: string;\n  schema: Schema;\n  coercer?: Coercer | undefined;\n  validator?: Validator | undefined;\n  refiner?: Refiner<Type> | undefined;\n  entries?: Struct<Type, Schema>['entries'] | undefined;\n};\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nexport class Struct<Type = unknown, Schema = unknown> {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  readonly TYPE!: Type;\n\n  type: string;\n\n  schema: Schema;\n\n  coercer: (value: unknown, context: Context) => unknown;\n\n  validator: (value: unknown, context: Context) => Iterable<Failure>;\n\n  refiner: (value: Type, context: Context) => Iterable<Failure>;\n\n  entries: (\n    value: unknown,\n    context: Context,\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>;\n\n  constructor(props: StructParams<Type, Schema>) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {\n        /* noop */\n      },\n    } = props;\n\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown, message?: string): asserts value is Type {\n    return assert(value, this, message);\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown, message?: string): Type {\n    return create(value, this, message);\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is Type {\n    return is(value, this);\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown, message?: string): Type {\n    return mask(value, this, message);\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean;\n      message?: string;\n    } = {},\n  ): [StructError, undefined] | [undefined, Type] {\n    return validate(value, this, options);\n  }\n}\n\n// String instead of a Symbol in case of multiple different versions of this library.\nconst ExactOptionalBrand = 'EXACT_OPTIONAL';\n\n/**\n * An `ExactOptionalStruct` is a `Struct` that is used to create exactly optional\n * properties of `object()` structs.\n */\nexport class ExactOptionalStruct<\n  Type = unknown,\n  Schema = unknown,\n> extends Struct<Type, Schema> {\n  // ESLint wants us to make this #-private, but we need it to be accessible by\n  // other versions of this library at runtime. If it were #-private, the\n  // implementation would break if multiple instances of this library were\n  // loaded at runtime.\n  // eslint-disable-next-line no-restricted-syntax\n  readonly brand: typeof ExactOptionalBrand;\n\n  constructor(props: StructParams<Type, Schema>) {\n    super({\n      ...props,\n      type: `exact optional ${props.type}`,\n    });\n    this.brand = ExactOptionalBrand;\n  }\n\n  static isExactOptional(value: unknown): value is ExactOptionalStruct {\n    return (\n      isObject(value) && 'brand' in value && value.brand === ExactOptionalBrand\n    );\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param message - An optional message to include in the error.\n */\nexport function assert<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  message?: string,\n): asserts value is Type {\n  const result = validate(value, struct, { message });\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n *\n * @param value - The value to coerce and validate.\n * @param struct - The struct to validate against.\n * @param message - An optional message to include in the error.\n * @returns The coerced and validated value.\n */\nexport function create<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  message?: string,\n): Type {\n  const result = validate(value, struct, { coerce: true, message });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n *\n * @param value - The value to mask.\n * @param struct - The struct to mask against.\n * @param message - An optional message to include in the error.\n * @returns The masked value.\n */\nexport function mask<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  message?: string,\n): Type {\n  const result = validate(value, struct, { coerce: true, mask: true, message });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n\n/**\n * Check if a value passes a struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @returns `true` if the value passes the struct, `false` otherwise.\n */\nexport function is<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n): value is Type {\n  const result = validate(value, struct);\n  return !result[0];\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param options - Optional settings.\n * @param options.coerce - Whether to coerce the value before validating it.\n * @param options.mask - Whether to mask the value before validating it.\n * @param options.message - An optional message to include in the error.\n * @returns A tuple containing the error (if invalid) and the validated value.\n */\nexport function validate<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  options: {\n    coerce?: boolean | undefined;\n    mask?: boolean | undefined;\n    message?: string | undefined;\n  } = {},\n): [StructError, undefined] | [undefined, Type] {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples) as [\n    Failure | undefined,\n    Type | undefined,\n  ];\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const innerTuple of tuples) {\n        if (innerTuple[0]) {\n          yield innerTuple[0];\n        }\n      }\n    });\n\n    return [error, undefined];\n  }\n\n  const validatedValue = tuple[1] as Type;\n  return [undefined, validatedValue];\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: any[];\n  path: any[];\n};\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<StructType extends Struct<any, any>> = StructType['TYPE'];\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<Type> = Struct<Type, StructSchema<Type>>;\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>;\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<Type = unknown> = (\n  value: Type,\n  context: Context,\n) => unknown;\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result;\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<Type> = (value: Type, context: Context) => Result;\n", "import type { Context, Validator } from '../struct.js';\nimport { Struct } from '../struct.js';\nimport type {\n  Assign,\n  ObjectSchema,\n  ObjectType,\n  PartialObjectSchema,\n} from '../utils.js';\nimport { object, optional, type } from './types.js';\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * Like JavaScript's `Object.assign` utility.\n *\n * @param First - The first struct to combine.\n * @param Second - The second struct to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign<First extends ObjectSchema, Second extends ObjectSchema>(\n  First: Struct<ObjectType<First>, First>,\n  Second: Struct<ObjectType<Second>, Second>,\n): Struct<ObjectType<Assign<First, Second>>, Assign<First, Second>>;\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param First - The first struct to combine.\n * @param Second - The second struct to combine.\n * @param Third - The third struct to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign<\n  First extends ObjectSchema,\n  Second extends ObjectSchema,\n  Third extends ObjectSchema,\n>(\n  First: Struct<ObjectType<First>, First>,\n  Second: Struct<ObjectType<Second>, Second>,\n  Third: Struct<ObjectType<Third>, Third>,\n): Struct<\n  ObjectType<Assign<Assign<First, Second>, Third>>,\n  Assign<Assign<First, Second>, Third>\n>;\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param First - The first struct to combine.\n * @param Second - The second struct to combine.\n * @param Third - The third struct to combine.\n * @param Fourth - The fourth struct to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign<\n  First extends ObjectSchema,\n  Second extends ObjectSchema,\n  Third extends ObjectSchema,\n  Fourth extends ObjectSchema,\n>(\n  First: Struct<ObjectType<First>, First>,\n  Second: Struct<ObjectType<Second>, Second>,\n  Third: Struct<ObjectType<Third>, Third>,\n  Fourth: Struct<ObjectType<Fourth>, Fourth>,\n): Struct<\n  ObjectType<Assign<Assign<Assign<First, Second>, Third>, Fourth>>,\n  Assign<Assign<Assign<First, Second>, Third>, Fourth>\n>;\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param First - The first struct to combine.\n * @param Second - The second struct to combine.\n * @param Third - The third struct to combine.\n * @param Fourth - The fourth struct to combine.\n * @param Fifth - The fifth struct to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign<\n  First extends ObjectSchema,\n  Second extends ObjectSchema,\n  Third extends ObjectSchema,\n  Fourth extends ObjectSchema,\n  Fifth extends ObjectSchema,\n>(\n  First: Struct<ObjectType<First>, First>,\n  Second: Struct<ObjectType<Second>, Second>,\n  Third: Struct<ObjectType<Third>, Third>,\n  Fourth: Struct<ObjectType<Fourth>, Fourth>,\n  Fifth: Struct<ObjectType<Fifth>, Fifth>,\n): Struct<\n  ObjectType<\n    Assign<Assign<Assign<Assign<First, Second>, Third>, Fourth>, Fifth>\n  >,\n  Assign<Assign<Assign<Assign<First, Second>, Third>, Fourth>, Fifth>\n>;\n\n/**\n * Create a new struct that combines the properties from multiple object or type\n * structs. Its return type will match the first parameter's type.\n *\n * @param Structs - The structs to combine.\n * @returns A new struct that combines the properties of the input structs.\n */\nexport function assign(...Structs: Struct<any>[]): any {\n  const isType = Structs[0]?.type === 'type';\n  const schemas = Structs.map(({ schema }) => schema);\n  const schema = Object.assign({}, ...schemas);\n  return isType ? type(schema) : object(schema);\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @param name - The name of the struct type.\n * @param validator - The validation function.\n * @returns A new struct type.\n */\nexport function define<Type>(\n  name: string,\n  validator: Validator,\n): Struct<Type, null> {\n  return new Struct({ type: name, schema: null, validator });\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n *\n * @param struct - The struct to augment.\n * @param log - The function to call when the value is not `undefined`.\n * @returns A new struct that will only accept `undefined` or values that pass\n * the input struct.\n */\nexport function deprecated<Type>(\n  struct: Struct<Type>,\n  log: (value: unknown, ctx: Context) => void,\n): Struct<Type> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      }\n      log(value, ctx);\n      return struct.validator(value, ctx);\n    },\n  });\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n *\n * @param fn - The callback to create the struct.\n * @returns A new struct with dynamic validation logic.\n */\nexport function dynamic<Type>(\n  fn: (value: unknown, ctx: Context) => Struct<Type, any>,\n): Struct<Type, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    },\n    refiner(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.refiner(value, ctx);\n    },\n  });\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n *\n * @param fn - The callback to create the struct.\n * @returns A new struct with lazily evaluated validation logic.\n */\nexport function lazy<Type>(fn: () => Struct<Type, any>): Struct<Type, null> {\n  let struct: Struct<Type, any> | undefined;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn();\n      yield* struct.entries(value, ctx);\n    },\n    validator(value, ctx) {\n      struct ??= fn();\n      return struct.validator(value, ctx);\n    },\n    coercer(value, ctx) {\n      struct ??= fn();\n      return struct.coercer(value, ctx);\n    },\n    refiner(value, ctx) {\n      struct ??= fn();\n      return struct.refiner(value, ctx);\n    },\n  });\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n *\n * @param struct - The struct to augment.\n * @param keys - The keys to omit.\n * @returns A new struct that will not accept the input keys.\n */\nexport function omit<Schema extends ObjectSchema, Key extends keyof Schema>(\n  struct: Struct<ObjectType<Schema>, Schema>,\n  keys: Key[],\n): Struct<ObjectType<Omit<Schema, Key>>, Omit<Schema, Key>> {\n  const { schema } = struct;\n  const subschema: any = { ...schema };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  switch (struct.type) {\n    case 'type':\n      return type(subschema as Omit<Schema, Key>);\n    default:\n      return object(subschema as Omit<Schema, Key>);\n  }\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept the input keys as `undefined`.\n */\nexport function partial<Schema extends ObjectSchema>(\n  struct: Struct<ObjectType<Schema>, Schema> | Schema,\n): Struct<\n  ObjectType<PartialObjectSchema<Schema>>,\n  PartialObjectSchema<Schema>\n> {\n  const isStruct = struct instanceof Struct;\n  const schema: any = isStruct ? { ...struct.schema } : { ...struct };\n\n  // eslint-disable-next-line guard-for-in\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  if (isStruct && struct.type === 'type') {\n    return type(schema) as any;\n  }\n\n  return object(schema) as any;\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n *\n * @param struct - The struct to augment.\n * @param keys - The keys to pick.\n * @returns A new struct that will only accept the input keys.\n */\nexport function pick<Schema extends ObjectSchema, Key extends keyof Schema>(\n  struct: Struct<ObjectType<Schema>, Schema>,\n  keys: Key[],\n): Struct<ObjectType<Pick<Schema, Key>>, Pick<Schema, Key>> {\n  const { schema } = struct;\n  const subschema: any = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  switch (struct.type) {\n    case 'type':\n      return type(subschema) as any;\n\n    default:\n      return object(subschema) as any;\n  }\n}\n", "import type { Infer } from '../struct.js';\nimport { ExactOptionalStruct, Struct } from '../struct.js';\nimport type {\n  ObjectSchema,\n  ObjectType,\n  AnyStruct,\n  InferStructTuple,\n  UnionToIntersection,\n} from '../utils.js';\nimport { print, run, isObject } from '../utils.js';\nimport { define } from './utilities.js';\n\n/**\n * Ensure that any value passes validation.\n *\n * @returns A struct that will always pass validation.\n */\nexport function any(): Struct<any, null> {\n  return define('any', () => true);\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n *\n * @param Element - The struct to validate each element in the array against.\n * @returns A new struct that will only accept arrays of the given type.\n */\nexport function array<Type extends Struct<any>>(\n  Element: Type,\n): Struct<Infer<Type>[], Type>;\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n *\n * @returns A new struct that will accept any array.\n */\nexport function array(): Struct<unknown[], undefined>;\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n *\n * @param Element - The struct to validate each element in the array against.\n * @returns A new struct that will only accept arrays of the given type.\n */\nexport function array<Type extends Struct<any>>(Element?: Type): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [index, arrayValue] of value.entries()) {\n          yield [index, arrayValue, Element];\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a bigint.\n *\n * @returns A new struct that will only accept bigints.\n */\nexport function bigint(): Struct<bigint, null> {\n  return define('bigint', (value) => {\n    return typeof value === 'bigint';\n  });\n}\n\n/**\n * Ensure that a value is a boolean.\n *\n * @returns A new struct that will only accept booleans.\n */\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean';\n  });\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n *\n * @returns A new struct that will only accept valid `Date` objects.\n */\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n *\n * @param values - The potential values that the input can be.\n * @returns A new struct that will only accept the given values.\n */\nexport function enums<Type extends number, Values extends readonly Type[]>(\n  values: Values,\n): Struct<Values[number], { [Key in Values[number]]: Key }>;\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n *\n * @param values - The potential values that the input can be.\n * @returns A new struct that will only accept the given values.\n */\nexport function enums<Type extends string, Values extends readonly Type[]>(\n  values: Values,\n): Struct<Values[number], { [Key in Values[number]]: Key }>;\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n *\n * @param values - The potential values that the input can be.\n * @returns A new struct that will only accept the given values.\n */\nexport function enums<\n  Type extends string | number,\n  Values extends readonly Type[],\n>(values: Values): any {\n  const schema: any = {};\n  const description = values.map((value) => print(value)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a function.\n *\n * @returns A new struct that will only accept functions.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n *\n * @param Class - The class that the value must be an instance of.\n * @returns A new struct that will only accept instances of the given class.\n */\nexport function instance<Type extends new (...args: any) => any>(\n  Class: Type,\n): Struct<InstanceType<Type>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is an integer.\n *\n * @returns A new struct that will only accept integers.\n */\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept values that match all of the\n * given structs.\n */\nexport function intersection<First extends AnyStruct, Rest extends AnyStruct[]>(\n  Structs: [First, ...Rest],\n): Struct<\n  Infer<First> & UnionToIntersection<InferStructTuple<Rest>[number]>,\n  null\n> {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, context) {\n      for (const { entries } of Structs) {\n        yield* entries(value, context);\n      }\n    },\n    *validator(value, context) {\n      for (const { validator } of Structs) {\n        yield* validator(value, context);\n      }\n    },\n    *refiner(value, context) {\n      for (const { refiner } of Structs) {\n        yield* refiner(value, context);\n      }\n    },\n  });\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type extends boolean>(\n  constant: Type,\n): Struct<Type, Type>;\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type extends number>(\n  constant: Type,\n): Struct<Type, Type>;\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type extends string>(\n  constant: Type,\n): Struct<Type, Type>;\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type>(constant: Type): Struct<Type, null>;\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n *\n * @param constant - The exact value that the input must be.\n * @returns A new struct that will only accept the exact given value.\n */\nexport function literal<Type>(constant: Type): any {\n  const description = print(constant);\n  const valueType = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema:\n      valueType === 'string' ||\n      valueType === 'number' ||\n      valueType === 'boolean'\n        ? constant\n        : null,\n\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n *\n * @returns A new struct that will only accept `Map` objects.\n */\nexport function map(): Struct<Map<unknown, unknown>, null>;\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n *\n * @param Key - The struct to validate each key in the map against.\n * @param Value - The struct to validate each value in the map against.\n * @returns A new struct that will only accept `Map` objects.\n */\nexport function map<Key, Value>(\n  Key: Struct<Key>,\n  Value: Struct<Value>,\n): Struct<Map<Key, Value>, null>;\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n *\n * @param Key - The struct to validate each key in the map against.\n * @param Value - The struct to validate each value in the map against.\n * @returns A new struct that will only accept `Map` objects.\n */\nexport function map<Key, Value>(Key?: Struct<Key>, Value?: Struct<Value>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [mapKey, mapValue] of value.entries()) {\n          yield [mapKey as string, mapKey, Key];\n          yield [mapKey as string, mapValue, Value];\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that no value ever passes validation.\n *\n * @returns A new struct that will never pass validation.\n */\nexport function never(): Struct<never, null> {\n  return define('never', () => false);\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept `null` values.\n */\nexport function nullable<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): Struct<Type | null, Schema> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  });\n}\n\n/**\n * Ensure that a value is a number.\n *\n * @returns A new struct that will only accept numbers.\n */\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is an object, that it has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n *\n * @returns A new struct that will only accept objects.\n */\nexport function object(): Struct<Record<string, unknown>, null>;\n\n/**\n * Ensure that a value is an object, that it has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nexport function object<Schema extends ObjectSchema>(\n  schema: Schema,\n): Struct<ObjectType<Schema>, Schema>;\n\n/**\n * Ensure that a value is an object, that it has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nexport function object<Schema extends ObjectSchema>(\n  schema?: Schema | undefined,\n): any {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ?? null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          const propertySchema = schema[key];\n          if (\n            ExactOptionalStruct.isExactOptional(propertySchema) &&\n            !Object.prototype.hasOwnProperty.call(value, key)\n          ) {\n            continue;\n          }\n\n          yield [key, value[key], schema[key] as Struct<any>];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      );\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value;\n    },\n  });\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will accept `undefined` values.\n */\nexport function optional<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): Struct<Type | undefined, Schema> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  });\n}\n\n/**\n * Augment a struct such that, if it is the property of an object, it is exactly optional.\n * In other words, it is either present with the correct type, or not present at all.\n *\n * NOTE: Only intended for use with `object()` structs.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that can be used to create exactly optional properties of `object()`\n * structs.\n */\nexport function exactOptional<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): ExactOptionalStruct<Type, Schema> {\n  return new ExactOptionalStruct(struct);\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * @param Key - The struct to validate each key in the record against.\n * @param Value - The struct to validate each value in the record against.\n * @returns A new struct that will only accept objects.\n */\nexport function record<Key extends string, Value>(\n  Key: Struct<Key>,\n  Value: Struct<Value>,\n): Struct<Record<Key, Value>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        // eslint-disable-next-line guard-for-in\n        for (const objectKey in value) {\n          const objectValue = value[objectKey];\n          yield [objectKey, objectKey, Key];\n          yield [objectKey, objectValue, Value];\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n *\n * @returns A new struct that will only accept `RegExp` objects.\n */\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp;\n  });\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n *\n * @returns A new struct that will only accept `Set` objects.\n */\nexport function set(): Struct<Set<unknown>, null>;\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n *\n * @param Element - The struct to validate each element in the set against.\n * @returns A new struct that will only accept `Set` objects.\n */\nexport function set<Type>(Element: Struct<Type>): Struct<Set<Type>, null>;\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n *\n * @param Element - The struct to validate each element in the set against.\n * @returns A new struct that will only accept `Set` objects.\n */\nexport function set<Type>(Element?: Struct<Type>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const setValue of value) {\n          yield [setValue as string, setValue, Element];\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value is a string.\n *\n * @returns A new struct that will only accept strings.\n */\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    );\n  });\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept tuples of the given types.\n */\nexport function tuple<First extends AnyStruct, Rest extends AnyStruct[]>(\n  Structs: [First, ...Rest],\n): Struct<[Infer<First>, ...InferStructTuple<Rest>], null> {\n  const Never = never();\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Structs.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Structs[i] || Never];\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      );\n    },\n  });\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n *\n * @param schema - An object that defines the structure of the object.\n * @returns A new struct that will only accept objects.\n */\nexport function type<Schema extends ObjectSchema>(\n  schema: Schema,\n): Struct<ObjectType<Schema>, Schema> {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k] as Struct<any>];\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      );\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value;\n    },\n  });\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n *\n * @param Structs - The set of structs that the value must match.\n * @returns A new struct that will only accept values that match one of the\n * given structs.\n */\nexport function union<First extends AnyStruct, Rest extends AnyStruct[]>(\n  Structs: [First, ...Rest],\n): Struct<Infer<First> | InferStructTuple<Rest>[number], null> {\n  const description = Structs.map((struct) => struct.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n    coercer(value) {\n      for (const InnerStruct of Structs) {\n        const [error, coerced] = InnerStruct.validate(value, { coerce: true });\n        if (!error) {\n          return coerced;\n        }\n      }\n\n      return value;\n    },\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const InnerStruct of Structs) {\n        const [...tuples] = run(value, InnerStruct, ctx);\n        const [first] = tuples;\n\n        if (!first?.[0]) {\n          return [];\n        }\n\n        for (const [failure] of tuples) {\n          if (failure) {\n            failures.push(failure);\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value,\n        )}`,\n        ...failures,\n      ];\n    },\n  });\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n *\n * @returns A struct that will always pass validation.\n */\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true);\n}\n", "import type { Coercer } from '../struct.js';\nimport { Struct, is } from '../struct.js';\nimport { isPlainObject } from '../utils.js';\nimport { string, unknown } from './types.js';\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @param condition - A struct that the input must pass to be coerced.\n * @param coercer - A function that takes the input and returns the coerced\n * value.\n * @returns A new struct that will coerce its input before validating it.\n */\nexport function coerce<Type, Schema, CoercionType>(\n  struct: Struct<Type, Schema>,\n  condition: Struct<CoercionType, any>,\n  coercer: Coercer<CoercionType>,\n): Struct<Type, Schema> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx);\n    },\n  });\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @param fallback - The value to use when the input is `undefined`.\n * @param options - An optional options object.\n * @param options.strict - When `true`, the fallback will only be used when the\n * input is `undefined`. When `false`, the fallback will be used when the input\n * is `undefined` or when the input is a plain object and the fallback is a\n * plain object, and any keys in the fallback are missing from the input.\n * @returns A new struct that will replace `undefined` inputs with a default.\n */\nexport function defaulted<Type, Schema>(\n  struct: Struct<Type, Schema>,\n  fallback: any,\n  options: {\n    strict?: boolean | undefined;\n  } = {},\n): Struct<Type, Schema> {\n  return coerce(struct, unknown(), (value) => {\n    const result = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (value === undefined) {\n      return result;\n    }\n\n    if (!options.strict && isPlainObject(value) && isPlainObject(result)) {\n      const ret = { ...value };\n      let changed = false;\n\n      for (const key in result) {\n        if (ret[key] === undefined) {\n          ret[key] = result[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return value;\n  });\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will trim string inputs before validating them.\n */\nexport function trimmed<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): Struct<Type, Schema> {\n  return coerce(struct, string(), (value) => value.trim());\n}\n", "import type { Refiner } from '../struct.js';\nimport { Struct } from '../struct.js';\nimport { toFailures } from '../utils.js';\n\n/**\n * Ensure that a string, array, map, or set is empty.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will only accept empty values.\n */\nexport function empty<\n  Type extends string | any[] | Map<any, any> | Set<any>,\n  Schema,\n>(struct: Struct<Type, Schema>): Struct<Type, Schema> {\n  return refine(struct, 'empty', (value) => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const size = getSize(value);\n    return (\n      size === 0 ||\n      `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``\n    );\n  });\n}\n\n/**\n * Get the size of a string, array, map, or set.\n *\n * @param value - The value to measure.\n * @returns The size of the value.\n */\nfunction getSize(value: string | any[] | Map<any, any> | Set<any>): number {\n  if (value instanceof Map || value instanceof Set) {\n    return value.size;\n  }\n\n  return value.length;\n}\n\n/**\n * Ensure that a number or date is below a threshold.\n *\n * @param struct - The struct to augment.\n * @param threshold - The maximum value that the input can be.\n * @param options - An optional options object.\n * @param options.exclusive - When `true`, the input must be strictly less than\n * the threshold. When `false`, the input must be less than or equal to the\n * threshold.\n * @returns A new struct that will only accept values below the threshold.\n */\nexport function max<Type extends number | Date, Schema>(\n  struct: Struct<Type, Schema>,\n  threshold: Type,\n  options: {\n    exclusive?: boolean | undefined;\n  } = {},\n): Struct<Type, Schema> {\n  const { exclusive } = options;\n  return refine(struct, 'max', (value) => {\n    return exclusive\n      ? value < threshold\n      : value <= threshold ||\n          `Expected a ${struct.type} less than ${\n            exclusive ? '' : 'or equal to '\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          }${threshold} but received \\`${value}\\``;\n  });\n}\n\n/**\n * Ensure that a number or date is above a threshold.\n *\n * @param struct - The struct to augment.\n * @param threshold - The minimum value that the input can be.\n * @param options - An optional options object.\n * @param options.exclusive - When `true`, the input must be strictly greater\n * than the threshold. When `false`, the input must be greater than or equal to\n * the threshold.\n * @returns A new struct that will only accept values above the threshold.\n */\nexport function min<Type extends number | Date, Schema>(\n  struct: Struct<Type, Schema>,\n  threshold: Type,\n  options: {\n    exclusive?: boolean | undefined;\n  } = {},\n): Struct<Type, Schema> {\n  const { exclusive } = options;\n  return refine(struct, 'min', (value) => {\n    return exclusive\n      ? value > threshold\n      : value >= threshold ||\n          `Expected a ${struct.type} greater than ${\n            exclusive ? '' : 'or equal to '\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          }${threshold} but received \\`${value}\\``;\n  });\n}\n\n/**\n * Ensure that a string, array, map or set is not empty.\n *\n * @param struct - The struct to augment.\n * @returns A new struct that will only accept non-empty values.\n */\nexport function nonempty<\n  Type extends string | any[] | Map<any, any> | Set<any>,\n  Schema,\n>(struct: Struct<Type, Schema>): Struct<Type, Schema> {\n  return refine(struct, 'nonempty', (value) => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const size = getSize(value);\n    return (\n      size > 0 || `Expected a nonempty ${struct.type} but received an empty one`\n    );\n  });\n}\n\n/**\n * Ensure that a string matches a regular expression.\n *\n * @param struct - The struct to augment.\n * @param regexp - The regular expression to match against.\n * @returns A new struct that will only accept strings matching the regular\n * expression.\n */\nexport function pattern<Type extends string, Schema>(\n  struct: Struct<Type, Schema>,\n  regexp: RegExp,\n): Struct<Type, Schema> {\n  return refine(struct, 'pattern', (value) => {\n    return (\n      regexp.test(value) ||\n      `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`\n    );\n  });\n}\n\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length,\n * or time) between `min` and `max`.\n *\n * @param struct - The struct to augment.\n * @param minimum - The minimum size that the input can be.\n * @param maximum - The maximum size that the input can be.\n * @returns A new struct that will only accept values within the given size\n * range.\n */\nexport function size<\n  Type extends string | number | Date | any[] | Map<any, any> | Set<any>,\n  Schema,\n>(\n  struct: Struct<Type, Schema>,\n  minimum: number,\n  maximum: number = minimum,\n): Struct<Type, Schema> {\n  const expected = `Expected a ${struct.type}`;\n  const of =\n    minimum === maximum\n      ? `of \\`${minimum}\\``\n      : `between \\`${minimum}\\` and \\`${maximum}\\``;\n\n  return refine(struct, 'size', (value) => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return (\n        (minimum <= value && value <= maximum) ||\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `${expected} ${of} but received \\`${value}\\``\n      );\n    } else if (value instanceof Map || value instanceof Set) {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { size } = value;\n      return (\n        (minimum <= size && size <= maximum) ||\n        `${expected} with a size ${of} but received one with a size of \\`${size}\\``\n      );\n    }\n\n    const { length } = value;\n    return (\n      (minimum <= length && length <= maximum) ||\n      `${expected} with a length ${of} but received one with a length of \\`${length}\\``\n    );\n  });\n}\n\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n *\n * @param struct - The struct to augment.\n * @param name - The name of the refinement.\n * @param refiner - The refiner function.\n * @returns A new struct that will run the refiner function after the existing\n * validation.\n */\nexport function refine<Type, Schema>(\n  struct: Struct<Type, Schema>,\n  name: string,\n  refiner: Refiner<Type>,\n): Struct<Type, Schema> {\n  return new Struct({\n    ...struct,\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure, refinement: name };\n      }\n    },\n  });\n}\n", "//\n// Types\n//\n\n/**\n * Makes every specified property of the specified object type mutable.\n *\n * @template ObjectValue - The object whose readonly properties to make mutable.\n * @template TargetKey - The property key(s) to make mutable.\n */\nexport type Mutable<\n  ObjectValue extends Record<string, unknown>,\n  TargetKey extends keyof ObjectValue,\n> = {\n  -readonly [Key in keyof Pick<ObjectValue, TargetKey>]: ObjectValue[Key];\n} & {\n  [Key in keyof Omit<ObjectValue, TargetKey>]: ObjectValue[Key];\n};\n\n/**\n * Get a type representing the public interface of the given type. The\n * returned type will have all public properties, but will omit private\n * properties.\n *\n * @template Interface - The interface to return a public representation of.\n */\nexport type PublicInterface<Interface> = Pick<Interface, keyof Interface>;\n\n/**\n * Useful for representing some value that _might_ be present and / or complete.\n *\n * @template Value - The value that might be present or complete.\n */\nexport type PartialOrAbsent<Value> = Partial<Value> | null | undefined;\n\n/**\n * Like {@link Array}, but always non-empty.\n *\n * @template Element - The non-empty array member type.\n */\nexport type NonEmptyArray<Element> = [Element, ...Element[]];\n\n/**\n * A JavaScript object that is not `null`, a function, or an array.\n */\nexport type RuntimeObject = Record<PropertyKey, unknown>;\n\n//\n// Type Guards\n//\n\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nexport function isNonEmptyArray<Element>(\n  value: Element[],\n): value is NonEmptyArray<Element> {\n  return Array.isArray(value) && value.length > 0;\n}\n\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nexport function isNullOrUndefined(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nexport function isObject(value: unknown): value is RuntimeObject {\n  return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\n\n//\n// Other utility functions\n//\n\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nexport const hasProperty = <\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  ObjectToCheck extends Object,\n  Property extends PropertyKey,\n>(\n  objectToCheck: ObjectToCheck,\n  name: Property,\n): objectToCheck is ObjectToCheck &\n  Record<\n    Property,\n    Property extends keyof ObjectToCheck ? ObjectToCheck[Property] : unknown\n  > => Object.hasOwnProperty.call(objectToCheck, name);\n\n/**\n * `Object.getOwnPropertyNames()` is intentionally generic: it returns the\n * immediate property names of an object, but it cannot make guarantees about\n * the contents of that object, so the type of the property names is merely\n * `string[]`. While this is technically accurate, it is also unnecessary if we\n * have an object with a type that we own (such as an enum).\n *\n * @param object - The plain object.\n * @returns The own property names of the object which are assigned a type\n * derived from the object itself.\n */\nexport function getKnownPropertyNames<Key extends PropertyKey>(\n  object: Partial<Record<Key, any>>,\n): Key[] {\n  return Object.getOwnPropertyNames(object) as Key[];\n}\n\nexport type PlainObject = Record<number | string | symbol, unknown>;\n\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nexport enum JsonSize {\n  Null = 4,\n  Comma = 1,\n  Wrapper = 1,\n  True = 4,\n  False = 5,\n  Quote = 1,\n  Colon = 1,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Date = 24,\n}\n\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexport const ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nexport function isPlainObject(value: unknown): value is PlainObject {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n\n  try {\n    let proto = value;\n    while (Object.getPrototypeOf(proto) !== null) {\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    return Object.getPrototypeOf(value) === proto;\n  } catch (_) {\n    return false;\n  }\n}\n\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nexport function isASCII(character: string) {\n  return character.charCodeAt(0) <= 127;\n}\n\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nexport function calculateStringSize(value: string): number {\n  const size = value.split('').reduce((total, character) => {\n    if (isASCII(character)) {\n      return total + 1;\n    }\n    return total + 2;\n  }, 0);\n\n  // Also detect characters that need backslash escape\n  return size + (value.match(ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\n\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nexport function calculateNumberSize(value: number): number {\n  return value.toString().length;\n}\n", "import type { Struct } from '@metamask/superstruct';\nimport { assert as assertSuperstruct } from '@metamask/superstruct';\n\nimport { getErrorMessage } from './errors';\n\nexport type AssertionErrorConstructor =\n  | (new (args: { message: string }) => Error)\n  | ((args: { message: string }) => Error);\n\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(\n  fn: AssertionErrorConstructor,\n): fn is new (args: { message: string }) => Error {\n  /* istanbul ignore next */\n  return Boolean(typeof fn?.prototype?.constructor?.name === 'string');\n}\n\n/**\n * Attempts to obtain the message from a possible error object. If it is\n * possible to do so, any trailing period will be removed from the message;\n * otherwise an empty string is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The message without any trailing period if `error` is an object\n * with a `message` property; the string version of `error` without any trailing\n * period if it is not `undefined` or `null`; otherwise an empty string.\n */\nfunction getErrorMessageWithoutTrailingPeriod(error: unknown): string {\n  // We'll add our own period.\n  return getErrorMessage(error).replace(/\\.$/u, '');\n}\n\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper: AssertionErrorConstructor, message: string) {\n  if (isConstructable(ErrorWrapper)) {\n    return new ErrorWrapper({\n      message,\n    });\n  }\n  return ErrorWrapper({\n    message,\n  });\n}\n\n/**\n * The default error class that is thrown if an assertion fails.\n */\nexport class AssertionError extends Error {\n  readonly code = 'ERR_ASSERTION';\n\n  constructor(options: { message: string }) {\n    super(options.message);\n  }\n}\n\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nexport function assert(\n  value: any,\n  message: string | Error = 'Assertion failed.',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper: AssertionErrorConstructor = AssertionError,\n): asserts value {\n  if (!value) {\n    if (message instanceof Error) {\n      throw message;\n    }\n\n    throw getError(ErrorWrapper, message);\n  }\n}\n\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nexport function assertStruct<Type, Schema>(\n  value: unknown,\n  struct: Struct<Type, Schema>,\n  errorPrefix = 'Assertion failed',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper: AssertionErrorConstructor = AssertionError,\n): asserts value is Type {\n  try {\n    assertSuperstruct(value, struct);\n  } catch (error) {\n    throw getError(\n      ErrorWrapper,\n      `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`,\n    );\n  }\n}\n\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nexport function assertExhaustive(_object: never): never {\n  throw new Error(\n    'Invalid branch reached. Should be detected during compilation.',\n  );\n}\n", "import type { Struct } from '@metamask/superstruct';\nimport { pattern } from '@metamask/superstruct';\n\nimport { assert } from './assert';\n\nexport type Base64Options = {\n  /**\n   * Is the `=` padding at the end required or not.\n   *\n   * @default false\n   */\n  // Padding is optional in RFC 4648, that's why the default value is false\n  paddingRequired?: boolean;\n  /**\n   * Which character set should be used.\n   * The sets are based on {@link https://datatracker.ietf.org/doc/html/rfc4648 RFC 4648}.\n   *\n   * @default 'base64'\n   */\n  characterSet?: 'base64' | 'base64url';\n};\n\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nexport const base64 = <Type extends string, Schema>(\n  struct: Struct<Type, Schema>,\n  options: Base64Options = {},\n) => {\n  const paddingRequired = options.paddingRequired ?? false;\n  const characterSet = options.characterSet ?? 'base64';\n\n  let letters: string;\n  if (characterSet === 'base64') {\n    letters = String.raw`[A-Za-z0-9+\\/]`;\n  } else {\n    assert(characterSet === 'base64url');\n    letters = String.raw`[-_A-Za-z0-9]`;\n  }\n\n  let re: RegExp;\n  if (paddingRequired) {\n    re = new RegExp(\n      `^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`,\n      'u',\n    );\n  } else {\n    re = new RegExp(\n      `^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`,\n      'u',\n    );\n  }\n\n  return pattern(struct, re);\n};\n", "import { pattern, type Struct, string } from '@metamask/superstruct';\nimport { keccak_256 as keccak256 } from '@noble/hashes/sha3';\nimport { memoize } from 'lodash';\n\nimport { assert } from './assert';\n\nexport type Hex = `0x${string}`;\n\n// Use native regexes instead of superstruct for maximum performance.\n// Pre-compiled regex for maximum performance - avoids recompilation on each call\nconst HEX_REGEX = /^(?:0x)?[0-9a-f]+$/iu;\nconst STRICT_HEX_REGEX = /^0x[0-9a-f]+$/iu;\nconst HEX_ADDRESS_REGEX = /^0x[0-9a-f]{40}$/u;\nconst HEX_CHECKSUM_ADDRESS_REGEX = /^0x[0-9a-fA-F]{40}$/u;\n\nexport const HexStruct = pattern(string(), HEX_REGEX);\nexport const StrictHexStruct = pattern(string(), STRICT_HEX_REGEX) as Struct<\n  Hex,\n  null\n>;\nexport const HexAddressStruct = pattern(string(), HEX_ADDRESS_REGEX) as Struct<\n  Hex,\n  null\n>;\nexport const HexChecksumAddressStruct = pattern(\n  string(),\n  HEX_CHECKSUM_ADDRESS_REGEX,\n) as Struct<Hex, null>;\n\nconst isString = (value: unknown): value is string => typeof value === 'string';\n\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nexport function isHexString(value: unknown): value is string {\n  return isString(value) && HEX_REGEX.test(value);\n}\n\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nexport function isStrictHexString(value: unknown): value is Hex {\n  return isString(value) && STRICT_HEX_REGEX.test(value);\n}\n\n/**\n * Check if a string is a valid hex address.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex address.\n */\nexport function isHexAddress(value: unknown): value is Hex {\n  return isString(value) && HEX_ADDRESS_REGEX.test(value);\n}\n\n/**\n * Check if a string is a valid hex checksum address.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex checksum address.\n */\nexport function isHexChecksumAddress(value: unknown): value is Hex {\n  return isString(value) && HEX_CHECKSUM_ADDRESS_REGEX.test(value);\n}\n\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nexport function assertIsHexString(value: unknown): asserts value is string {\n  assert(isHexString(value), 'Value must be a hexadecimal string.');\n}\n\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nexport function assertIsStrictHexString(value: unknown): asserts value is Hex {\n  assert(\n    isStrictHexString(value),\n    'Value must be a hexadecimal string, starting with \"0x\".',\n  );\n}\n\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n * This is the unmemoized version, primarily used for testing.\n *\n * @param hexAddress - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nexport function getChecksumAddressUnmemoized(hexAddress: Hex): Hex {\n  assert(isHexChecksumAddress(hexAddress), 'Invalid hex address.');\n  const address = remove0x(hexAddress).toLowerCase();\n\n  const hashBytes = keccak256(address);\n  const { length } = address;\n  const result = new Array(length); // Pre-allocate array\n\n  for (let i = 0; i < length; i++) {\n    /* eslint-disable no-bitwise */\n    const byteIndex = i >> 1; // Faster than Math.floor(i / 2)\n    const nibbleIndex = i & 1; // Faster than i % 2\n    const byte = hashBytes[byteIndex] as number;\n    const nibble = nibbleIndex === 0 ? byte >> 4 : byte & 0x0f;\n    /* eslint-enable no-bitwise */\n\n    result[i] = nibble >= 8 ? (address[i] as string).toUpperCase() : address[i];\n  }\n\n  return `0x${result.join('')}`;\n}\n\n/**\n * Encode a passed hex string as an ERC-55 mixed-case checksum address.\n * This function is memoized for performance.\n *\n * @param hexAddress - The hex address to encode.\n * @returns The address encoded according to ERC-55.\n * @see https://eips.ethereum.org/EIPS/eip-55\n */\nexport const getChecksumAddress = memoize(getChecksumAddressUnmemoized);\n\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nexport function isValidChecksumAddressUnmemoized(possibleChecksum: Hex) {\n  if (!isHexChecksumAddress(possibleChecksum)) {\n    return false;\n  }\n\n  return getChecksumAddress(possibleChecksum) === possibleChecksum;\n}\n\n/**\n * Validate that the passed hex string is a valid ERC-55 mixed-case\n * checksum address.\n *\n * @param possibleChecksum - The hex address to check.\n * @returns True if the address is a checksum address.\n */\nexport const isValidChecksumAddress = memoize(isValidChecksumAddressUnmemoized);\n\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nexport function isValidHexAddressUnmemoized(possibleAddress: Hex) {\n  return (\n    isHexAddress(possibleAddress) || isValidChecksumAddress(possibleAddress)\n  );\n}\n\n/**\n * Validate that the passed prefixed hex string is an all-lowercase\n * hex address, or a valid mixed-case checksum address.\n *\n * @param possibleAddress - Input parameter to check against.\n * @returns Whether or not the input is a valid hex address.\n */\nexport const isValidHexAddress = memoize(isValidHexAddressUnmemoized);\n\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nexport function add0x(hexadecimal: string): Hex {\n  if (hexadecimal.startsWith('0x')) {\n    return hexadecimal as Hex;\n  }\n\n  if (hexadecimal.startsWith('0X')) {\n    return `0x${hexadecimal.substring(2)}`;\n  }\n\n  return `0x${hexadecimal}`;\n}\n\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nexport function remove0x(hexadecimal: string): string {\n  if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n    return hexadecimal.substring(2);\n  }\n\n  return hexadecimal;\n}\n", "import { base64 } from '@scure/base';\n\nimport { assert } from './assert';\nimport type { Hex } from './hex';\nimport { add0x, assertIsHexString, remove0x } from './hex';\n\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n\nexport type Bytes = bigint | number | string | Uint8Array;\n\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder(): () => string[] {\n  // To avoid issues with tree shaking, we need to use a function to return the\n  // array. This is because the array is only used in the `bytesToHex` function\n  // and if we were to use a global variable, the array might be removed by the\n  // tree shaker.\n  const lookupTable: string[] = [];\n\n  return () => {\n    if (lookupTable.length === 0) {\n      for (let i = 0; i < 256; i++) {\n        lookupTable.push(i.toString(16).padStart(2, '0'));\n      }\n    }\n\n    return lookupTable;\n  };\n}\n\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nexport function isBytes(value: unknown): value is Uint8Array {\n  return value instanceof Uint8Array;\n}\n\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nexport function assertIsBytes(value: unknown): asserts value is Uint8Array {\n  assert(isBytes(value), 'Value must be a Uint8Array.');\n}\n\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nexport function bytesToHex(bytes: Uint8Array): Hex {\n  assertIsBytes(bytes);\n\n  if (bytes.length === 0) {\n    return '0x';\n  }\n\n  const lookupTable = getPrecomputedHexValues();\n  const hexadecimal = new Array(bytes.length);\n\n  for (let i = 0; i < bytes.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    hexadecimal[i] = lookupTable[bytes[i]!];\n  }\n\n  return add0x(hexadecimal.join(''));\n}\n\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nexport function bytesToBigInt(bytes: Uint8Array): bigint {\n  assertIsBytes(bytes);\n\n  const hexadecimal = bytesToHex(bytes);\n  return BigInt(hexadecimal);\n}\n\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nexport function bytesToSignedBigInt(bytes: Uint8Array): bigint {\n  assertIsBytes(bytes);\n\n  let value = BigInt(0);\n  for (const byte of bytes) {\n    // eslint-disable-next-line no-bitwise\n    value = (value << BigInt(8)) + BigInt(byte);\n  }\n\n  return BigInt.asIntN(bytes.length * 8, value);\n}\n\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nexport function bytesToNumber(bytes: Uint8Array): number {\n  assertIsBytes(bytes);\n\n  const bigint = bytesToBigInt(bytes);\n\n  assert(\n    bigint <= BigInt(Number.MAX_SAFE_INTEGER),\n    'Number is not a safe integer. Use `bytesToBigInt` instead.',\n  );\n\n  return Number(bigint);\n}\n\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nexport function bytesToString(bytes: Uint8Array): string {\n  assertIsBytes(bytes);\n\n  return new TextDecoder().decode(bytes);\n}\n\n/**\n * Convert a `Uint8Array` to a base64 encoded string.\n *\n * @param bytes - The bytes to convert to a base64 encoded string.\n * @returns The base64 encoded string.\n */\nexport function bytesToBase64(bytes: Uint8Array): string {\n  assertIsBytes(bytes);\n\n  return base64.encode(bytes);\n}\n\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function hexToBytes(value: string): Uint8Array {\n  // \"0x\" is often used as empty byte array.\n  if (value?.toLowerCase?.() === '0x') {\n    return new Uint8Array();\n  }\n\n  assertIsHexString(value);\n\n  // Remove the `0x` prefix if it exists, and pad the string to have an even\n  // number of characters.\n  const strippedValue = remove0x(value).toLowerCase();\n  const normalizedValue =\n    strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n  const bytes = new Uint8Array(normalizedValue.length / 2);\n\n  for (let i = 0; i < bytes.length; i++) {\n    // While this is not the prettiest way to convert a hexadecimal string to a\n    // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n    // character.\n    const c1 = normalizedValue.charCodeAt(i * 2);\n    const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n    const n1 =\n      c1 -\n      (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n        ? HEX_MINIMUM_NUMBER_CHARACTER\n        : HEX_CHARACTER_OFFSET);\n    const n2 =\n      c2 -\n      (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n        ? HEX_MINIMUM_NUMBER_CHARACTER\n        : HEX_CHARACTER_OFFSET);\n\n    bytes[i] = n1 * 16 + n2;\n  }\n\n  return bytes;\n}\n\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function bigIntToBytes(value: bigint): Uint8Array {\n  assert(typeof value === 'bigint', 'Value must be a bigint.');\n  assert(value >= BigInt(0), 'Value must be a non-negative bigint.');\n\n  const hexadecimal = value.toString(16);\n  return hexToBytes(hexadecimal);\n}\n\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value: bigint, bytes: number): boolean {\n  assert(bytes > 0);\n\n  /* eslint-disable no-bitwise */\n  const mask = value >> BigInt(31);\n  return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n  /* eslint-enable no-bitwise */\n}\n\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nexport function signedBigIntToBytes(\n  value: bigint,\n  byteLength: number,\n): Uint8Array {\n  assert(typeof value === 'bigint', 'Value must be a bigint.');\n  assert(typeof byteLength === 'number', 'Byte length must be a number.');\n  assert(byteLength > 0, 'Byte length must be greater than 0.');\n  assert(\n    bigIntFits(value, byteLength),\n    'Byte length is too small to represent the given value.',\n  );\n\n  // ESLint doesn't like mutating function parameters, so to avoid having to\n  // disable the rule, we create a new variable.\n  let numberValue = value;\n  const bytes = new Uint8Array(byteLength);\n\n  for (let i = 0; i < bytes.length; i++) {\n    bytes[i] = Number(BigInt.asUintN(8, numberValue));\n    // eslint-disable-next-line no-bitwise\n    numberValue >>= BigInt(8);\n  }\n\n  return bytes.reverse();\n}\n\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nexport function numberToBytes(value: number): Uint8Array {\n  assert(typeof value === 'number', 'Value must be a number.');\n  assert(value >= 0, 'Value must be a non-negative number.');\n  assert(\n    Number.isSafeInteger(value),\n    'Value is not a safe integer. Use `bigIntToBytes` instead.',\n  );\n\n  const hexadecimal = value.toString(16);\n  return hexToBytes(hexadecimal);\n}\n\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function stringToBytes(value: string): Uint8Array {\n  assert(typeof value === 'string', 'Value must be a string.');\n\n  return new TextEncoder().encode(value);\n}\n\n/**\n * Convert a base64 encoded string to a `Uint8Array`.\n *\n * @param value - The base64 encoded string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function base64ToBytes(value: string): Uint8Array {\n  assert(typeof value === 'string', 'Value must be a string.');\n\n  return base64.decode(value);\n}\n\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nexport function valueToBytes(value: Bytes): Uint8Array {\n  if (typeof value === 'bigint') {\n    return bigIntToBytes(value);\n  }\n\n  if (typeof value === 'number') {\n    return numberToBytes(value);\n  }\n\n  if (typeof value === 'string') {\n    if (value.startsWith('0x')) {\n      return hexToBytes(value);\n    }\n\n    return stringToBytes(value);\n  }\n\n  if (isBytes(value)) {\n    return value;\n  }\n\n  throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\n\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nexport function concatBytes(values: Bytes[]): Uint8Array {\n  const normalizedValues = new Array(values.length);\n  let byteLength = 0;\n\n  for (let i = 0; i < values.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const value = valueToBytes(values[i]!);\n\n    normalizedValues[i] = value;\n    byteLength += value.length;\n  }\n\n  const bytes = new Uint8Array(byteLength);\n  for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n    // While we could simply spread the values into an array and use\n    // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n    bytes.set(normalizedValues[i], offset);\n    offset += normalizedValues[i].length;\n  }\n\n  return bytes;\n}\n\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nexport function createDataView(bytes: Uint8Array): DataView {\n  // To maintain compatibility with Node.js, we need to check if the bytes are\n  // a Buffer. If so, we need to slice the buffer to get the underlying\n  // ArrayBuffer.\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n    const buffer = bytes.buffer.slice(\n      bytes.byteOffset,\n      bytes.byteOffset + bytes.byteLength,\n    );\n\n    return new DataView(buffer);\n  }\n\n  return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\n\n/**\n * Compare two Uint8Arrays using a constant-time style loop to reduce timing\n * side-channels when comparing sensitive data (e.g., mnemonic bytes, keys,\n * authentication tags). Does not early-return on the first difference:\n * work done depends only on the input lengths, so byte content does not affect timing.\n *\n * When to use:\n * - Use for secret or security-sensitive byte comparisons to avoid content-based timing leaks.\n * - Prefer when inputs are fixed-length (or validated to equal length) at the API boundary.\n *\n * @param a - The first Uint8Array to compare.\n * @param b - The second Uint8Array to compare.\n * @returns Whether the Uint8Arrays are equal.\n */\nexport function areUint8ArraysEqual(a: Uint8Array, b: Uint8Array): boolean {\n  // eslint-disable-next-line no-bitwise\n  let diff = a.byteLength ^ b.byteLength;\n  const len = Math.max(a.byteLength, b.byteLength);\n\n  for (let i = 0; i < len; i++) {\n    const aByte = a[i] ?? 0;\n    const bByte = b[i] ?? 0;\n    // eslint-disable-next-line no-bitwise\n    diff |= aByte ^ bByte;\n  }\n\n  return diff === 0;\n}\n", "import type { Struct } from '@metamask/superstruct';\nimport { define } from '@metamask/superstruct';\n\n/**\n * Defines a new string-struct matching a regular expression.\n *\n * @example\n * const EthAddressStruct = definePattern('EthAddress', /^0x[0-9a-f]{40}$/iu);\n * type EthAddress = Infer<typeof EthAddressStruct>; // string\n *\n * const CaipChainIdStruct = defineTypedPattern<`${string}:${string}`>(\n *   'CaipChainId',\n *   /^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}$/u;\n * );\n * type CaipChainId = Infer<typeof CaipChainIdStruct>; // `${string}:${string}`\n * @param name - Type name.\n * @param pattern - Regular expression to match.\n * @template Pattern - The pattern type, defaults to `string`.\n * @returns A new string-struct that matches the given pattern.\n */\nexport function definePattern<Pattern extends string = string>(\n  name: string,\n  pattern: RegExp,\n): Struct<Pattern, null> {\n  return define<Pattern>(name, (value: unknown): boolean | string => {\n    return typeof value === 'string' && pattern.test(value);\n  });\n}\n", "import type { Infer } from '@metamask/superstruct';\n\nimport { definePattern } from './superstruct';\n\nexport const CAIP_CHAIN_ID_REGEX =\n  /^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u;\n\nexport const CAIP_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\n\nexport const CAIP_REFERENCE_REGEX = /^[-_a-zA-Z0-9]{1,32}$/u;\n\nexport const CAIP_ACCOUNT_ID_REGEX =\n  /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u;\n\nexport const CAIP_ACCOUNT_ADDRESS_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n\nexport const CAIP_ASSET_NAMESPACE_REGEX = /^[-a-z0-9]{3,8}$/u;\n\nexport const CAIP_ASSET_REFERENCE_REGEX = /^[-.%a-zA-Z0-9]{1,128}$/u;\n\nexport const CAIP_TOKEN_ID_REGEX = /^[-.%a-zA-Z0-9]{1,78}$/u;\n\nexport const CAIP_ASSET_TYPE_REGEX =\n  /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u;\n\nexport const CAIP_ASSET_ID_REGEX =\n  /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u;\n\nconst CAIP_ASSET_TYPE_OR_ID_REGEX =\n  /^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})(\\/(?<tokenId>[-.%a-zA-Z0-9]{1,78}))?$/u;\n\n/**\n * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.\n */\nexport const CaipChainIdStruct = definePattern<`${string}:${string}`>(\n  'CaipChainId',\n  CAIP_CHAIN_ID_REGEX,\n);\nexport type CaipChainId = Infer<typeof CaipChainIdStruct>;\n\n/**\n * A CAIP-2 namespace, i.e., the first part of a CAIP chain ID.\n */\nexport const CaipNamespaceStruct = definePattern(\n  'CaipNamespace',\n  CAIP_NAMESPACE_REGEX,\n);\nexport type CaipNamespace = Infer<typeof CaipNamespaceStruct>;\n\n/**\n * A CAIP-2 reference, i.e., the second part of a CAIP chain ID.\n */\nexport const CaipReferenceStruct = definePattern(\n  'CaipReference',\n  CAIP_REFERENCE_REGEX,\n);\nexport type CaipReference = Infer<typeof CaipReferenceStruct>;\n\n/**\n * A CAIP-10 account ID, i.e., a human-readable namespace, reference, and account address.\n */\nexport const CaipAccountIdStruct =\n  definePattern<`${string}:${string}:${string}`>(\n    'CaipAccountId',\n    CAIP_ACCOUNT_ID_REGEX,\n  );\nexport type CaipAccountId = Infer<typeof CaipAccountIdStruct>;\n\n/**\n * A CAIP-10 account address, i.e., the third part of the CAIP account ID.\n */\nexport const CaipAccountAddressStruct = definePattern(\n  'CaipAccountAddress',\n  CAIP_ACCOUNT_ADDRESS_REGEX,\n);\nexport type CaipAccountAddress = Infer<typeof CaipAccountAddressStruct>;\n\n/**\n * A CAIP-19 asset namespace, i.e., a namespace domain of an asset.\n */\nexport const CaipAssetNamespaceStruct = definePattern(\n  'CaipAssetNamespace',\n  CAIP_ASSET_NAMESPACE_REGEX,\n);\nexport type CaipAssetNamespace = Infer<typeof CaipAssetNamespaceStruct>;\n\n/**\n * A CAIP-19 asset reference, i.e., an identifier for an asset within a given namespace.\n */\nexport const CaipAssetReferenceStruct = definePattern(\n  'CaipAssetReference',\n  CAIP_ASSET_REFERENCE_REGEX,\n);\nexport type CaipAssetReference = Infer<typeof CaipAssetReferenceStruct>;\n\n/**\n * A CAIP-19 asset token ID, i.e., a unique identifier for an addressable asset of a given type\n */\nexport const CaipTokenIdStruct = definePattern(\n  'CaipTokenId',\n  CAIP_TOKEN_ID_REGEX,\n);\nexport type CaipTokenId = Infer<typeof CaipTokenIdStruct>;\n\n/**\n * A CAIP-19 asset type identifier, i.e., a human-readable type of asset identifier.\n */\nexport const CaipAssetTypeStruct =\n  definePattern<`${string}:${string}/${string}:${string}`>(\n    'CaipAssetType',\n    CAIP_ASSET_TYPE_REGEX,\n  );\nexport type CaipAssetType = Infer<typeof CaipAssetTypeStruct>;\n\n/**\n * A CAIP-19 asset ID identifier, i.e., a human-readable type of asset ID.\n */\nexport const CaipAssetIdStruct =\n  definePattern<`${string}:${string}/${string}:${string}/${string}`>(\n    'CaipAssetId',\n    CAIP_ASSET_ID_REGEX,\n  );\nexport type CaipAssetId = Infer<typeof CaipAssetIdStruct>;\n\n/**\n * A CAIP-19 asset type or asset ID identifier, i.e., a human-readable type of asset identifier.\n */\nexport const CaipAssetTypeOrIdStruct = definePattern<\n  CaipAssetType | CaipAssetId\n>('CaipAssetTypeOrId', CAIP_ASSET_TYPE_OR_ID_REGEX);\nexport type CaipAssetTypeOrId = Infer<typeof CaipAssetTypeOrIdStruct>;\n\n/** Known CAIP namespaces. */\nexport enum KnownCaipNamespace {\n  /** BIP-122 (Bitcoin) compatible chains. */\n  Bip122 = 'bip122',\n  /** Solana compatible chains */\n  Solana = 'solana',\n  /** Tron compatible chains */\n  Tron = 'tron',\n  /** EIP-155 compatible chains. */\n  Eip155 = 'eip155',\n  Wallet = 'wallet',\n}\n\n/**\n * A CAIP-2 chain ID that is guaranteed to have a known CAIP namespace\n * (@see {@link KnownCaipNamespace}).\n *\n * This is a narrower, more type-safe alternative to {@link CaipChainId} for use cases\n * where the chain namespace must be one of the known standards.\n *\n * @template Namespace - The namespace of the CAIP-2 chain ID. Must be a known namespace specified in {@link KnownCaipNamespace}.\n */\nexport type KnownCaipNamespacedChainId<\n  Namespace extends `${KnownCaipNamespace}` = `${KnownCaipNamespace}`,\n> = `${Namespace}:${string}`;\n\n/**\n * Check if the given value is a {@link CaipChainId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipChainId}.\n */\nexport function isCaipChainId(value: unknown): value is CaipChainId {\n  return typeof value === 'string' && CAIP_CHAIN_ID_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipNamespace}.\n */\nexport function isCaipNamespace(value: unknown): value is CaipNamespace {\n  return typeof value === 'string' && CAIP_NAMESPACE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipReference}.\n */\nexport function isCaipReference(value: unknown): value is CaipReference {\n  return typeof value === 'string' && CAIP_REFERENCE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAccountId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAccountId}.\n */\nexport function isCaipAccountId(value: unknown): value is CaipAccountId {\n  return typeof value === 'string' && CAIP_ACCOUNT_ID_REGEX.test(value);\n}\n\n/**\n * Check if a value is a {@link CaipAccountAddress}.\n *\n * @param value - The value to validate.\n * @returns True if the value is a valid {@link CaipAccountAddress}.\n */\nexport function isCaipAccountAddress(\n  value: unknown,\n): value is CaipAccountAddress {\n  return typeof value === 'string' && CAIP_ACCOUNT_ADDRESS_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAssetNamespace}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetNamespace}.\n */\nexport function isCaipAssetNamespace(\n  value: unknown,\n): value is CaipAssetNamespace {\n  return typeof value === 'string' && CAIP_ASSET_NAMESPACE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAssetReference}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetReference}.\n */\nexport function isCaipAssetReference(\n  value: unknown,\n): value is CaipAssetReference {\n  return typeof value === 'string' && CAIP_ASSET_REFERENCE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipTokenId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipTokenId}.\n */\nexport function isCaipTokenId(value: unknown): value is CaipTokenId {\n  return typeof value === 'string' && CAIP_TOKEN_ID_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAssetType}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetType}.\n */\nexport function isCaipAssetType(value: unknown): value is CaipAssetType {\n  return typeof value === 'string' && CAIP_ASSET_TYPE_REGEX.test(value);\n}\n\n/**\n * Check if the given value is a {@link CaipAssetId}.\n *\n * @param value - The value to check.\n * @returns Whether the value is a {@link CaipAssetId}.\n */\nexport function isCaipAssetId(value: unknown): value is CaipAssetId {\n  return typeof value === 'string' && CAIP_ASSET_ID_REGEX.test(value);\n}\n\n/**\n * Parse a CAIP-2 chain ID to an object containing the namespace and reference.\n * This validates the CAIP-2 chain ID before parsing it.\n *\n * @param caipChainId - The CAIP-2 chain ID to validate and parse.\n * @returns The parsed CAIP-2 chain ID.\n */\nexport function parseCaipChainId(caipChainId: CaipChainId): {\n  namespace: CaipNamespace;\n  reference: CaipReference;\n} {\n  const match = CAIP_CHAIN_ID_REGEX.exec(caipChainId);\n  if (!match?.groups) {\n    throw new Error('Invalid CAIP chain ID.');\n  }\n\n  return {\n    namespace: match.groups.namespace as CaipNamespace,\n    reference: match.groups.reference as CaipReference,\n  };\n}\n\n/**\n * Parse an CAIP-10 account ID to an object containing the chain ID, parsed chain ID, and account address.\n * This validates the CAIP-10 account ID before parsing it.\n *\n * @param caipAccountId - The CAIP-10 account ID to validate and parse.\n * @returns The parsed CAIP-10 account ID.\n */\nexport function parseCaipAccountId(caipAccountId: CaipAccountId): {\n  address: CaipAccountAddress;\n  chainId: CaipChainId;\n  chain: { namespace: CaipNamespace; reference: CaipReference };\n} {\n  const match = CAIP_ACCOUNT_ID_REGEX.exec(caipAccountId);\n  if (!match?.groups) {\n    throw new Error('Invalid CAIP account ID.');\n  }\n\n  return {\n    address: match.groups.accountAddress as CaipAccountAddress,\n    chainId: match.groups.chainId as CaipChainId,\n    chain: {\n      namespace: match.groups.namespace as CaipNamespace,\n      reference: match.groups.reference as CaipReference,\n    },\n  };\n}\n\n/**\n * Parse a CAIP-19 asset type to an object containing the chain ID, parsed chain ID,\n * asset namespace, and asset reference\n *\n * This validates the CAIP-19 asset type before parsing it.\n *\n * @param caipAssetType - The CAIP-19 asset type to validate and parse.\n * @returns The parsed CAIP-19 asset type.\n */\nexport function parseCaipAssetType(caipAssetType: CaipAssetType): {\n  assetNamespace: CaipAssetNamespace;\n  assetReference: CaipAssetReference;\n  chainId: CaipChainId;\n  chain: { namespace: CaipNamespace; reference: CaipReference };\n} {\n  const match = CAIP_ASSET_TYPE_REGEX.exec(caipAssetType);\n  if (!match?.groups) {\n    throw new Error('Invalid CAIP asset type.');\n  }\n\n  return {\n    assetNamespace: match.groups.assetNamespace as CaipAssetNamespace,\n    assetReference: match.groups.assetReference as CaipAssetReference,\n    chainId: match.groups.chainId as CaipChainId,\n    chain: {\n      namespace: match.groups.namespace as CaipNamespace,\n      reference: match.groups.reference as CaipReference,\n    },\n  };\n}\n\n/**\n * Parse a CAIP-19 asset ID to an object containing the chain ID, parsed chain ID,\n * asset namespace, asset reference, and token ID.\n *\n * This validates the CAIP-19 asset ID before parsing it.\n *\n * @param caipAssetId - The CAIP-19 asset ID to validate and parse.\n * @returns The parsed CAIP-19 asset ID.\n */\nexport function parseCaipAssetId(caipAssetId: CaipAssetId): {\n  assetNamespace: CaipAssetNamespace;\n  assetReference: CaipAssetReference;\n  tokenId: CaipTokenId;\n  chainId: CaipChainId;\n  chain: { namespace: CaipNamespace; reference: CaipReference };\n} {\n  const match = CAIP_ASSET_ID_REGEX.exec(caipAssetId);\n  if (!match?.groups) {\n    throw new Error('Invalid CAIP asset ID.');\n  }\n\n  return {\n    assetNamespace: match.groups.assetNamespace as CaipAssetNamespace,\n    assetReference: match.groups.assetReference as CaipAssetReference,\n    tokenId: match.groups.tokenId as CaipTokenId,\n    chainId: match.groups.chainId as CaipChainId,\n    chain: {\n      namespace: match.groups.namespace as CaipNamespace,\n      reference: match.groups.reference as CaipReference,\n    },\n  };\n}\n\n/**\n * Chain ID as defined per the CAIP-2\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md}.\n *\n * It defines a way to uniquely identify any blockchain in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identify of a blockchain within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs does not comply with the CAIP-2\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-2.md#syntax}.\n * @returns A CAIP chain ID.\n */\nexport function toCaipChainId(\n  namespace: CaipNamespace,\n  reference: CaipReference,\n): CaipChainId {\n  if (!isCaipNamespace(namespace)) {\n    throw new Error(\n      `Invalid \"namespace\", must match: ${CAIP_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipReference(reference)) {\n    throw new Error(\n      `Invalid \"reference\", must match: ${CAIP_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  return `${namespace}:${reference}`;\n}\n\n/**\n * Account ID as defined per the CAIP-10\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md}.\n *\n * It defines a way to uniquely identify any blockchain account in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identity of a blockchain within a given namespace.\n * @param accountAddress - The address of the blockchain account.\n * @throws {@link Error}\n * This exception is thrown if the inputs do not comply with the CAIP-10\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md#syntax}.\n * @returns A CAIP account ID.\n */\nexport function toCaipAccountId(\n  namespace: CaipNamespace,\n  reference: CaipReference,\n  accountAddress: CaipAccountAddress,\n): CaipAccountId {\n  if (!isCaipNamespace(namespace)) {\n    throw new Error(\n      `Invalid \"namespace\", must match: ${CAIP_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipReference(reference)) {\n    throw new Error(\n      `Invalid \"reference\", must match: ${CAIP_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAccountAddress(accountAddress)) {\n    throw new Error(\n      `Invalid \"accountAddress\", must match: ${CAIP_ACCOUNT_ADDRESS_REGEX.toString()}`,\n    );\n  }\n\n  return `${namespace}:${reference}:${accountAddress}`;\n}\n\n/**\n * Asset Type as defined per the CAIP-19\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-19.md}.\n *\n * It defines a way to uniquely identify any blockchain asset in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identity of a blockchain within a given namespace.\n * @param assetNamespace - The namespace domain of an asset.\n * @param assetReference - The identity of an asset within a given namespace.\n * @throws {@link Error}\n * This exception is thrown if the inputs do not comply with the CAIP-19\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-19.md#syntax}.\n * @returns A CAIP asset type.\n */\nexport function toCaipAssetType(\n  namespace: CaipNamespace,\n  reference: CaipReference,\n  assetNamespace: CaipAssetNamespace,\n  assetReference: CaipAssetReference,\n): CaipAssetType {\n  if (!isCaipNamespace(namespace)) {\n    throw new Error(\n      `Invalid \"namespace\", must match: ${CAIP_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipReference(reference)) {\n    throw new Error(\n      `Invalid \"reference\", must match: ${CAIP_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAssetNamespace(assetNamespace)) {\n    throw new Error(\n      `Invalid \"assetNamespace\", must match: ${CAIP_ASSET_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAssetReference(assetReference)) {\n    throw new Error(\n      `Invalid \"assetReference\", must match: ${CAIP_ASSET_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  return `${namespace}:${reference}/${assetNamespace}:${assetReference}`;\n}\n\n/**\n * Asset ID as defined per the CAIP-19\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-19.md}.\n *\n * It defines a way to uniquely identify any blockchain asset in a human-readable\n * way.\n *\n * @param namespace - The standard (ecosystem) of similar blockchains.\n * @param reference - Identity of a blockchain within a given namespace.\n * @param assetNamespace - The namespace domain of an asset.\n * @param assetReference - The identity of an asset within a given namespace.\n * @param tokenId - The unique identifier for an addressable asset of a given type.\n * @throws {@link Error}\n * This exception is thrown if the inputs do not comply with the CAIP-19\n * syntax specification\n * {@link https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-19.md#syntax}.\n * @returns A CAIP asset ID.\n */\nexport function toCaipAssetId(\n  namespace: CaipNamespace,\n  reference: CaipReference,\n  assetNamespace: CaipAssetNamespace,\n  assetReference: CaipAssetReference,\n  tokenId: CaipTokenId,\n): CaipAssetId {\n  if (!isCaipNamespace(namespace)) {\n    throw new Error(\n      `Invalid \"namespace\", must match: ${CAIP_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipReference(reference)) {\n    throw new Error(\n      `Invalid \"reference\", must match: ${CAIP_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAssetNamespace(assetNamespace)) {\n    throw new Error(\n      `Invalid \"assetNamespace\", must match: ${CAIP_ASSET_NAMESPACE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipAssetReference(assetReference)) {\n    throw new Error(\n      `Invalid \"assetReference\", must match: ${CAIP_ASSET_REFERENCE_REGEX.toString()}`,\n    );\n  }\n\n  if (!isCaipTokenId(tokenId)) {\n    throw new Error(\n      `Invalid \"tokenId\", must match: ${CAIP_TOKEN_ID_REGEX.toString()}`,\n    );\n  }\n\n  return `${namespace}:${reference}/${assetNamespace}:${assetReference}/${tokenId}`;\n}\n", "import { size, string } from '@metamask/superstruct';\n\nimport { base64 } from './base64';\n\nexport const ChecksumStruct = size(\n  base64(string(), { paddingRequired: true }),\n  44,\n  44,\n);\n", "import type { Infer } from '@metamask/superstruct';\nimport {\n  bigint,\n  coerce,\n  create,\n  instance,\n  number,\n  string,\n  StructError,\n  union,\n} from '@metamask/superstruct';\n\nimport { assert } from './assert';\nimport { bytesToHex, hexToBytes } from './bytes';\nimport type { Hex } from './hex';\nimport { StrictHexStruct } from './hex';\n\nconst NumberLikeStruct = union([number(), bigint(), string(), StrictHexStruct]);\nconst NumberCoercer = coerce(number(), NumberLikeStruct, Number);\nconst BigIntCoercer = coerce(bigint(), NumberLikeStruct, BigInt);\n\nconst BytesLikeStruct = union([StrictHexStruct, instance(Uint8Array)]);\nconst BytesCoercer = coerce(\n  instance(Uint8Array),\n  union([StrictHexStruct]),\n  hexToBytes,\n);\n\nconst HexCoercer = coerce(StrictHexStruct, instance(Uint8Array), bytesToHex);\n\nexport type NumberLike = Infer<typeof NumberLikeStruct>;\nexport type BytesLike = Infer<typeof BytesLikeStruct>;\n\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nexport function createNumber(value: NumberLike): number {\n  try {\n    const result = create(value, NumberCoercer);\n\n    assert(\n      Number.isFinite(result),\n      `Expected a number-like value, got \"${value}\".`,\n    );\n\n    return result;\n  } catch (error) {\n    if (error instanceof StructError) {\n      throw new Error(`Expected a number-like value, got \"${value}\".`);\n    }\n\n    /* istanbul ignore next */\n    throw error;\n  }\n}\n\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nexport function createBigInt(value: NumberLike): bigint {\n  try {\n    // The `BigInt` constructor throws if the value is not a number-like value.\n    // There is no need to validate the value manually.\n    return create(value, BigIntCoercer);\n  } catch (error) {\n    if (error instanceof StructError) {\n      throw new Error(\n        `Expected a number-like value, got \"${String(error.value)}\".`,\n      );\n    }\n\n    /* istanbul ignore next */\n    throw error;\n  }\n}\n\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nexport function createBytes(value: BytesLike): Uint8Array {\n  if (typeof value === 'string' && value.toLowerCase() === '0x') {\n    return new Uint8Array();\n  }\n\n  try {\n    return create(value, BytesCoercer);\n  } catch (error) {\n    if (error instanceof StructError) {\n      throw new Error(\n        `Expected a bytes-like value, got \"${String(error.value)}\".`,\n      );\n    }\n\n    /* istanbul ignore next */\n    throw error;\n  }\n}\n\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nexport function createHex(value: BytesLike): Hex {\n  if (\n    (value instanceof Uint8Array && value.length === 0) ||\n    (typeof value === 'string' && value.toLowerCase() === '0x')\n  ) {\n    return '0x';\n  }\n\n  try {\n    return create(value, HexCoercer);\n  } catch (error) {\n    if (error instanceof StructError) {\n      throw new Error(\n        `Expected a bytes-like value, got \"${String(error.value)}\".`,\n      );\n    }\n\n    /* istanbul ignore next */\n    throw error;\n  }\n}\n", "/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap<Key, Value> implements ReadonlyMap<Key, Value> {\n  readonly #map: Map<Key, Value>;\n\n  public get size() {\n    return this.#map.size;\n  }\n\n  public [Symbol.iterator]() {\n    return this.#map[Symbol.iterator]();\n  }\n\n  constructor(entries?: readonly (readonly [Key, Value])[] | null) {\n    this.#map = new Map<Key, Value>(entries);\n    Object.freeze(this);\n  }\n\n  public entries() {\n    return this.#map.entries();\n  }\n\n  public forEach(\n    callbackfn: (value: Value, key: Key, map: this) => void,\n    thisArg?: any,\n  ): void {\n    // We have to wrap the specified callback in order to prevent it from\n    // receiving a reference to the inner map.\n    return this.#map.forEach((value: Value, key: Key, _map: unknown) =>\n      callbackfn.call(thisArg, value, key, this),\n    );\n  }\n\n  public get(key: Key) {\n    return this.#map.get(key);\n  }\n\n  public has(key: Key) {\n    return this.#map.has(key);\n  }\n\n  public keys() {\n    return this.#map.keys();\n  }\n\n  public values() {\n    return this.#map.values();\n  }\n\n  public toString(): string {\n    return `FrozenMap(${this.size}) {${\n      this.size > 0\n        ? ` ${[...this.entries()]\n            .map(([key, value]) => `${String(key)} => ${String(value)}`)\n            .join(', ')} `\n        : ''\n    }}`;\n  }\n}\n\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet<Value> implements ReadonlySet<Value> {\n  readonly #set: Set<Value>;\n\n  public get size() {\n    return this.#set.size;\n  }\n\n  public [Symbol.iterator]() {\n    return this.#set[Symbol.iterator]();\n  }\n\n  constructor(values?: readonly Value[] | null) {\n    this.#set = new Set<Value>(values);\n    Object.freeze(this);\n  }\n\n  public entries() {\n    return this.#set.entries();\n  }\n\n  public forEach(\n    callbackfn: (value: Value, value2: Value, set: this) => void,\n    thisArg?: any,\n  ): void {\n    // We have to wrap the specified callback in order to prevent it from\n    // receiving a reference to the inner set.\n    return this.#set.forEach((value: Value, value2: Value, _set: unknown) =>\n      callbackfn.call(thisArg, value, value2, this),\n    );\n  }\n\n  public has(value: Value) {\n    return this.#set.has(value);\n  }\n\n  public keys() {\n    return this.#set.keys();\n  }\n\n  public values() {\n    return this.#set.values();\n  }\n\n  public toString(): string {\n    return `FrozenSet(${this.size}) {${\n      this.size > 0\n        ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n        : ''\n    }}`;\n  }\n}\n\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\n\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n\nexport { FrozenMap, FrozenSet };\n", "import {\n  any,\n  array,\n  coerce,\n  create,\n  define,\n  integer,\n  is,\n  literal,\n  nullable,\n  number,\n  object as superstructObject,\n  optional,\n  record,\n  string,\n  union,\n  unknown,\n  Struct,\n  refine,\n} from '@metamask/superstruct';\nimport type {\n  Context,\n  Infer,\n  ObjectSchema,\n  Simplify,\n  Optionalize,\n} from '@metamask/superstruct';\n\nimport type { AssertionErrorConstructor } from './assert';\nimport { assertStruct } from './assert';\nimport { hasProperty } from './misc';\n\n/**\n * Any JSON-compatible value.\n */\nexport type Json =\n  | null\n  | boolean\n  | number\n  | string\n  | Json[]\n  | { [prop: string]: Json };\n\n/**\n * A helper type to make properties with `undefined` in their type optional, but\n * not `undefined` itself.\n *\n * @deprecated Use `ObjectType` and/or `ExactOptionalize` from `@metamask/superstruct@>=3.2.0` instead.\n * @example\n * ```ts\n * type Foo = ObjectOptional<{ foo: string | undefined }>;\n * // Foo is equivalent to { foo?: string }\n * ```\n */\nexport type ObjectOptional<Schema extends Record<string, unknown>> = {\n  [Key in keyof Schema as Schema[Key] extends ExactOptionalGuard\n    ? Key\n    : never]?: Schema[Key] extends ExactOptionalGuard & infer Original\n    ? Original\n    : never;\n} & {\n  [Key in keyof Schema as Schema[Key] extends ExactOptionalGuard\n    ? never\n    : Key]: Schema[Key];\n};\n\n/**\n * An object type with support for exact optionals. This is used by the `object`\n * struct. This uses the {@link ObjectOptional} helper to make properties with\n * `undefined` in their type optional, but not `undefined` itself.\n *\n * @deprecated Use `ObjectType` from `@metamask/superstruct@>=3.2.0` instead.\n */\nexport type ObjectType<Schema extends ObjectSchema> = Simplify<\n  ObjectOptional<\n    Optionalize<{\n      [Key in keyof Schema]: Infer<Schema[Key]>;\n    }>\n  >\n>;\n\n/**\n * A struct to check if the given value is a valid object, with support for\n * {@link exactOptional} types.\n *\n * @deprecated Use `exactOptional` and `object` from `@metamask/superstruct@>=3.2.0` instead.\n * @param schema - The schema of the object.\n * @returns A struct to check if the given value is an object.\n */\nexport const object = <Schema extends ObjectSchema>(\n  schema: Schema,\n): Struct<ObjectType<Schema>> =>\n  // The type is slightly different from a regular object struct, because we\n  // want to make properties with `undefined` in their type optional, but not\n  // `undefined` itself. This means that we need a type cast.\n  superstructObject(schema) as unknown as Struct<ObjectType<Schema>>;\n\ndeclare const exactOptionalSymbol: unique symbol;\ntype ExactOptionalGuard = {\n  _exactOptionalGuard?: typeof exactOptionalSymbol;\n};\n\n/**\n * Check the last field of a path is present.\n *\n * @param context - The context to check.\n * @param context.path - The path to check.\n * @param context.branch - The branch to check.\n * @returns Whether the last field of a path is present.\n */\nfunction hasOptional({ path, branch }: Context): boolean {\n  const field = path[path.length - 1];\n  return hasProperty(branch[branch.length - 2], field);\n}\n\n/**\n * A struct which allows the property of an object to be absent, or to be present\n * as long as it's valid and not set to `undefined`.\n *\n * This struct should be used in conjunction with the {@link object} from this\n * library, to get proper type inference.\n *\n * @deprecated Use `exactOptional` and `object` from `@metamask/superstruct@>=3.2.0` instead.\n * @param struct - The struct to check the value against, if present.\n * @returns A struct to check if the given value is valid, or not present.\n * @example\n * ```ts\n * const struct = object({\n *   foo: exactOptional(string()),\n *   bar: exactOptional(number()),\n *   baz: optional(boolean()),\n *   qux: unknown(),\n * });\n *\n * type Type = Infer<typeof struct>;\n * // Type is equivalent to:\n * // {\n * //   foo?: string;\n * //   bar?: number;\n * //   baz?: boolean | undefined;\n * //   qux: unknown;\n * // }\n * ```\n */\nexport function exactOptional<Type, Schema>(\n  struct: Struct<Type, Schema>,\n): Struct<Type & ExactOptionalGuard, Schema> {\n  return new Struct<Type & ExactOptionalGuard, Schema>({\n    ...struct,\n\n    type: `optional ${struct.type}`,\n    validator: (value, context) =>\n      !hasOptional(context) || struct.validator(value, context),\n\n    refiner: (value, context) =>\n      !hasOptional(context) || struct.refiner(value as Type, context),\n  });\n}\n\n/**\n * Validate an unknown input to be valid JSON.\n *\n * Useful for constructing JSON structs.\n *\n * @param json - An unknown value.\n * @returns True if the value is valid JSON, otherwise false.\n */\nfunction validateJson(json: unknown): boolean {\n  if (json === null || typeof json === 'boolean' || typeof json === 'string') {\n    return true;\n  }\n\n  if (typeof json === 'number' && Number.isFinite(json)) {\n    return true;\n  }\n\n  if (typeof json === 'object') {\n    let every = true;\n    if (Array.isArray(json)) {\n      // Ignoring linting error since for-of is significantly slower than a normal for-loop\n      // and performance is important in this specific function.\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (let i = 0; i < json.length; i++) {\n        if (!validateJson(json[i])) {\n          every = false;\n          break;\n        }\n      }\n      return every;\n    }\n\n    const entries = Object.entries(json);\n    // Ignoring linting errors since for-of is significantly slower than a normal for-loop\n    // and performance is important in this specific function.\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < entries.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      if (typeof entries[i]![0] !== 'string' || !validateJson(entries[i]![1])) {\n        every = false;\n        break;\n      }\n    }\n    return every;\n  }\n\n  return false;\n}\n\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\nexport const UnsafeJsonStruct: Struct<Json> = define('JSON', (json) =>\n  validateJson(json),\n);\n\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexport const JsonStruct = coerce(\n  UnsafeJsonStruct,\n  refine(any(), 'JSON', (value) => is(value, UnsafeJsonStruct)),\n  (value) =>\n    JSON.parse(\n      JSON.stringify(value, (propKey, propValue) => {\n        // Strip __proto__ and constructor properties to prevent prototype pollution.\n        if (propKey === '__proto__' || propKey === 'constructor') {\n          return undefined;\n        }\n        return propValue;\n      }),\n    ),\n);\n\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nexport function isValidJson(value: unknown): value is Json {\n  try {\n    getSafeJson(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Validate and return sanitized JSON.\n *\n * Note:\n * This function uses sanitized JsonStruct for validation\n * that applies stringify and then parse of a value provided\n * to ensure that there are no getters which can have side effects\n * that can cause security issues.\n *\n * @param value - JSON structure to be processed.\n * @returns Sanitized JSON structure.\n */\nexport function getSafeJson<Type extends Json = Json>(value: unknown): Type {\n  return create(value, JsonStruct) as Type;\n}\n\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nexport function getJsonSize(value: unknown): number {\n  assertStruct(value, JsonStruct, 'Invalid JSON value');\n\n  const json = JSON.stringify(value);\n  return new TextEncoder().encode(json).byteLength;\n}\n\n/**\n * The string '2.0'.\n */\nexport const jsonrpc2 = '2.0' as const;\nexport const JsonRpcVersionStruct = literal(jsonrpc2);\n\n/**\n * A String specifying the version of the JSON-RPC protocol.\n * MUST be exactly \"2.0\".\n */\nexport type JsonRpcVersion2 = typeof jsonrpc2;\n\nexport const JsonRpcIdStruct = nullable(union([number(), string()]));\n\n/**\n * An identifier established by the Client that MUST contain a String, Number,\n * or NULL value if included. If it is not included it is assumed to be a\n * notification. The value SHOULD normally not be Null and Numbers SHOULD\n * NOT contain fractional parts.\n */\nexport type JsonRpcId = Infer<typeof JsonRpcIdStruct>;\n\nexport const JsonRpcErrorStruct = object({\n  code: integer(),\n  message: string(),\n  data: exactOptional(JsonStruct),\n  stack: exactOptional(string()),\n});\n\n/**\n * Mark a certain key of a type as optional.\n */\nexport type OptionalField<\n  Type extends Record<string, unknown>,\n  Key extends keyof Type,\n> = Omit<Type, Key> & Partial<Pick<Type, Key>>;\n\n/**\n * A JSON-RPC error object.\n *\n * Note that TypeScript infers `unknown | undefined` as `unknown`, meaning that\n * the `data` field is not optional. To make it optional, we use the\n * `OptionalField` helper, to explicitly make it optional.\n */\nexport type JsonRpcError = OptionalField<\n  Infer<typeof JsonRpcErrorStruct>,\n  'data'\n>;\n\nexport const JsonRpcParamsStruct: Struct<Json[] | Record<string, Json>, null> =\n  union([record(string(), JsonStruct), array(JsonStruct)]);\n\nexport type JsonRpcParams = Json[] | Record<string, Json>;\n\nexport const JsonRpcRequestStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  method: string(),\n  params: exactOptional(JsonRpcParamsStruct),\n});\n\nexport type InferWithParams<\n  Type extends Struct<any>,\n  Params extends JsonRpcParams,\n> = Infer<Type> & {\n  params?: Params;\n};\n\n/**\n * A JSON-RPC request object.\n */\nexport type JsonRpcRequest<Params extends JsonRpcParams = JsonRpcParams> =\n  InferWithParams<typeof JsonRpcRequestStruct, Params>;\n\nexport const JsonRpcNotificationStruct = object({\n  jsonrpc: JsonRpcVersionStruct,\n  method: string(),\n  params: exactOptional(JsonRpcParamsStruct),\n});\n\n/**\n * A JSON-RPC notification object.\n */\nexport type JsonRpcNotification<Params extends JsonRpcParams = JsonRpcParams> =\n  InferWithParams<typeof JsonRpcNotificationStruct, Params>;\n\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nexport function isJsonRpcNotification(\n  value: unknown,\n): value is JsonRpcNotification {\n  return is(value, JsonRpcNotificationStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nexport function assertIsJsonRpcNotification(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcNotification {\n  assertStruct(\n    value,\n    JsonRpcNotificationStruct,\n    'Invalid JSON-RPC notification',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nexport function isJsonRpcRequest(value: unknown): value is JsonRpcRequest {\n  return is(value, JsonRpcRequestStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nexport function assertIsJsonRpcRequest(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcRequest {\n  assertStruct(\n    value,\n    JsonRpcRequestStruct,\n    'Invalid JSON-RPC request',\n    ErrorWrapper,\n  );\n}\n\nexport const PendingJsonRpcResponseStruct = superstructObject({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: optional(unknown()),\n  error: optional(JsonRpcErrorStruct),\n});\n\n/**\n * A JSON-RPC response object that has not yet been resolved.\n */\nexport type PendingJsonRpcResponse<Result extends Json = Json> = Omit<\n  Infer<typeof PendingJsonRpcResponseStruct>,\n  'result'\n> & {\n  result?: Result;\n};\n\nexport const JsonRpcSuccessStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: JsonStruct,\n});\n\n/**\n * A successful JSON-RPC response object.\n */\nexport type JsonRpcSuccess<Result extends Json = Json> = Omit<\n  Infer<typeof JsonRpcSuccessStruct>,\n  'result'\n> & {\n  result: Result;\n};\n\nexport const JsonRpcFailureStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  error: JsonRpcErrorStruct as Struct<JsonRpcError>,\n});\n\n/**\n * A failed JSON-RPC response object.\n */\nexport type JsonRpcFailure = Infer<typeof JsonRpcFailureStruct>;\n\nexport const JsonRpcResponseStruct = union([\n  JsonRpcSuccessStruct,\n  JsonRpcFailureStruct,\n]);\n\n/**\n * A JSON-RPC response object. Must be checked to determine whether it's a\n * success or failure.\n *\n * @template Result - The type of the result.\n */\nexport type JsonRpcResponse<Result extends Json = Json> =\n  | JsonRpcSuccess<Result>\n  | JsonRpcFailure;\n\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nexport function isPendingJsonRpcResponse(\n  response: unknown,\n): response is PendingJsonRpcResponse {\n  return is(response, PendingJsonRpcResponseStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nexport function assertIsPendingJsonRpcResponse(\n  response: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts response is PendingJsonRpcResponse {\n  assertStruct(\n    response,\n    PendingJsonRpcResponseStruct,\n    'Invalid pending JSON-RPC response',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nexport function isJsonRpcResponse(\n  response: unknown,\n): response is JsonRpcResponse {\n  return is(response, JsonRpcResponseStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nexport function assertIsJsonRpcResponse(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcResponse {\n  assertStruct(\n    value,\n    JsonRpcResponseStruct,\n    'Invalid JSON-RPC response',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nexport function isJsonRpcSuccess(value: unknown): value is JsonRpcSuccess {\n  return is(value, JsonRpcSuccessStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nexport function assertIsJsonRpcSuccess(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcSuccess {\n  assertStruct(\n    value,\n    JsonRpcSuccessStruct,\n    'Invalid JSON-RPC success response',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nexport function isJsonRpcFailure(value: unknown): value is JsonRpcFailure {\n  return is(value, JsonRpcFailureStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nexport function assertIsJsonRpcFailure(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcFailure {\n  assertStruct(\n    value,\n    JsonRpcFailureStruct,\n    'Invalid JSON-RPC failure response',\n    ErrorWrapper,\n  );\n}\n\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nexport function isJsonRpcError(value: unknown): value is JsonRpcError {\n  return is(value, JsonRpcErrorStruct);\n}\n\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nexport function assertIsJsonRpcError(\n  value: unknown,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  ErrorWrapper?: AssertionErrorConstructor,\n): asserts value is JsonRpcError {\n  assertStruct(\n    value,\n    JsonRpcErrorStruct,\n    'Invalid JSON-RPC error',\n    ErrorWrapper,\n  );\n}\n\ntype JsonRpcValidatorOptions = {\n  permitEmptyString?: boolean;\n  permitFractions?: boolean;\n  permitNull?: boolean;\n};\n\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nexport function getJsonRpcIdValidator(options?: JsonRpcValidatorOptions) {\n  const { permitEmptyString, permitFractions, permitNull } = {\n    permitEmptyString: true,\n    permitFractions: false,\n    permitNull: true,\n    ...options,\n  };\n\n  /**\n   * Type guard for {@link JsonRpcId}.\n   *\n   * @param id - The JSON-RPC ID value to check.\n   * @returns Whether the given ID is valid per the options given to the\n   * factory.\n   */\n  const isValidJsonRpcId = (id: unknown): id is JsonRpcId => {\n    return Boolean(\n      (typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n        (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n        (permitNull && id === null),\n    );\n  };\n\n  return isValidJsonRpcId;\n}\n", "import type { Debugger } from 'debug';\nimport debug from 'debug';\n\nconst globalLogger = debug('metamask');\n\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nexport function createProjectLogger(projectName: string): Debugger {\n  return globalLogger.extend(projectName);\n}\n\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nexport function createModuleLogger(\n  projectLogger: Debugger,\n  moduleName: string,\n): Debugger {\n  return projectLogger.extend(moduleName);\n}\n", "/**\n * Common duration constants, in milliseconds.\n */\nexport enum Duration {\n  /**\n   * A millisecond.\n   */\n  Millisecond = 1,\n\n  /**\n   * A second, in milliseconds.\n   */\n  Second = 1000, // Millisecond * 1000\n\n  /**\n   * A minute, in milliseconds.\n   */\n  Minute = 60_000, // Second * 60\n\n  /**\n   * An hour, in milliseconds.\n   */\n  Hour = 3_600_000, // Minute * 60\n\n  /**\n   * A day, in milliseconds.\n   */\n  Day = 86_400_000, // Hour * 24\n\n  /**\n   * A week, in milliseconds.\n   */\n  Week = 604_800_000, // Day * 7\n\n  /**\n   * A year, in milliseconds.\n   */\n  Year = 31_536_000_000, // Day * 365\n}\n\nconst isNonNegativeInteger = (number: number) =>\n  Number.isInteger(number) && number >= 0;\n\nconst assertIsNonNegativeInteger = (number: number, name: string) => {\n  if (!isNonNegativeInteger(number)) {\n    throw new Error(\n      `\"${name}\" must be a non-negative integer. Received: \"${number}\".`,\n    );\n  }\n};\n\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nexport function inMilliseconds(count: number, duration: Duration): number {\n  assertIsNonNegativeInteger(count, 'count');\n  return count * duration;\n}\n\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nexport function timeSince(timestamp: number): number {\n  assertIsNonNegativeInteger(timestamp, 'timestamp');\n  return Date.now() - timestamp;\n}\n", "import type { Struct } from '@metamask/superstruct';\nimport { is, refine, string } from '@metamask/superstruct';\nimport {\n  gt as gtSemver,\n  gtr as gtrSemver,\n  satisfies as satisfiesSemver,\n  valid as validSemVerVersion,\n  validRange as validSemVerRange,\n} from 'semver';\n\nimport { assertStruct } from './assert';\nimport type { Opaque } from './opaque';\n\n/**\n * {@link https://codemix.com/opaque-types-in-javascript/ Opaque} type for SemVer ranges.\n *\n * @example Use {@link assertIsSemVerRange} and {@link isValidSemVerRange} to cast to proper type.\n * ```typescript\n * const unsafeRange: string = dataFromUser();\n * assertIsSemVerRange(unsafeRange);\n * unsafeRange\n * // ^? SemVerRange\n * ```\n * @example If you know what you're doing and want to side-step type safety, casting from a string works correctly.\n * ```typescript\n * const unsafeRange: string = dataFromUser();\n * unsafeRange as SemVerRange;\n * // ^? SemVerRange\n * ```\n * @see {@link assertIsSemVerRange}\n * @see {@link isValidSemVerRange}\n */\nexport type SemVerRange = Opaque<string, typeof semVerRange>;\ndeclare const semVerRange: unique symbol;\n\n/**\n * {@link https://codemix.com/opaque-types-in-javascript/ Opaque} type for singular SemVer version.\n *\n * @example Use {@link assertIsSemVerVersion} and {@link isValidSemVerVersion} to cast to proper type.\n * ```typescript\n * const unsafeVersion: string = dataFromUser();\n * assertIsSemVerVersion(unsafeRange);\n * unsafeVersion\n * // ^? SemVerVersion\n * ```\n * @example If you know what you're doing and want to side-step type safety, casting from a string works correctly.\n * ```typescript\n * const unsafeVersion: string = dataFromUser();\n * unsafeRange as SemVerVersion;\n * // ^? SemVerVersion\n * ```\n * @see {@link assertIsSemVerVersion}\n * @see {@link isValidSemVerVersion}\n */\nexport type SemVerVersion = Opaque<string, typeof semVerVersion>;\ndeclare const semVerVersion: unique symbol;\n\n/**\n * A struct for validating a version string.\n */\nexport const VersionStruct = refine<SemVerVersion, null>(\n  string() as unknown as Struct<SemVerVersion, null>,\n  'Version',\n  (value) => {\n    if (validSemVerVersion(value) === null) {\n      return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n  },\n);\n\nexport const VersionRangeStruct = refine<SemVerRange, null>(\n  string() as unknown as Struct<SemVerRange, null>,\n  'Version range',\n  (value) => {\n    if (validSemVerRange(value) === null) {\n      return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n  },\n);\n\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nexport function isValidSemVerVersion(\n  version: unknown,\n): version is SemVerVersion {\n  return is(version, VersionStruct);\n}\n\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nexport function isValidSemVerRange(\n  versionRange: unknown,\n): versionRange is SemVerRange {\n  return is(versionRange, VersionRangeStruct);\n}\n\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nexport function assertIsSemVerVersion(\n  version: unknown,\n): asserts version is SemVerVersion {\n  assertStruct(version, VersionStruct);\n}\n\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nexport function assertIsSemVerRange(\n  range: unknown,\n): asserts range is SemVerRange {\n  assertStruct(range, VersionRangeStruct);\n}\n\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nexport function gtVersion(\n  version1: SemVerVersion,\n  version2: SemVerVersion,\n): boolean {\n  return gtSemver(version1, version2);\n}\n\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nexport function gtRange(version: SemVerVersion, range: SemVerRange): boolean {\n  return gtrSemver(version, range);\n}\n\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nexport function satisfiesVersionRange(\n  version: SemVerVersion,\n  versionRange: SemVerRange,\n): boolean {\n  return satisfiesSemver(version, versionRange, {\n    includePrerelease: true,\n  });\n}\n", "/* eslint-disable operator-assignment */\n/*\nPrimary Attribution\nRichard Moore <ricmoo@me.com>\nhttps://github.com/ethers-io\n\nNote, Richard is a god of ether gods. Follow and respect him, and use Ethers.io!\n*/\n\nconst zero = BigInt(0);\nconst negative1 = BigInt(-1);\n\n/**\n * Converts a string, number, or bigint to a bigint.\n *\n * @param arg - The value to convert to bigint.\n * @returns The bigint representation of the input.\n * @throws Error if the input type cannot be converted to bigint.\n */\nexport function numericToBigInt(arg: string | number | bigint): bigint {\n  if (typeof arg === 'string') {\n    return BigInt(arg);\n  }\n  if (typeof arg === 'number') {\n    return BigInt(arg);\n  }\n  if (typeof arg === 'bigint') {\n    return arg;\n  }\n\n  throw new Error(`Cannot convert ${typeof arg} to BigInt`);\n}\n\n// complete ethereum unit map\nexport const unitMap = {\n  noether: '0',\n  wei: '1',\n  kwei: '1000',\n  Kwei: '1000',\n  babbage: '1000',\n  femtoether: '1000',\n  mwei: '1000000',\n  Mwei: '1000000',\n  lovelace: '1000000',\n  picoether: '1000000',\n  gwei: '1000000000',\n  Gwei: '1000000000',\n  shannon: '1000000000',\n  nanoether: '1000000000',\n  nano: '1000000000',\n  szabo: '1000000000000',\n  microether: '1000000000000',\n  micro: '1000000000000',\n  finney: '1000000000000000',\n  milliether: '1000000000000000',\n  milli: '1000000000000000',\n  ether: '1000000000000000000',\n  kether: '1000000000000000000000',\n  grand: '1000000000000000000000',\n  mether: '1000000000000000000000000',\n  gether: '1000000000000000000000000000',\n  tether: '1000000000000000000000000000000',\n} as const;\n\n// Pre-computed unit values as BigInt for performance\nconst unitMapBigInt = Object.fromEntries(\n  Object.entries(unitMap).map(([key, value]) => [key, BigInt(value)]),\n) as Record<EthereumUnit, bigint>;\n\nconst unitLengths = Object.fromEntries(\n  Object.entries(unitMap).map(([key, value]) => [key, value.length - 1 || 1]),\n) as Record<EthereumUnit, number>;\n\nconst NUMBER_REGEX = /^-?[0-9.]+$/u;\nconst FRACTION_REGEX = /^([0-9]*[1-9]|0)(0*)/u;\nconst COMMIFY_REGEX = /\\B(?=(\\d{3})+(?!\\d))/gu;\n\ntype EthereumUnit = keyof typeof unitMap;\n\n/**\n * Returns value of unit in Wei.\n *\n * @param unitInput - The unit to convert to, default ether.\n * @returns Value of the unit (in Wei).\n * @throws Error if the unit is not correct.\n */\nexport function getValueOfUnit(unitInput: EthereumUnit = 'ether'): bigint {\n  const unit = unitInput.toLowerCase() as EthereumUnit;\n  const unitValue = unitMapBigInt[unit];\n\n  if (unitValue === undefined) {\n    throw new Error(\n      `The unit provided ${unitInput} doesn't exist, please use the one of the following units ${JSON.stringify(\n        unitMap,\n        null,\n        2,\n      )}`,\n    );\n  }\n\n  return unitValue;\n}\n\n/**\n * Converts a number to a string.\n *\n * @param arg - The number to convert to a string.\n * @returns The string representation of the number.\n * @throws Error if the number is invalid.\n */\nexport function numberToString(arg: string | number | bigint) {\n  if (typeof arg === 'string') {\n    if (!NUMBER_REGEX.test(arg)) {\n      throw new Error(\n        `while converting number to string, invalid number value '${arg}', should be a number matching (^-?[0-9.]+).`,\n      );\n    }\n    return arg;\n  }\n  if (typeof arg === 'number') {\n    return String(arg);\n  }\n  if (typeof arg === 'bigint') {\n    return arg.toString();\n  }\n  throw new Error(\n    `while converting number to string, invalid number value '${String(\n      arg,\n    )}' type ${typeof arg}.`,\n  );\n}\n\n/**\n * Converts a number from Wei to a string.\n *\n * @param weiInput - The number to convert from Wei.\n * @param unit - The unit to convert to, default ether.\n * @param optionsInput - The options to use for the conversion.\n * @param optionsInput.pad - Whether to pad the fractional part with zeros.\n * @param optionsInput.commify - Whether to add commas to separate thousands.\n * @returns The string representation of the number.\n * @throws Error if the number is invalid.\n */\nexport function fromWei(\n  weiInput: string | number | bigint,\n  unit: EthereumUnit,\n  optionsInput?: { pad?: boolean; commify?: boolean },\n) {\n  let wei = numericToBigInt(weiInput);\n  const negative = wei < zero;\n  const unitLower = unit.toLowerCase() as EthereumUnit;\n  const base = unitMapBigInt[unitLower];\n  const baseLength = unitLengths[unitLower];\n  const options = optionsInput ?? {};\n\n  if (base === undefined) {\n    throw new Error(\n      `The unit provided ${unit} doesn't exist, please use the one of the following units ${JSON.stringify(\n        unitMap,\n        null,\n        2,\n      )}`,\n    );\n  }\n\n  // Handle special case of noether (base = 0)\n  if (base === zero) {\n    return negative ? '-0' : '0';\n  }\n\n  if (negative) {\n    wei = wei * negative1;\n  }\n\n  let fraction = (wei % base).toString();\n\n  fraction = fraction.padStart(baseLength, '0');\n\n  if (!options.pad) {\n    const fractionMatch = fraction.match(FRACTION_REGEX);\n    // istanbul ignore next: defensive fallback that's never reachable but necessary to satisfy TS\n    fraction = fractionMatch?.[1] ?? '0';\n  }\n\n  let whole = (wei / base).toString();\n\n  if (options.commify) {\n    whole = whole.replace(COMMIFY_REGEX, ',');\n  }\n\n  let value = `${whole}${fraction === '0' ? '' : `.${fraction}`}`;\n\n  if (negative) {\n    value = `-${value}`;\n  }\n\n  return value;\n}\n\n/**\n * Converts a number to Wei.\n *\n * @param etherInput - The number to convert to Wei.\n * @param unit - The unit to convert to, default ether.\n * @returns The number in Wei.\n * @throws Error if the number is invalid.\n */\nexport function toWei(\n  etherInput: string | number | bigint,\n  unit: EthereumUnit,\n): bigint {\n  const unitLower = unit.toLowerCase() as EthereumUnit;\n  const base = unitMapBigInt[unitLower];\n  const baseLength = unitLengths[unitLower];\n\n  if (base === undefined) {\n    throw new Error(\n      `The unit provided ${unit} doesn't exist, please use the one of the following units ${JSON.stringify(\n        unitMap,\n        null,\n        2,\n      )}`,\n    );\n  }\n\n  // Handle special case of noether (base = 0)\n  if (base === zero) {\n    return zero;\n  }\n\n  // Fast path for bigint inputs when unit is wei (no conversion needed)\n  if (typeof etherInput === 'bigint' && unitLower === 'wei') {\n    return etherInput;\n  }\n\n  // Fast path for bigint inputs with whole units (no fractional part)\n  if (typeof etherInput === 'bigint') {\n    return etherInput * base;\n  }\n\n  let ether = numberToString(etherInput);\n\n  // Is it negative?\n  const negative = ether.startsWith('-');\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error(\n      `While converting number ${etherInput} to wei, invalid value`,\n    );\n  }\n\n  // Split it into a whole and fractional part\n  const comps = ether.split('.');\n  if (comps.length > 2) {\n    throw new Error(\n      `While converting number ${etherInput} to wei,  too many decimal points`,\n    );\n  }\n\n  let whole = comps[0];\n  let fraction = comps[1];\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error(\n      `While converting number ${etherInput} to wei, too many decimal places`,\n    );\n  }\n\n  fraction = fraction.padEnd(baseLength, '0');\n\n  const wholeBigInt = BigInt(whole);\n  const fractionBigInt = BigInt(fraction);\n  let wei = wholeBigInt * base + fractionBigInt;\n\n  if (negative) {\n    wei = wei * negative1;\n  }\n\n  return wei;\n}\n", "import { type BytesLike, bytesToHex, hexToBytes } from '@metamask/utils';\n\nimport type { Hex } from './types';\n\n/**\n * The possible return value types for encoding/decoding operations.\n */\nexport type ResultValue = 'hex' | 'bytes';\n\n/**\n * Utility type for function return types based on ResultValue.\n */\nexport type ResultType<TResultValue extends ResultValue> =\n  TResultValue extends 'hex' ? Hex : Uint8Array;\n\n/**\n * Base options interface for operations that can return hex or bytes.\n */\nexport type EncodingOptions<TResultValue extends ResultValue> = {\n  out: TResultValue;\n};\n\n/**\n * Default options value with proper typing. Use this as your default parameter.\n */\nexport const defaultOptions = { out: 'hex' } as EncodingOptions<any>;\n\n/**\n * Prepares a result by converting between hex and bytes based on options.\n * @param result - The value to convert (either Uint8Array or Hex optionally prefixed with 0x).\n * @param options - The options specifying the desired output format.\n * @returns The converted value with proper type narrowing.\n */\nexport function prepareResult<TResultValue extends ResultValue>(\n  result: Uint8Array | Hex | string,\n  options: EncodingOptions<TResultValue>,\n): ResultType<TResultValue> {\n  if (options.out === 'hex') {\n    const hexValue = typeof result === 'string' ? result : bytesToHex(result);\n\n    return hexValue.startsWith('0x')\n      ? (hexValue as ResultType<TResultValue>)\n      : (`0x${hexValue}` as ResultType<TResultValue>);\n  }\n  const bytesValue = result instanceof Uint8Array ? result : hexToBytes(result);\n  return bytesValue as ResultType<TResultValue>;\n}\n\n/**\n * Converts a bytes-like value to a hex string.\n * @param bytesLike - The bytes-like value to convert.\n * @returns The hex string representation of the bytes-like value.\n */\nexport const bytesLikeToHex = (bytesLike: BytesLike) => {\n  if (typeof bytesLike === 'string') {\n    return bytesLike;\n  }\n  return bytesToHex(bytesLike);\n};\n\n/**\n * Converts a bytes-like value to a Uint8Array.\n * @param bytesLike - The bytes-like value to convert.\n * @returns The Uint8Array representation of the bytes-like value.\n */\nexport const bytesLikeToBytes = (bytesLike: BytesLike) => {\n  if (typeof bytesLike === 'string') {\n    return hexToBytes(bytesLike);\n  }\n  return bytesLike;\n};\n", "/**\n * Converts a numeric value to a hexadecimal string with zero-padding, without 0x prefix.\n *\n * @param options - The options for the conversion.\n * @param options.value - The numeric value to convert to hex (bigint or number).\n * @param options.size - The size in bytes for the resulting hex string (each byte = 2 hex characters).\n * @returns A hexadecimal string prefixed with zeros to match the specified size.\n * @example\n * ```typescript\n * toHexString({ value: 255, size: 2 }) // Returns \"00ff\"\n * toHexString({ value: 16n, size: 1 }) // Returns \"10\"\n * ```\n */\nexport const toHexString = ({\n  value,\n  size,\n}: {\n  value: bigint | number;\n  size: number;\n}): string => {\n  return value.toString(16).padStart(size * 2, '0');\n};\n", "import {\n  defaultOptions,\n  prepareResult,\n  type EncodingOptions,\n  type ResultValue,\n} from '../returns';\nimport type { Hex } from '../types';\nimport { toHexString } from '../utils';\n\n/**\n * Terms for configuring a ValueLte caveat.\n */\nexport type ValueLteTerms = {\n  /** The maximum value allowed for the transaction as a bigint. */\n  maxValue: bigint;\n};\n\n/**\n * Creates terms for a ValueLte caveat that limits the maximum value of native tokens that can be spent.\n *\n * @param terms - The terms for the ValueLte caveat.\n * @param options - The encoding options for the result.\n * @returns The terms as a 32-byte hex string.\n * @throws Error if the maxValue is negative.\n */\nexport function createValueLteTerms(\n  terms: ValueLteTerms,\n  options?: EncodingOptions<'hex'>,\n): Hex;\nexport function createValueLteTerms(\n  terms: ValueLteTerms,\n  options: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Creates terms for a ValueLte caveat that limits the maximum value of native tokens that can be spent.\n *\n * @param terms - The terms for the ValueLte caveat.\n * @param options - The encoding options for the result.\n * @returns The terms as a 32-byte hex string.\n * @throws Error if the maxValue is negative.\n */\nexport function createValueLteTerms(\n  terms: ValueLteTerms,\n  options: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  const { maxValue } = terms;\n\n  if (maxValue < 0n) {\n    throw new Error('Invalid maxValue: must be greater than or equal to zero');\n  }\n  const hexValue = toHexString({ value: maxValue, size: 32 });\n\n  return prepareResult(hexValue, options);\n}\n", "import {\n  defaultOptions,\n  prepareResult,\n  type EncodingOptions,\n  type ResultValue,\n} from '../returns';\nimport type { Hex } from '../types';\nimport { toHexString } from '../utils';\n\n// Upper bound for timestamps (equivalent to January 1, 10000 CE)\nconst TIMESTAMP_UPPER_BOUND_SECONDS = 253402300799;\n\n/**\n * Terms for configuring a timestamp threshold for delegation usage.\n */\nexport type TimestampTerms = {\n  /** The timestamp (in seconds) after which the delegation can be used. */\n  timestampAfterThreshold: number;\n  /** The timestamp (in seconds) before which the delegation can be used. */\n  timestampBeforeThreshold: number;\n};\n\n/**\n * Creates terms for a Timestamp caveat that enforces time-based constraints on delegation usage.\n *\n * @param terms - The terms for the Timestamp caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 32-byte hex string (16 bytes for each timestamp).\n * @throws Error if the timestamps are invalid.\n */\nexport function createTimestampTerms(\n  terms: TimestampTerms,\n  encodingOptions?: EncodingOptions<'hex'>,\n): Hex;\nexport function createTimestampTerms(\n  terms: TimestampTerms,\n  encodingOptions: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Creates terms for a Timestamp caveat that enforces time-based constraints on delegation usage.\n *\n * @param terms - The terms for the Timestamp caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 32-byte hex string (16 bytes for each timestamp).\n * @throws Error if the timestamps are invalid.\n */\nexport function createTimestampTerms(\n  terms: TimestampTerms,\n  encodingOptions: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  const { timestampAfterThreshold, timestampBeforeThreshold } = terms;\n\n  if (timestampAfterThreshold < 0) {\n    throw new Error(\n      'Invalid timestampAfterThreshold: must be zero or positive',\n    );\n  }\n\n  if (timestampBeforeThreshold < 0) {\n    throw new Error(\n      'Invalid timestampBeforeThreshold: must be zero or positive',\n    );\n  }\n\n  if (timestampBeforeThreshold > TIMESTAMP_UPPER_BOUND_SECONDS) {\n    throw new Error(\n      `Invalid timestampBeforeThreshold: must be less than or equal to ${TIMESTAMP_UPPER_BOUND_SECONDS}`,\n    );\n  }\n\n  if (timestampAfterThreshold > TIMESTAMP_UPPER_BOUND_SECONDS) {\n    throw new Error(\n      `Invalid timestampAfterThreshold: must be less than or equal to ${TIMESTAMP_UPPER_BOUND_SECONDS}`,\n    );\n  }\n\n  if (\n    timestampBeforeThreshold !== 0 &&\n    timestampAfterThreshold >= timestampBeforeThreshold\n  ) {\n    throw new Error(\n      'Invalid thresholds: timestampBeforeThreshold must be greater than timestampAfterThreshold when both are specified',\n    );\n  }\n\n  const afterThresholdHex = toHexString({\n    value: timestampAfterThreshold,\n    size: 16,\n  });\n  const beforeThresholdHex = toHexString({\n    value: timestampBeforeThreshold,\n    size: 16,\n  });\n\n  const hexValue = `0x${afterThresholdHex}${beforeThresholdHex}`;\n\n  return prepareResult(hexValue, encodingOptions);\n}\n", "import {\n  defaultOptions,\n  prepareResult,\n  type EncodingOptions,\n  type ResultValue,\n} from '../returns';\nimport type { Hex } from '../types';\nimport { toHexString } from '../utils';\n\n/**\n * Terms for configuring a periodic transfer allowance of native tokens.\n */\nexport type NativeTokenPeriodTransferTerms = {\n  /** The maximum amount that can be transferred within each period (in wei). */\n  periodAmount: bigint;\n  /** The duration of each period in seconds. */\n  periodDuration: number;\n  /** Unix timestamp when the first period begins. */\n  startDate: number;\n};\n\n/**\n * Creates terms for a NativeTokenPeriodTransfer caveat that validates that native token (ETH) transfers\n * do not exceed a specified amount within a given time period. The transferable amount resets at the\n * beginning of each period, and any unused ETH is forfeited once the period ends.\n *\n * @param terms - The terms for the NativeTokenPeriodTransfer caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 96-byte hex string (32 bytes for each parameter).\n * @throws Error if any of the numeric parameters are invalid.\n */\nexport function createNativeTokenPeriodTransferTerms(\n  terms: NativeTokenPeriodTransferTerms,\n  encodingOptions?: EncodingOptions<'hex'>,\n): Hex;\nexport function createNativeTokenPeriodTransferTerms(\n  terms: NativeTokenPeriodTransferTerms,\n  encodingOptions: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Creates terms for a NativeTokenPeriodTransfer caveat that validates that native token (ETH) transfers\n * do not exceed a specified amount within a given time period.\n *\n * @param terms - The terms for the NativeTokenPeriodTransfer caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 96-byte hex string (32 bytes for each parameter).\n * @throws Error if any of the numeric parameters are invalid.\n */\nexport function createNativeTokenPeriodTransferTerms(\n  terms: NativeTokenPeriodTransferTerms,\n  encodingOptions: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  const { periodAmount, periodDuration, startDate } = terms;\n\n  if (periodAmount <= 0n) {\n    throw new Error('Invalid periodAmount: must be a positive number');\n  }\n\n  if (periodDuration <= 0) {\n    throw new Error('Invalid periodDuration: must be a positive number');\n  }\n\n  if (startDate <= 0) {\n    throw new Error('Invalid startDate: must be a positive number');\n  }\n\n  const periodAmountHex = toHexString({ value: periodAmount, size: 32 });\n  const periodDurationHex = toHexString({ value: periodDuration, size: 32 });\n  const startDateHex = toHexString({ value: startDate, size: 32 });\n\n  const hexValue = `0x${periodAmountHex}${periodDurationHex}${startDateHex}`;\n\n  return prepareResult(hexValue, encodingOptions);\n}\n", "import type { BytesLike } from '@metamask/utils';\n\nimport {\n  defaultOptions,\n  prepareResult,\n  type EncodingOptions,\n  type ResultValue,\n} from '../returns';\nimport type { Hex } from '../types';\n\n/**\n * Terms for configuring an ExactCalldata caveat.\n */\nexport type ExactCalldataTerms = {\n  /** The expected calldata to match against. */\n  calldata: BytesLike;\n};\n\n/**\n * Creates terms for an ExactCalldata caveat that ensures the provided execution calldata\n * matches exactly the expected calldata.\n *\n * @param terms - The terms for the ExactCalldata caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as the calldata itself.\n * @throws Error if the `calldata` is invalid.\n */\nexport function createExactCalldataTerms(\n  terms: ExactCalldataTerms,\n  encodingOptions?: EncodingOptions<'hex'>,\n): Hex;\nexport function createExactCalldataTerms(\n  terms: ExactCalldataTerms,\n  encodingOptions: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Creates terms for an ExactCalldata caveat that ensures the provided execution calldata\n * matches exactly the expected calldata.\n * @param terms - The terms for the ExactCalldata caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as the calldata itself.\n * @throws Error if the `calldata` is invalid.\n */\nexport function createExactCalldataTerms(\n  terms: ExactCalldataTerms,\n  encodingOptions: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  const { calldata } = terms;\n\n  if (typeof calldata === 'string' && !calldata.startsWith('0x')) {\n    throw new Error('Invalid calldata: must be a hex string starting with 0x');\n  }\n\n  // For exact calldata, the terms are simply the expected calldata\n  return prepareResult(calldata, encodingOptions);\n}\n", "import {\n  defaultOptions,\n  prepareResult,\n  type EncodingOptions,\n  type ResultValue,\n} from '../returns';\nimport type { Hex } from '../types';\nimport { toHexString } from '../utils';\n\n// Upper bound for timestamps (January 1, 10000 CE)\nconst TIMESTAMP_UPPER_BOUND_SECONDS = 253402300799;\n\n/**\n * Terms for configuring a linear streaming allowance of native tokens.\n */\nexport type NativeTokenStreamingTerms = {\n  /** The initial amount available immediately (in wei). */\n  initialAmount: bigint;\n  /** The maximum total amount that can be transferred (in wei). */\n  maxAmount: bigint;\n  /** The rate at which allowance increases per second (in wei). */\n  amountPerSecond: bigint;\n  /** Unix timestamp when streaming begins. */\n  startTime: number;\n};\n\n/**\n * Creates terms for the NativeTokenStreaming caveat, configuring a linear\n * streaming allowance of native tokens.\n *\n * @param terms - The terms for the NativeTokenStreaming caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns Hex-encoded terms for the caveat (128 bytes).\n * @throws Error if initialAmount is negative.\n * @throws Error if maxAmount is not positive.\n * @throws Error if maxAmount is less than initialAmount.\n * @throws Error if amountPerSecond is not positive.\n * @throws Error if startTime is not positive.\n * @throws Error if startTime exceeds upper bound.\n */\nexport function createNativeTokenStreamingTerms(\n  terms: NativeTokenStreamingTerms,\n  encodingOptions?: EncodingOptions<'hex'>,\n): Hex;\nexport function createNativeTokenStreamingTerms(\n  terms: NativeTokenStreamingTerms,\n  encodingOptions: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Creates terms for the NativeTokenStreaming caveat, configuring a linear\n * streaming allowance of native tokens.\n *\n * @param terms - The terms for the NativeTokenStreaming caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 128-byte hex string.\n * @throws Error if any of the numeric parameters are invalid.\n */\nexport function createNativeTokenStreamingTerms(\n  terms: NativeTokenStreamingTerms,\n  encodingOptions: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  const { initialAmount, maxAmount, amountPerSecond, startTime } = terms;\n\n  if (initialAmount < 0n) {\n    throw new Error('Invalid initialAmount: must be greater than zero');\n  }\n\n  if (maxAmount <= 0n) {\n    throw new Error('Invalid maxAmount: must be a positive number');\n  }\n\n  if (maxAmount < initialAmount) {\n    throw new Error('Invalid maxAmount: must be greater than initialAmount');\n  }\n\n  if (amountPerSecond <= 0n) {\n    throw new Error('Invalid amountPerSecond: must be a positive number');\n  }\n\n  if (startTime <= 0) {\n    throw new Error('Invalid startTime: must be a positive number');\n  }\n\n  if (startTime > TIMESTAMP_UPPER_BOUND_SECONDS) {\n    throw new Error(\n      'Invalid startTime: must be less than or equal to 253402300799',\n    );\n  }\n\n  const initialAmountHex = toHexString({ value: initialAmount, size: 32 });\n  const maxAmountHex = toHexString({ value: maxAmount, size: 32 });\n  const amountPerSecondHex = toHexString({ value: amountPerSecond, size: 32 });\n  const startTimeHex = toHexString({ value: startTime, size: 32 });\n\n  const hexValue = `0x${initialAmountHex}${maxAmountHex}${amountPerSecondHex}${startTimeHex}`;\n\n  return prepareResult(hexValue, encodingOptions);\n}\n", "import { type BytesLike, bytesToHex, isHexString } from '@metamask/utils';\n\nimport {\n  defaultOptions,\n  prepareResult,\n  type EncodingOptions,\n  type ResultValue,\n} from '../returns';\nimport type { Hex } from '../types';\nimport { toHexString } from '../utils';\n\n// Upper bound for timestamps (January 1, 10000 CE)\nconst TIMESTAMP_UPPER_BOUND_SECONDS = 253402300799;\n\n/**\n * Terms for configuring a linear streaming allowance of ERC20 tokens.\n */\nexport type ERC20StreamingTerms = {\n  /** The address of the ERC20 token contract. */\n  tokenAddress: BytesLike;\n  /** The initial amount available immediately. */\n  initialAmount: bigint;\n  /** The maximum total amount that can be transferred. */\n  maxAmount: bigint;\n  /** The rate at which allowance increases per second. */\n  amountPerSecond: bigint;\n  /** Unix timestamp when streaming begins. */\n  startTime: number;\n};\n\n/**\n * Creates terms for the ERC20Streaming caveat, configuring a linear\n * streaming allowance of ERC20 tokens.\n *\n * @param terms - The terms for the ERC20Streaming caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns Hex-encoded terms for the caveat (160 bytes).\n * @throws Error if tokenAddress is invalid.\n * @throws Error if initialAmount is negative.\n * @throws Error if maxAmount is not positive.\n * @throws Error if maxAmount is less than initialAmount.\n * @throws Error if amountPerSecond is not positive.\n * @throws Error if startTime is not positive.\n * @throws Error if startTime exceeds upper bound.\n */\nexport function createERC20StreamingTerms(\n  terms: ERC20StreamingTerms,\n  encodingOptions?: EncodingOptions<'hex'>,\n): Hex;\nexport function createERC20StreamingTerms(\n  terms: ERC20StreamingTerms,\n  encodingOptions: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Creates terms for the ERC20Streaming caveat, configuring a linear\n * streaming allowance of ERC20 tokens.\n *\n * @param terms - The terms for the ERC20Streaming caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 160-byte hex string.\n * @throws Error if any of the parameters are invalid.\n */\nexport function createERC20StreamingTerms(\n  terms: ERC20StreamingTerms,\n  encodingOptions: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  const { tokenAddress, initialAmount, maxAmount, amountPerSecond, startTime } =\n    terms;\n\n  if (!tokenAddress) {\n    throw new Error('Invalid tokenAddress: must be a valid address');\n  }\n\n  let prefixedTokenAddressHex: string;\n\n  if (typeof tokenAddress === 'string') {\n    if (!isHexString(tokenAddress) || tokenAddress.length !== 42) {\n      throw new Error('Invalid tokenAddress: must be a valid address');\n    }\n    prefixedTokenAddressHex = tokenAddress;\n  } else {\n    if (tokenAddress.length !== 20) {\n      throw new Error('Invalid tokenAddress: must be a valid address');\n    }\n    prefixedTokenAddressHex = bytesToHex(tokenAddress);\n  }\n\n  if (initialAmount < 0n) {\n    throw new Error('Invalid initialAmount: must be greater than zero');\n  }\n\n  if (maxAmount <= 0n) {\n    throw new Error('Invalid maxAmount: must be a positive number');\n  }\n\n  if (maxAmount < initialAmount) {\n    throw new Error('Invalid maxAmount: must be greater than initialAmount');\n  }\n\n  if (amountPerSecond <= 0n) {\n    throw new Error('Invalid amountPerSecond: must be a positive number');\n  }\n\n  if (startTime <= 0) {\n    throw new Error('Invalid startTime: must be a positive number');\n  }\n\n  if (startTime > TIMESTAMP_UPPER_BOUND_SECONDS) {\n    throw new Error(\n      'Invalid startTime: must be less than or equal to 253402300799',\n    );\n  }\n\n  const initialAmountHex = toHexString({ value: initialAmount, size: 32 });\n  const maxAmountHex = toHexString({ value: maxAmount, size: 32 });\n  const amountPerSecondHex = toHexString({ value: amountPerSecond, size: 32 });\n  const startTimeHex = toHexString({ value: startTime, size: 32 });\n\n  const hexValue = `${prefixedTokenAddressHex}${initialAmountHex}${maxAmountHex}${amountPerSecondHex}${startTimeHex}`;\n\n  return prepareResult(hexValue, encodingOptions);\n}\n", "import { type BytesLike, isHexString, bytesToHex } from '@metamask/utils';\n\nimport {\n  defaultOptions,\n  prepareResult,\n  type EncodingOptions,\n  type ResultValue,\n} from '../returns';\nimport type { Hex } from '../types';\nimport { toHexString } from '../utils';\n\n/**\n * Terms for configuring a periodic transfer allowance of ERC20 tokens.\n */\nexport type ERC20TokenPeriodTransferTerms = {\n  /** The address of the ERC20 token. */\n  tokenAddress: BytesLike;\n  /** The maximum amount that can be transferred within each period. */\n  periodAmount: bigint;\n  /** The duration of each period in seconds. */\n  periodDuration: number;\n  /** Unix timestamp when the first period begins. */\n  startDate: number;\n};\n\n/**\n * Creates terms for an ERC20TokenPeriodTransfer caveat that validates that ERC20 token transfers\n * do not exceed a specified amount within a given time period. The transferable amount resets at the\n * beginning of each period, and any unused tokens are forfeited once the period ends.\n *\n * @param terms - The terms for the ERC20TokenPeriodTransfer caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 128-byte hex string (32 bytes for each parameter).\n * @throws Error if any of the numeric parameters are invalid.\n */\nexport function createERC20TokenPeriodTransferTerms(\n  terms: ERC20TokenPeriodTransferTerms,\n  encodingOptions?: EncodingOptions<'hex'>,\n): Hex;\nexport function createERC20TokenPeriodTransferTerms(\n  terms: ERC20TokenPeriodTransferTerms,\n  encodingOptions: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Creates terms for an ERC20TokenPeriodTransfer caveat that validates that ERC20 token transfers\n * do not exceed a specified amount within a given time period.\n *\n * @param terms - The terms for the ERC20TokenPeriodTransfer caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 128-byte hex string (32 bytes for each parameter).\n * @throws Error if any of the numeric parameters are invalid.\n */\nexport function createERC20TokenPeriodTransferTerms(\n  terms: ERC20TokenPeriodTransferTerms,\n  encodingOptions: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  const { tokenAddress, periodAmount, periodDuration, startDate } = terms;\n\n  if (!tokenAddress) {\n    throw new Error('Invalid tokenAddress: must be a valid address');\n  }\n\n  let prefixedTokenAddressHex: string;\n\n  if (typeof tokenAddress === 'string') {\n    if (!isHexString(tokenAddress) || tokenAddress.length !== 42) {\n      throw new Error('Invalid tokenAddress: must be a valid address');\n    }\n    prefixedTokenAddressHex = tokenAddress;\n  } else {\n    if (tokenAddress.length !== 20) {\n      throw new Error('Invalid tokenAddress: must be a valid address');\n    }\n    prefixedTokenAddressHex = bytesToHex(tokenAddress);\n  }\n\n  if (periodAmount <= 0n) {\n    throw new Error('Invalid periodAmount: must be a positive number');\n  }\n\n  if (periodDuration <= 0) {\n    throw new Error('Invalid periodDuration: must be a positive number');\n  }\n\n  if (startDate <= 0) {\n    throw new Error('Invalid startDate: must be a positive number');\n  }\n\n  const periodAmountHex = toHexString({ value: periodAmount, size: 32 });\n  const periodDurationHex = toHexString({ value: periodDuration, size: 32 });\n  const startDateHex = toHexString({ value: startDate, size: 32 });\n\n  const hexValue = `${prefixedTokenAddressHex}${periodAmountHex}${periodDurationHex}${startDateHex}`;\n\n  return prepareResult(hexValue, encodingOptions);\n}\n", "import { isHexString } from '@metamask/utils';\nimport type { BytesLike } from '@metamask/utils';\n\nimport {\n  bytesLikeToHex,\n  defaultOptions,\n  prepareResult,\n  type EncodingOptions,\n  type ResultValue,\n} from '../returns';\nimport type { Hex } from '../types';\n\n// char length of 32 byte hex string (including 0x prefix)\nconst MAX_NONCE_STRING_LENGTH = 66;\n\n/**\n * Terms for configuring a Nonce caveat.\n */\nexport type NonceTerms = {\n  /** The nonce as BytesLike (0x-prefixed hex string or Uint8Array) to allow bulk revocation of delegations. */\n  nonce: BytesLike;\n};\n\n/**\n * Creates terms for a Nonce caveat that uses a nonce value for bulk revocation of delegations.\n *\n * @param terms - The terms for the Nonce caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 32-byte hex string.\n * @throws Error if the nonce is invalid.\n */\nexport function createNonceTerms(\n  terms: NonceTerms,\n  encodingOptions?: EncodingOptions<'hex'>,\n): Hex;\nexport function createNonceTerms(\n  terms: NonceTerms,\n  encodingOptions: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Creates terms for a Nonce caveat that uses a nonce value for bulk revocation of delegations.\n *\n * @param terms - The terms for the Nonce caveat.\n * @param encodingOptions - The encoding options for the result.\n * @returns The terms as a 32-byte padded value in the specified encoding format.\n * @throws Error if the nonce is invalid or empty.\n */\nexport function createNonceTerms(\n  terms: NonceTerms,\n  encodingOptions: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  const { nonce } = terms;\n\n  // Handle zero-length Uint8Array specifically\n  if (nonce instanceof Uint8Array && nonce.length === 0) {\n    throw new Error('Invalid nonce: Uint8Array must not be empty');\n  }\n\n  // Validate that strings have 0x prefix (as required by BytesLike)\n  if (typeof nonce === 'string' && !nonce.startsWith('0x')) {\n    throw new Error('Invalid nonce: string must have 0x prefix');\n  }\n\n  // Convert to hex string for consistent processing\n  const hexNonce = bytesLikeToHex(nonce);\n\n  // Check for empty hex string (0x) first - more specific error\n  if (hexNonce === '0x') {\n    throw new Error('Invalid nonce: must not be empty');\n  }\n\n  if (!isHexString(hexNonce)) {\n    throw new Error('Invalid nonce: must be a valid BytesLike value');\n  }\n\n  if (hexNonce.length > MAX_NONCE_STRING_LENGTH) {\n    throw new Error('Invalid nonce: must be 32 bytes or less in length');\n  }\n\n  // Remove '0x' prefix for padding, then add it back\n  const nonceWithoutPrefix = hexNonce.slice(2);\n  const paddedNonce = nonceWithoutPrefix.padStart(64, '0'); // 64 hex chars = 32 bytes\n  const hexValue = `0x${paddedNonce}`;\n\n  return prepareResult(hexValue, encodingOptions);\n}\n", "import { encode, encodeSingle, decodeSingle } from '@metamask/abi-utils';\nimport { hexToBytes, type BytesLike } from '@metamask/utils';\nimport { keccak_256 as keccak256 } from '@noble/hashes/sha3';\n\nimport {\n  bytesLikeToBytes,\n  bytesLikeToHex,\n  defaultOptions,\n  prepareResult,\n  type EncodingOptions,\n  type ResultValue,\n} from './returns';\nimport type { CaveatStruct, DelegationStruct, Hex } from './types';\n\n/**\n * When designated as the delegate address in a delegation, this allows any beneficiary to redeem the delegation.\n */\nexport const ANY_BENEFICIARY = '0x0000000000000000000000000000000000000a11';\n\n/**\n * To be used on a delegation as the root authority.\n */\nexport const ROOT_AUTHORITY =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\n/**\n * The typehash for a delegation, used when generating a delegation hash.\n *\n * keccak('Delegation(address delegate,address delegator,bytes32 authority,Caveat[] caveats,uint256 salt)Caveat(address enforcer,bytes terms)')\n */\nexport const DELEGATION_TYPEHASH =\n  '0x88c1d2ecf185adf710588203a5f263f0ff61be0d33da39792cde19ba9aa4331e';\n\n/**\n * The typehash for a caveat, used when generating a caveat hash.\n *\n * keccak('Caveat(address enforcer,bytes terms)')\n */\nexport const CAVEAT_TYPEHASH =\n  '0x80ad7e1b04ee6d994a125f4714ca0720908bd80ed16063ec8aee4b88e9253e2d';\n\n/**\n * The ABI types for an array of delegations.\n */\nconst DELEGATION_ARRAY_ABI_TYPES =\n  '(address,address,bytes32,(address,bytes,bytes)[],uint256,bytes)[]' as const;\n\n/**\n * Encodes an array of delegations into a permission context.\n * @param delegations - The delegations to encode.\n * @param options - Encoding options. Defaults to { out: 'hex' }.\n * @returns The encoded delegations as a hex string (default) or Uint8Array.\n */\nexport function encodeDelegations(\n  delegations: DelegationStruct[],\n  options?: EncodingOptions<'hex'>,\n): Hex;\nexport function encodeDelegations(\n  delegations: DelegationStruct[],\n  options: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Encodes an array of delegations into a permission context.\n * @param delegations - The delegations to encode.\n * @param options - Encoding options. Defaults to { out: 'hex' }.\n * @returns The encoded delegations as a hex string (default) or Uint8Array.\n */\nexport function encodeDelegations(\n  delegations: DelegationStruct[],\n  options: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  let result: Uint8Array;\n\n  if (delegations.length === 0) {\n    // short circuit for empty delegations, derived from\n    // `encode(['(address,address,bytes32,(address,bytes,bytes)[],uint256,bytes)[]'],[[]],);`\n    result = new Uint8Array(64);\n    result[31] = 0x20;\n  } else {\n    const encodableStructs = delegations.map((struct) => [\n      struct.delegate,\n      struct.delegator,\n      struct.authority,\n      struct.caveats.map((caveat) => [\n        caveat.enforcer,\n        caveat.terms,\n        caveat.args,\n      ]),\n      struct.salt,\n      struct.signature,\n    ]);\n\n    result = encodeSingle(DELEGATION_ARRAY_ABI_TYPES, encodableStructs);\n  }\n\n  return prepareResult(result, options);\n}\n\n/**\n * Converts a decoded delegation struct to a delegation object using the provided conversion function.\n * @param decodedDelegation - The decoded delegation struct as a tuple.\n * @param convertFn - Function to convert BytesLike values to the desired output type.\n * @returns A delegation object with all bytes-like values converted using the provided function.\n */\nconst delegationFromDecodedDelegation = <TEncoding extends BytesLike>(\n  decodedDelegation: DecodedDelegation,\n  convertFn: (value: BytesLike) => TEncoding,\n): DelegationStruct<TEncoding> => {\n  const [delegate, delegator, authority, caveats, salt, signature] =\n    decodedDelegation;\n\n  return {\n    delegate: convertFn(delegate),\n    delegator: convertFn(delegator),\n    authority: convertFn(authority),\n    caveats: caveats.map(([enforcer, terms, args]) => ({\n      enforcer: convertFn(enforcer),\n      terms: convertFn(terms),\n      args: convertFn(args),\n    })),\n    salt,\n    signature: convertFn(signature),\n  };\n};\n\n/**\n * Represents a decoded delegation as a tuple structure.\n * This type defines the structure of a delegation after it has been decoded from\n * an encoded format.\n */\ntype DecodedDelegation = [\n  BytesLike,\n  BytesLike,\n  BytesLike,\n  [BytesLike, BytesLike, BytesLike][],\n  bigint,\n  BytesLike,\n];\n\n/**\n * Decodes an encoded permission context back into an array of delegations.\n * @param encoded - The encoded delegations as a hex string or Uint8Array.\n * @param options - Encoding options. Defaults to { out: 'hex' }.\n * @returns The decoded delegations array with types resolved based on options.\n */\nexport function decodeDelegations(\n  encoded: BytesLike,\n  options?: EncodingOptions<'hex'>,\n): DelegationStruct<Hex>[];\nexport function decodeDelegations(\n  encoded: BytesLike,\n  options: EncodingOptions<'bytes'>,\n): DelegationStruct<Uint8Array>[];\n/**\n * Decodes an encoded permission context back into an array of delegations.\n * @param encoded - The encoded delegations as a hex string or Uint8Array.\n * @param options - Encoding options. Defaults to { out: 'hex' }.\n * @returns The decoded delegations array with types resolved based on options.\n */\nexport function decodeDelegations(\n  encoded: BytesLike,\n  options: EncodingOptions<ResultValue> = defaultOptions,\n): DelegationStruct<Hex>[] | DelegationStruct<Uint8Array>[] {\n  // it's possible to short circuit for empty delegations, but due to the\n  // complexity of the input type, and the relative infrequency of empty delegations,\n  // it's not worthwhile.\n\n  const decodedStructs = decodeSingle(\n    DELEGATION_ARRAY_ABI_TYPES,\n    encoded,\n    // return types cannot be inferred from complex ABI types, so we must assert the type\n  ) as DecodedDelegation[];\n\n  if (options.out === 'bytes') {\n    return decodedStructs.map((struct) =>\n      delegationFromDecodedDelegation(struct, bytesLikeToBytes),\n    );\n  }\n  return decodedStructs.map((struct) =>\n    delegationFromDecodedDelegation(struct, bytesLikeToHex),\n  );\n}\n\n/**\n * Calculates the hash of a delegation for signing purposes.\n * The hash is computed by encoding the delegation parameters with the delegation typehash\n * and then applying keccak256 hashing.\n *\n * @param delegation - The delegation to hash.\n * @param options - Encoding options. Defaults to { out: 'hex' }.\n * @returns The keccak256 hash of the encoded delegation as a hex string (default) or Uint8Array.\n */\nexport function hashDelegation(\n  delegation: DelegationStruct,\n  options?: EncodingOptions<'hex'>,\n): Hex;\nexport function hashDelegation(\n  delegation: DelegationStruct,\n  options: EncodingOptions<'bytes'>,\n): Uint8Array;\n/**\n * Calculates the hash of a delegation for signing purposes.\n * The hash is computed by encoding the delegation parameters with the delegation typehash\n * and then applying keccak256 hashing.\n *\n * @param delegation - The delegation to hash.\n * @param options - Encoding options. Defaults to { out: 'hex' }.\n * @returns The keccak256 hash of the encoded delegation as a hex string (default) or Uint8Array.\n */\nexport function hashDelegation(\n  delegation: DelegationStruct,\n  options: EncodingOptions<ResultValue> = defaultOptions,\n): Hex | Uint8Array {\n  const encoded = encode(\n    ['bytes32', 'address', 'address', 'bytes32', 'bytes32', 'uint256'],\n    [\n      DELEGATION_TYPEHASH,\n      delegation.delegate,\n      delegation.delegator,\n      delegation.authority,\n      getCaveatsArrayHash(delegation.caveats),\n      delegation.salt,\n    ],\n  );\n  const hash = keccak256(encoded);\n  return prepareResult(hash, options);\n}\n\n/**\n * Calculates the hash of an array of caveats. The caveats are individually abi\n * encoded and hashed, and concatenated. The resulting byte array is then\n * hashed to produce the CaveatsArrayHash.\n *\n * @param caveats - The array of caveats to hash.\n * @returns The keccak256 hash of the encoded caveat array.\n */\nfunction getCaveatsArrayHash(caveats: CaveatStruct[]): Uint8Array {\n  const byteLength = 32 * caveats.length;\n  const encoded = new Uint8Array(byteLength);\n\n  for (let i = 0; i < caveats.length; i++) {\n    const caveat = caveats[i];\n    if (!caveat) {\n      throw new Error(`Caveat was undefined at index ${i}`);\n    }\n    const caveatHash = getCaveatHash(caveat);\n    encoded.set(caveatHash, i * 32);\n  }\n\n  return keccak256(encoded);\n}\n\n/**\n * Calculates the hash of a single caveat.\n * @param caveat - The caveat to hash.\n * @returns The keccak256 hash of the encoded caveat.\n */\nfunction getCaveatHash(caveat: CaveatStruct): Uint8Array {\n  const termsBytes =\n    typeof caveat.terms === 'string' ? hexToBytes(caveat.terms) : caveat.terms;\n\n  const termsHash = keccak256(termsBytes);\n\n  const encoded = encode(\n    ['bytes32', 'address', 'bytes32'],\n    [CAVEAT_TYPEHASH, caveat.enforcer, termsHash],\n  );\n  const hash = keccak256(encoded);\n  return hash;\n}\n", "import type { Caveat, DeleGatorEnvironment } from '../types';\n\ntype CaveatWithOptionalArgs = Omit<Caveat, 'args'> & {\n  args?: Caveat['args'];\n};\n\nconst INSECURE_UNRESTRICTED_DELEGATION_ERROR_MESSAGE =\n  'No caveats found. If you definitely want to create an empty caveat collection, set `allowInsecureUnrestrictedDelegation` to `true`.';\n\ntype CaveatBuilderMap = {\n  [key: string]: (\n    environment: DeleGatorEnvironment,\n    ...args: [...any]\n  ) => Caveat;\n};\n\nexport type CaveatBuilderConfig = {\n  allowInsecureUnrestrictedDelegation?: boolean;\n};\n\n/**\n * A builder class for creating and managing caveats.\n * @template TCaveatBuilderMap - The type map of available caveat builder functions.\n */\nexport class CaveatBuilder<\n  TCaveatBuilderMap extends CaveatBuilderMap = Record<string, never>,\n> {\n  #results: Caveat[] = [];\n\n  #hasBeenBuilt = false;\n\n  #environment: DeleGatorEnvironment;\n\n  #config: CaveatBuilderConfig;\n\n  #enforcerBuilders: TCaveatBuilderMap;\n\n  constructor(\n    environment: DeleGatorEnvironment,\n    config: CaveatBuilderConfig = {},\n    enforcerBuilders: TCaveatBuilderMap = {} as TCaveatBuilderMap,\n    builtCaveats: Caveat[] = [],\n  ) {\n    this.#environment = environment;\n    this.#config = config;\n    this.#enforcerBuilders = enforcerBuilders;\n    this.#results = builtCaveats;\n  }\n\n  /**\n   * Extends the CaveatBuilder with a new enforcer function.\n   * @template TEnforcerName - The name of the enforcer.\n   * @template TFunction - The type of the enforcer function.\n   * @param name - The name of the enforcer.\n   * @param fn - The enforcer function.\n   * @returns The extended CaveatBuilder instance.\n   */\n  extend<\n    TEnforcerName extends string,\n    TFunction extends (\n      environment: DeleGatorEnvironment,\n      config: any,\n    ) => Caveat,\n  >(\n    name: TEnforcerName,\n    fn: TFunction,\n  ): CaveatBuilder<TCaveatBuilderMap & Record<TEnforcerName, TFunction>> {\n    return new CaveatBuilder<\n      TCaveatBuilderMap & Record<TEnforcerName, TFunction>\n    >(\n      this.#environment,\n      this.#config,\n      { ...this.#enforcerBuilders, [name]: fn },\n      this.#results,\n    );\n  }\n\n  /**\n   * Adds a caveat directly using a Caveat object.\n   * @param caveat - The caveat to add.\n   * @returns The CaveatBuilder instance for chaining.\n   */\n  addCaveat(caveat: CaveatWithOptionalArgs): CaveatBuilder<TCaveatBuilderMap>;\n\n  /**\n   * Adds a caveat using a named enforcer function.\n   * @param name - The name of the enforcer function to use.\n   * @param config - The configuration to pass to the enforcer function.\n   * @returns The CaveatBuilder instance for chaining.\n   */\n  addCaveat<TEnforcerName extends keyof TCaveatBuilderMap>(\n    name: TEnforcerName,\n    config: Parameters<TCaveatBuilderMap[TEnforcerName]>[1],\n  ): CaveatBuilder<TCaveatBuilderMap>;\n\n  addCaveat<TEnforcerName extends keyof TCaveatBuilderMap>(\n    nameOrCaveat: TEnforcerName | CaveatWithOptionalArgs,\n    config?: Parameters<TCaveatBuilderMap[TEnforcerName]>[1],\n  ): CaveatBuilder<TCaveatBuilderMap> {\n    if (typeof nameOrCaveat === 'object') {\n      const caveat = {\n        args: '0x' as const,\n        ...nameOrCaveat,\n      };\n\n      this.#results = [...this.#results, caveat];\n\n      return this;\n    }\n    const name = nameOrCaveat;\n\n    const func = this.#enforcerBuilders[name];\n    if (typeof func === 'function') {\n      const result = func(this.#environment, config);\n\n      this.#results = [...this.#results, result];\n\n      return this;\n    }\n    throw new Error(`Function \"${String(name)}\" does not exist.`);\n  }\n\n  /**\n   * Returns the caveats that have been built using this CaveatBuilder.\n   * @returns The array of built caveats.\n   * @throws Error if the builder has already been built or if no caveats are found and empty caveats are not allowed.\n   */\n  build(): Caveat[] {\n    if (this.#hasBeenBuilt) {\n      throw new Error('This CaveatBuilder has already been built.');\n    }\n\n    if (\n      this.#results.length === 0 &&\n      !this.#config.allowInsecureUnrestrictedDelegation\n    ) {\n      throw new Error(INSECURE_UNRESTRICTED_DELEGATION_ERROR_MESSAGE);\n    }\n\n    this.#hasBeenBuilt = true;\n\n    return this.#results;\n  }\n}\n", "import type { DeleGatorEnvironment } from 'src/types';\n\nexport enum BalanceChangeType {\n  Increase = 0x0,\n  Decrease = 0x1,\n}\n\nexport type UnitOfAuthorityBaseConfig = { environment: DeleGatorEnvironment };\n", "import { type Hex, concat, isHex, toHex } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport const allowedCalldata = 'allowedCalldata';\n\nexport type AllowedCalldataBuilderConfig = {\n  /**\n   * The index in the calldata byte array (including the 4-byte method selector)\n   * where the expected calldata starts.\n   */\n  startIndex: number;\n  /**\n   * The expected calldata as a hex string that must match at the specified index.\n   */\n  value: Hex;\n};\n\n/**\n * Builds a caveat struct for AllowedCalldataEnforcer that restricts calldata to a specific value at a given index.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing startIndex and value.\n * @returns The Caveat.\n * @throws Error if the value is not a valid hex string, if startIndex is negative, or if startIndex is not a whole number.\n */\nexport const allowedCalldataBuilder = (\n  environment: DeleGatorEnvironment,\n  config: AllowedCalldataBuilderConfig,\n): Caveat => {\n  const { startIndex, value } = config;\n\n  if (!isHex(value)) {\n    throw new Error('Invalid value: must be a valid hex string');\n  }\n\n  if (startIndex < 0) {\n    throw new Error('Invalid startIndex: must be zero or positive');\n  }\n\n  if (!Number.isInteger(startIndex)) {\n    throw new Error('Invalid startIndex: must be a whole number');\n  }\n\n  const startIndexHex = toHex(startIndex, { size: 32 });\n\n  const terms = concat([startIndexHex, value]);\n\n  const {\n    caveatEnforcers: { AllowedCalldataEnforcer },\n  } = environment;\n\n  if (!AllowedCalldataEnforcer) {\n    throw new Error('AllowedCalldataEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: AllowedCalldataEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { isHex, concat, toFunctionSelector } from 'viem';\nimport type { AbiFunction, Hex } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const allowedMethods = 'allowedMethods';\n\nexport type MethodSelector = Hex | string | AbiFunction;\n\n// length of function selector in chars, _including_ 0x prefix\nconst FUNCTION_SELECTOR_STRING_LENGTH = 10;\n\nexport type AllowedMethodsBuilderConfig = {\n  /**\n   * An array of method selectors that the delegate is allowed to call.\n   * Can be 4-byte hex strings, ABI function signatures, or ABIFunction objects.\n   */\n  selectors: MethodSelector[];\n};\n\n/**\n * Builds a caveat struct for the AllowedMethodsEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing the allowed function selectors.\n * @returns The Caveat.\n * @throws Error if no selectors are provided or if any selector is invalid.\n */\nexport const allowedMethodsBuilder = (\n  environment: DeleGatorEnvironment,\n  config: AllowedMethodsBuilderConfig,\n): Caveat => {\n  const { selectors } = config;\n\n  if (selectors.length === 0) {\n    throw new Error('Invalid selectors: must provide at least one selector');\n  }\n\n  const parsedSelectors = selectors.map(parseSelector);\n\n  const terms = concat(parsedSelectors);\n\n  const {\n    caveatEnforcers: { AllowedMethodsEnforcer },\n  } = environment;\n\n  if (!AllowedMethodsEnforcer) {\n    throw new Error('AllowedMethodsEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: AllowedMethodsEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n\n/**\n * Parses a method selector into a hex string.\n * @param selector - The method selector to parse.\n * @returns The parsed selector as a hex string.\n */\nfunction parseSelector(selector: MethodSelector) {\n  if (isHex(selector)) {\n    if (selector.length === FUNCTION_SELECTOR_STRING_LENGTH) {\n      return selector;\n    }\n    throw new Error(\n      'Invalid selector: must be a 4 byte hex string, abi function signature, or AbiFunction',\n    );\n  }\n\n  try {\n    return toFunctionSelector(selector);\n  } catch (rootError: any) {\n    throw new Error(\n      'Invalid selector: must be a 4 byte hex string, abi function signature, or AbiFunction',\n      { cause: rootError },\n    );\n  }\n}\n", "import { concat, isAddress, type Address } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const allowedTargets = 'allowedTargets';\n\nexport type AllowedTargetsBuilderConfig = {\n  /**\n   * An array of addresses that the delegate is allowed to call.\n   * Each address must be a valid hex string.\n   */\n  targets: Address[];\n};\n\n/**\n * Builds a caveat struct for AllowedTargetsEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing the targets.\n * @returns The Caveat.\n * @throws Error if no targets are provided or if any of the addresses are invalid.\n */\nexport const allowedTargetsBuilder = (\n  environment: DeleGatorEnvironment,\n  config: AllowedTargetsBuilderConfig,\n): Caveat => {\n  const { targets } = config;\n\n  if (targets.length === 0) {\n    throw new Error(\n      'Invalid targets: must provide at least one target address',\n    );\n  }\n\n  // we check that the address is valid, but doesn't need to be checksummed\n  const invalidAddresses = targets.filter(\n    (target) => !isAddress(target, { strict: false }),\n  );\n\n  if (invalidAddresses.length > 0) {\n    throw new Error('Invalid targets: must be valid addresses');\n  }\n\n  const terms = concat(targets);\n\n  const {\n    caveatEnforcers: { AllowedTargetsEnforcer },\n  } = environment;\n\n  if (!AllowedTargetsEnforcer) {\n    throw new Error('AllowedTargetsEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: AllowedTargetsEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Hex, isHex } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport const argsEqualityCheck = 'argsEqualityCheck';\n\nexport type ArgsEqualityCheckBuilderConfig = {\n  /**\n   * The expected args as a hex string that must match exactly when redeeming the delegation.\n   */\n  args: Hex;\n};\n\n/**\n * Builds a caveat struct for the ArgsEqualityCheckEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the builder.\n * @returns The Caveat.\n * @throws Error if the config is invalid.\n */\nexport const argsEqualityCheckBuilder = (\n  environment: DeleGatorEnvironment,\n  config: ArgsEqualityCheckBuilderConfig,\n): Caveat => {\n  const { args } = config;\n  if (!isHex(args)) {\n    throw new Error('Invalid config: args must be a valid hex string');\n  }\n\n  const {\n    caveatEnforcers: { ArgsEqualityCheckEnforcer },\n  } = environment;\n\n  if (!ArgsEqualityCheckEnforcer) {\n    throw new Error('ArgsEqualityCheckEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ArgsEqualityCheckEnforcer,\n    terms: args,\n    args: '0x',\n  };\n};\n", "import { concat, toHex } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport const blockNumber = 'blockNumber';\n\nexport type BlockNumberBuilderConfig = {\n  /**\n   * The block number after which the delegation is valid.\n   * Set to 0n to disable this threshold.\n   */\n  afterThreshold: bigint;\n  /**\n   * The block number before which the delegation is valid.\n   * Set to 0n to disable this threshold.\n   */\n  beforeThreshold: bigint;\n};\n\n/**\n * Builds a caveat struct for the BlockNumberEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the BlockNumberEnforcer.\n * @returns The Caveat.\n * @throws Error if both thresholds are zero, if blockAfterThreshold is greater than or equal to blockBeforeThreshold, or if BlockNumberEnforcer is not available in the environment.\n */\nexport const blockNumberBuilder = (\n  environment: DeleGatorEnvironment,\n  config: BlockNumberBuilderConfig,\n): Caveat => {\n  const { afterThreshold, beforeThreshold } = config;\n\n  if (afterThreshold === 0n && beforeThreshold === 0n) {\n    throw new Error(\n      'Invalid thresholds: At least one of afterThreshold or beforeThreshold must be specified',\n    );\n  }\n\n  if (beforeThreshold !== 0n && afterThreshold >= beforeThreshold) {\n    throw new Error(\n      'Invalid thresholds: afterThreshold must be less than beforeThreshold if both are specified',\n    );\n  }\n\n  const terms = concat([\n    toHex(afterThreshold, {\n      size: 16,\n    }),\n    toHex(beforeThreshold, {\n      size: 16,\n    }),\n  ]);\n\n  const {\n    caveatEnforcers: { BlockNumberEnforcer },\n  } = environment;\n\n  if (!BlockNumberEnforcer) {\n    throw new Error('BlockNumberEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: BlockNumberEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { concat, isAddress, isHex, pad, type Address, type Hex } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const deployed = 'deployed';\n\nexport type DeployedBuilderConfig = {\n  /**\n   * The contract address as a hex string.\n   */\n  contractAddress: Address;\n  /**\n   * The salt to use with the deployment, as a hex string.\n   */\n  salt: Hex;\n  /**\n   * The bytecode of the contract as a hex string.\n   */\n  bytecode: Hex;\n};\n\n/**\n * Builds a caveat struct for a DeployedEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration for the deployed builder.\n * @returns The Caveat.\n * @throws Error if the contract address, factory address, or bytecode is invalid.\n */\nexport const deployedBuilder = (\n  environment: DeleGatorEnvironment,\n  config: DeployedBuilderConfig,\n): Caveat => {\n  const { contractAddress, salt, bytecode } = config;\n\n  // we check that the addresses are valid, but don't need to be checksummed\n  if (!isAddress(contractAddress, { strict: false })) {\n    throw new Error(\n      `Invalid contractAddress: must be a valid Ethereum address`,\n    );\n  }\n\n  if (!isHex(salt)) {\n    throw new Error('Invalid salt: must be a valid hexadecimal string');\n  }\n\n  if (!isHex(bytecode)) {\n    throw new Error('Invalid bytecode: must be a valid hexadecimal string');\n  }\n\n  const terms = concat([contractAddress, pad(salt, { size: 32 }), bytecode]);\n\n  const {\n    caveatEnforcers: { DeployedEnforcer },\n  } = environment;\n\n  if (!DeployedEnforcer) {\n    throw new Error('DeployedEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: DeployedEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Address, isAddress, encodePacked } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\nimport { BalanceChangeType } from './types';\n\nexport const erc1155BalanceChange = 'erc1155BalanceChange';\n\nexport type Erc1155BalanceChangeBuilderConfig = {\n  /**\n   * The ERC-1155 contract address as a hex string.\n   */\n  tokenAddress: Address;\n  /**\n   * The recipient's address as a hex string.\n   */\n  recipient: Address;\n  /**\n   * The ID of the ERC-1155 token as a bigint.\n   */\n  tokenId: bigint;\n  /**\n   * The amount by which the balance must have changed as a bigint.\n   */\n  balance: bigint;\n  /**\n   * The balance change type for the ERC-1155 token.\n   * Specifies whether the balance should have increased or decreased.\n   * Valid parameters are BalanceChangeType.Increase and BalanceChangeType.Decrease.\n   */\n  changeType: BalanceChangeType;\n};\n\n/**\n * Builds a caveat struct for the ERC1155BalanceChangeEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the ERC1155 balance change.\n * @returns The Caveat.\n * @throws Error if the token address is invalid, the recipient address is invalid, or the amount is not a positive number.\n */\nexport const erc1155BalanceChangeBuilder = (\n  environment: DeleGatorEnvironment,\n  config: Erc1155BalanceChangeBuilderConfig,\n): Caveat => {\n  const { tokenAddress, recipient, tokenId, balance, changeType } = config;\n\n  if (!isAddress(tokenAddress, { strict: false })) {\n    throw new Error('Invalid tokenAddress: must be a valid address');\n  }\n\n  if (!isAddress(recipient, { strict: false })) {\n    throw new Error('Invalid recipient: must be a valid address');\n  }\n\n  if (balance <= 0n) {\n    throw new Error('Invalid balance: must be a positive number');\n  }\n\n  if (tokenId < 0n) {\n    throw new Error('Invalid tokenId: must be a non-negative number');\n  }\n\n  if (\n    changeType !== BalanceChangeType.Increase &&\n    changeType !== BalanceChangeType.Decrease\n  ) {\n    throw new Error('Invalid changeType: must be either Increase or Decrease');\n  }\n\n  const terms = encodePacked(\n    ['uint8', 'address', 'address', 'uint256', 'uint256'],\n    [changeType, tokenAddress, recipient, tokenId, balance],\n  );\n\n  const {\n    caveatEnforcers: { ERC1155BalanceChangeEnforcer },\n  } = environment;\n\n  if (!ERC1155BalanceChangeEnforcer) {\n    throw new Error('ERC1155BalanceChangeEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ERC1155BalanceChangeEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Address, isAddress, encodePacked } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\nimport { BalanceChangeType } from './types';\n\nexport const erc20BalanceChange = 'erc20BalanceChange';\n\nexport type Erc20BalanceChangeBuilderConfig = {\n  /**\n   * The ERC-20 contract address as a hex string.\n   */\n  tokenAddress: Address;\n  /**\n   * The recipient's address as a hex string.\n   */\n  recipient: Address;\n  /**\n   * The amount by which the balance must have changed as a bigint.\n   */\n  balance: bigint;\n  /**\n   * The balance change type for the ERC-20 token.\n   * Specifies whether the balance should have increased or decreased.\n   * Valid parameters are BalanceChangeType.Increase and BalanceChangeType.Decrease.\n   */\n  changeType: BalanceChangeType;\n};\n\n/**\n * Builds a caveat struct for the ERC20BalanceChangeEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the ERC20 balance change.\n * @returns The Caveat.\n * @throws Error if the token address is invalid, the amount is not a positive number, or the change type is invalid.\n */\nexport const erc20BalanceChangeBuilder = (\n  environment: DeleGatorEnvironment,\n  config: Erc20BalanceChangeBuilderConfig,\n): Caveat => {\n  const { tokenAddress, recipient, balance, changeType } = config;\n\n  if (!isAddress(tokenAddress, { strict: false })) {\n    throw new Error('Invalid tokenAddress: must be a valid address');\n  }\n\n  if (balance <= 0n) {\n    throw new Error('Invalid balance: must be a positive number');\n  }\n\n  if (\n    changeType !== BalanceChangeType.Increase &&\n    changeType !== BalanceChangeType.Decrease\n  ) {\n    throw new Error('Invalid changeType: must be either Increase or Decrease');\n  }\n\n  const terms = encodePacked(\n    ['uint8', 'address', 'address', 'uint256'],\n    [changeType, tokenAddress, recipient, balance],\n  );\n\n  const {\n    caveatEnforcers: { ERC20BalanceChangeEnforcer },\n  } = environment;\n\n  if (!ERC20BalanceChangeEnforcer) {\n    throw new Error('ERC20BalanceChangeEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ERC20BalanceChangeEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { createERC20TokenPeriodTransferTerms } from '@metamask/delegation-core';\nimport type { Address } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const erc20PeriodTransfer = 'erc20PeriodTransfer';\n\nexport type Erc20PeriodTransferBuilderConfig = {\n  /**\n   * The ERC-20 contract address as a hex string.\n   */\n  tokenAddress: Address;\n  /**\n   * The maximum amount of tokens that can be transferred per period.\n   */\n  periodAmount: bigint;\n  /**\n   * The duration of each period in seconds.\n   */\n  periodDuration: number;\n  /**\n   * The timestamp when the first period begins in seconds.\n   */\n  startDate: number;\n};\n\n/**\n * Builds a caveat struct for ERC20PeriodTransferEnforcer.\n * This enforcer validates that ERC20 token transfers do not exceed a specified amount\n * within a given time period. The transferable amount resets at the beginning of each period,\n * and any unused tokens are forfeited once the period ends.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration for the ERC20 period transfer builder.\n * @returns The Caveat.\n * @throws Error if the token address is invalid or if any of the numeric parameters are invalid.\n */\nexport const erc20PeriodTransferBuilder = (\n  environment: DeleGatorEnvironment,\n  config: Erc20PeriodTransferBuilderConfig,\n): Caveat => {\n  const { tokenAddress, periodAmount, periodDuration, startDate } = config;\n\n  const terms = createERC20TokenPeriodTransferTerms({\n    tokenAddress,\n    periodAmount,\n    periodDuration,\n    startDate,\n  });\n\n  const {\n    caveatEnforcers: { ERC20PeriodTransferEnforcer },\n  } = environment;\n\n  if (!ERC20PeriodTransferEnforcer) {\n    throw new Error('ERC20PeriodTransferEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ERC20PeriodTransferEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { createERC20StreamingTerms } from '@metamask/delegation-core';\nimport { type Address } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport const erc20Streaming = 'erc20Streaming';\n\nexport type Erc20StreamingBuilderConfig = {\n  /**\n   * The ERC-20 contract address as a hex string.\n   */\n  tokenAddress: Address;\n  /**\n   * The initial amount available at start time as a bigint.\n   */\n  initialAmount: bigint;\n  /**\n   * Maximum total amount that can be unlocked as a bigint.\n   */\n  maxAmount: bigint;\n  /**\n   * Rate at which tokens accrue per second as a bigint.\n   */\n  amountPerSecond: bigint;\n  /**\n   * The start timestamp in seconds.\n   */\n  startTime: number;\n};\n\n/**\n * Builds a caveat for ERC20 token streaming with configurable parameters.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration for the ERC20 streaming builder.\n * @returns The Caveat.\n * @throws Error if the token address is invalid.\n * @throws Error if the initial amount is a negative number.\n * @throws Error if the max amount is not greater than 0.\n * @throws Error if the max amount is less than the initial amount.\n * @throws Error if the amount per second is not a positive number.\n * @throws Error if the start time is not a positive number.\n */\nexport const erc20StreamingBuilder = (\n  environment: DeleGatorEnvironment,\n  config: Erc20StreamingBuilderConfig,\n): Caveat => {\n  const { tokenAddress, initialAmount, maxAmount, amountPerSecond, startTime } =\n    config;\n\n  const terms = createERC20StreamingTerms({\n    tokenAddress,\n    initialAmount,\n    maxAmount,\n    amountPerSecond,\n    startTime,\n  });\n\n  const {\n    caveatEnforcers: { ERC20StreamingEnforcer },\n  } = environment;\n\n  if (!ERC20StreamingEnforcer) {\n    throw new Error('ERC20StreamingEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ERC20StreamingEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import type { Address } from 'viem';\nimport { concat, isAddress, toHex } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const erc20TransferAmount = 'erc20TransferAmount';\n\nexport type Erc20TransferAmountBuilderConfig = {\n  /**\n   * The ERC-20 contract address as a hex string.\n   */\n  tokenAddress: Address;\n  /**\n   * The maximum amount of tokens that can be transferred as a bigint.\n   */\n  maxAmount: bigint;\n};\n\n/**\n * Builds a caveat struct for ERC20TransferAmountEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration for the ERC20 transfer amount builder.\n * @returns The Caveat.\n * @throws Error if the token address is invalid or if the max amount is not a positive number.\n */\nexport const erc20TransferAmountBuilder = (\n  environment: DeleGatorEnvironment,\n  config: Erc20TransferAmountBuilderConfig,\n): Caveat => {\n  const { tokenAddress, maxAmount } = config;\n\n  if (!isAddress(tokenAddress, { strict: false })) {\n    throw new Error('Invalid tokenAddress: must be a valid address');\n  }\n\n  if (maxAmount <= 0n) {\n    throw new Error('Invalid maxAmount: must be a positive number');\n  }\n\n  const terms = concat([tokenAddress, toHex(maxAmount, { size: 32 })]);\n\n  const {\n    caveatEnforcers: { ERC20TransferAmountEnforcer },\n  } = environment;\n\n  if (!ERC20TransferAmountEnforcer) {\n    throw new Error('ERC20TransferAmountEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ERC20TransferAmountEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Address, isAddress, encodePacked } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\nimport { BalanceChangeType } from './types';\n\nexport const erc721BalanceChange = 'erc721BalanceChange';\n\nexport type Erc721BalanceChangeBuilderConfig = {\n  /**\n   * The ERC-721 contract address as a hex string.\n   */\n  tokenAddress: Address;\n  /**\n   * The recipient's address as a hex string.\n   */\n  recipient: Address;\n  /**\n   * The amount by which the balance must have changed as a bigint.\n   */\n  amount: bigint;\n  /**\n   * The balance change type for the ERC-721 token.\n   * Specifies whether the balance should have increased or decreased.\n   * Valid parameters are BalanceChangeType.Increase and BalanceChangeType.Decrease.\n   */\n  changeType: BalanceChangeType;\n};\n\n/**\n * Builds a caveat struct for the ERC721BalanceChangeEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the ERC721 balance change.\n * @returns The Caveat.\n * @throws Error if the token address is invalid, the recipient address is invalid, or the amount is not a positive number.\n */\nexport const erc721BalanceChangeBuilder = (\n  environment: DeleGatorEnvironment,\n  config: Erc721BalanceChangeBuilderConfig,\n): Caveat => {\n  const { tokenAddress, recipient, amount, changeType } = config;\n\n  if (!isAddress(tokenAddress, { strict: false })) {\n    throw new Error('Invalid tokenAddress: must be a valid address');\n  }\n\n  if (!isAddress(recipient, { strict: false })) {\n    throw new Error('Invalid recipient: must be a valid address');\n  }\n\n  if (amount <= 0n) {\n    throw new Error('Invalid balance: must be a positive number');\n  }\n\n  if (\n    changeType !== BalanceChangeType.Increase &&\n    changeType !== BalanceChangeType.Decrease\n  ) {\n    throw new Error('Invalid changeType: must be either Increase or Decrease');\n  }\n\n  const terms = encodePacked(\n    ['uint8', 'address', 'address', 'uint256'],\n    [changeType, tokenAddress, recipient, amount],\n  );\n\n  const {\n    caveatEnforcers: { ERC721BalanceChangeEnforcer },\n  } = environment;\n\n  if (!ERC721BalanceChangeEnforcer) {\n    throw new Error('ERC721BalanceChangeEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ERC721BalanceChangeEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Address, isAddress, toHex, concat } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport const erc721Transfer = 'erc721Transfer';\n\nexport type Erc721TransferBuilderConfig = {\n  /**\n   * The ERC-721 contract address as a hex string.\n   */\n  tokenAddress: Address;\n  /**\n   * The token ID as a bigint.\n   */\n  tokenId: bigint;\n};\n\n/**\n * Builds a caveat struct for the ERC721TransferEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the ERC721 transfer builder.\n * @returns The Caveat representing the caveat for ERC721 transfer.\n * @throws Error if the permitted contract address is invalid.\n */\nexport const erc721TransferBuilder = (\n  environment: DeleGatorEnvironment,\n  config: Erc721TransferBuilderConfig,\n): Caveat => {\n  const { tokenAddress, tokenId } = config;\n\n  if (!isAddress(tokenAddress, { strict: false })) {\n    throw new Error('Invalid tokenAddress: must be a valid address');\n  }\n\n  if (tokenId < 0n) {\n    throw new Error('Invalid tokenId: must be a non-negative number');\n  }\n\n  const terms = concat([tokenAddress, toHex(tokenId, { size: 32 })]);\n\n  const {\n    caveatEnforcers: { ERC721TransferEnforcer },\n  } = environment;\n\n  if (!ERC721TransferEnforcer) {\n    throw new Error('ERC721TransferEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ERC721TransferEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { encodeAbiParameters, isAddress } from 'viem';\n\nimport type { ExecutionStruct } from '../executions';\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const exactCalldataBatch = 'exactCalldataBatch';\n\nexport type ExactCalldataBatchBuilderConfig = {\n  /**\n   * An array of executions that must be matched exactly in the batch.\n   * Each execution specifies a target address, value, and calldata.\n   */\n  executions: ExecutionStruct[];\n};\n\n/**\n * Builds a caveat struct for ExactCalldataBatchEnforcer.\n * This enforcer ensures that the provided batch execution calldata matches exactly\n * the expected calldata for each execution.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing executions.\n * @returns The Caveat.\n * @throws Error if any of the executions have invalid parameters.\n */\nexport const exactCalldataBatchBuilder = (\n  environment: DeleGatorEnvironment,\n  config: ExactCalldataBatchBuilderConfig,\n): Caveat => {\n  const { executions } = config;\n\n  if (executions.length === 0) {\n    throw new Error('Invalid executions: array cannot be empty');\n  }\n\n  // Validate each execution\n  for (const execution of executions) {\n    if (!isAddress(execution.target, { strict: false })) {\n      throw new Error('Invalid target: must be a valid address');\n    }\n\n    if (execution.value < 0n) {\n      throw new Error('Invalid value: must be a non-negative number');\n    }\n\n    if (!execution.callData.startsWith('0x')) {\n      throw new Error(\n        'Invalid calldata: must be a hex string starting with 0x',\n      );\n    }\n  }\n\n  // Encode the executions using the approach implemented in ExecutionLib.sol encodeBatch()\n  const terms = encodeAbiParameters(\n    [\n      {\n        type: 'tuple[]',\n        components: [\n          { type: 'address', name: 'target' },\n          { type: 'uint256', name: 'value' },\n          { type: 'bytes', name: 'callData' },\n        ],\n      },\n    ],\n    [executions],\n  );\n\n  const {\n    caveatEnforcers: { ExactCalldataBatchEnforcer },\n  } = environment;\n\n  if (!ExactCalldataBatchEnforcer) {\n    throw new Error('ExactCalldataBatchEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ExactCalldataBatchEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { createExactCalldataTerms } from '@metamask/delegation-core';\nimport type { Hex } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const exactCalldata = 'exactCalldata';\n\nexport type ExactCalldataBuilderConfig = {\n  /**\n   * The exact calldata that must be matched as a hex string.\n   */\n  calldata: Hex;\n};\n\n/**\n * Builds a caveat struct for ExactCalldataEnforcer.\n * This enforcer ensures that the provided execution calldata matches exactly\n * the expected calldata.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration for the ExactCalldataBuilder.\n * @returns The Caveat.\n * @throws Error if any of the parameters are invalid.\n */\nexport const exactCalldataBuilder = (\n  environment: DeleGatorEnvironment,\n  config: ExactCalldataBuilderConfig,\n): Caveat => {\n  const { calldata } = config;\n\n  const terms = createExactCalldataTerms({ calldata });\n\n  const {\n    caveatEnforcers: { ExactCalldataEnforcer },\n  } = environment;\n\n  if (!ExactCalldataEnforcer) {\n    throw new Error('ExactCalldataEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ExactCalldataEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { encodeAbiParameters, isAddress } from 'viem';\n\nimport type { ExecutionStruct } from '../executions';\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const exactExecutionBatch = 'exactExecutionBatch';\n\nexport type ExactExecutionBatchBuilderConfig = {\n  /**\n   * An array of executions that must be matched exactly in the batch.\n   * Each execution specifies a target address, value, and calldata.\n   */\n  executions: ExecutionStruct[];\n};\n\n/**\n * Builds a caveat struct for ExactExecutionBatchEnforcer.\n * This enforcer ensures that each execution in the batch matches exactly\n * with the expected execution (target, value, and calldata).\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing executions.\n * @returns The Caveat.\n * @throws Error if any of the execution parameters are invalid.\n */\nexport const exactExecutionBatchBuilder = (\n  environment: DeleGatorEnvironment,\n  config: ExactExecutionBatchBuilderConfig,\n): Caveat => {\n  const { executions } = config;\n\n  if (executions.length === 0) {\n    throw new Error('Invalid executions: array cannot be empty');\n  }\n\n  // Validate each execution\n  for (const execution of executions) {\n    if (!isAddress(execution.target, { strict: false })) {\n      throw new Error('Invalid target: must be a valid address');\n    }\n\n    if (execution.value < 0n) {\n      throw new Error('Invalid value: must be a non-negative number');\n    }\n\n    if (!execution.callData.startsWith('0x')) {\n      throw new Error(\n        'Invalid calldata: must be a hex string starting with 0x',\n      );\n    }\n  }\n\n  // Encode the executions using the approach implemented in ExecutionLib.sol encodeBatch()\n  const terms = encodeAbiParameters(\n    [\n      {\n        type: 'tuple[]',\n        components: [\n          { type: 'address', name: 'target' },\n          { type: 'uint256', name: 'value' },\n          { type: 'bytes', name: 'callData' },\n        ],\n      },\n    ],\n    [executions],\n  );\n\n  const {\n    caveatEnforcers: { ExactExecutionBatchEnforcer },\n  } = environment;\n\n  if (!ExactExecutionBatchEnforcer) {\n    throw new Error('ExactExecutionBatchEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ExactExecutionBatchEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { isAddress, concat, toHex } from 'viem';\n\nimport type { ExecutionStruct } from '../executions';\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const exactExecution = 'exactExecution';\n\nexport type ExactExecutionBuilderConfig = {\n  /**\n   * The execution that must be matched exactly.\n   * Specifies the target address, value, and calldata.\n   */\n  execution: ExecutionStruct;\n};\n\n/**\n * Builds a caveat struct for ExactExecutionEnforcer.\n * This enforcer ensures that the provided execution matches exactly\n * with the expected execution (target, value, and calldata).\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing the execution.\n * @returns The Caveat.\n * @throws Error if any of the execution parameters are invalid.\n */\nexport const exactExecutionBuilder = (\n  environment: DeleGatorEnvironment,\n  config: ExactExecutionBuilderConfig,\n): Caveat => {\n  const { execution } = config;\n\n  if (!isAddress(execution.target, { strict: false })) {\n    throw new Error('Invalid target: must be a valid address');\n  }\n\n  if (execution.value < 0n) {\n    throw new Error('Invalid value: must be a non-negative number');\n  }\n\n  if (!execution.callData.startsWith('0x')) {\n    throw new Error('Invalid calldata: must be a hex string starting with 0x');\n  }\n\n  const terms = concat([\n    execution.target,\n    toHex(execution.value, { size: 32 }),\n    execution.callData,\n  ]);\n\n  const {\n    caveatEnforcers: { ExactExecutionEnforcer },\n  } = environment;\n\n  if (!ExactExecutionEnforcer) {\n    throw new Error('ExactExecutionEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ExactExecutionEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { maxUint256, toHex } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport type IdBuilderConfig = {\n  /**\n   * An id for the delegation. Only one delegation may be redeemed with any given id.\n   */\n  id: bigint | number;\n};\n\nexport const id = 'id';\n\n/**\n * Builds a caveat struct for the IdEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing the id to use in the caveat.\n * @returns The Caveat.\n * @throws Error if the provided id is not a number, not an integer, or is not 32 bytes or fewer in length.\n */\nexport const idBuilder = (\n  environment: DeleGatorEnvironment,\n  config: IdBuilderConfig,\n): Caveat => {\n  const { id: idValue } = config;\n\n  let idBigInt: bigint;\n\n  if (typeof idValue === 'number') {\n    if (!Number.isInteger(idValue)) {\n      throw new Error('Invalid id: must be an integer');\n    }\n\n    idBigInt = BigInt(idValue);\n  } else if (typeof idValue === 'bigint') {\n    idBigInt = idValue;\n  } else {\n    throw new Error('Invalid id: must be a bigint or number');\n  }\n\n  if (idBigInt < 0n) {\n    throw new Error('Invalid id: must be a non-negative number');\n  }\n\n  if (idBigInt > maxUint256) {\n    throw new Error('Invalid id: must be less than 2^256');\n  }\n\n  const terms = toHex(idBigInt, { size: 32 });\n\n  const {\n    caveatEnforcers: { IdEnforcer },\n  } = environment;\n\n  if (!IdEnforcer) {\n    throw new Error('IdEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: IdEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Hex, toHex, pad } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport const limitedCalls = 'limitedCalls';\n\nexport type LimitedCallsBuilderConfig = {\n  /**\n   * The maximum number of times this delegation may be redeemed.\n   */\n  limit: number;\n};\n\n/**\n * Builds a caveat struct for the LimitedCallsEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing the limit.\n * @returns The Caveat.\n * @throws Error if the limit is not a positive integer.\n */\nexport const limitedCallsBuilder = (\n  environment: DeleGatorEnvironment,\n  config: LimitedCallsBuilderConfig,\n): Caveat => {\n  const { limit } = config;\n\n  if (!Number.isInteger(limit)) {\n    throw new Error('Invalid limit: must be an integer');\n  }\n\n  if (limit <= 0) {\n    throw new Error('Invalid limit: must be a positive integer');\n  }\n\n  const terms: Hex = pad(toHex(limit), { size: 32 });\n\n  const {\n    caveatEnforcers: { LimitedCallsEnforcer },\n  } = environment;\n\n  if (!LimitedCallsEnforcer) {\n    throw new Error('LimitedCallsEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: LimitedCallsEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import type { Hex } from 'viem';\nimport { concat, isAddress, pad, toHex } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport type TokenPeriodConfig = {\n  /**\n   * The token contract address as a hex string.\n   */\n  token: Hex;\n  /**\n   * The maximum amount of tokens that can be transferred per period.\n   */\n  periodAmount: bigint;\n  /**\n   * The duration of each period in seconds.\n   */\n  periodDuration: number;\n  /**\n   * The timestamp when the first period begins in seconds.\n   */\n  startDate: number;\n};\n\nexport type MultiTokenPeriodBuilderConfig = TokenPeriodConfig[];\n\nexport const multiTokenPeriod = 'multiTokenPeriod';\n\n/**\n * Creates a caveat for the MultiTokenPeriodEnforcer.\n * This enforcer allows setting periodic transfer limits for multiple tokens.\n * Each token can have its own period amount, duration, and start date.\n *\n * @param environment - The DeleGator environment.\n * @param configs - The configurations for the MultiTokenPeriodBuilder.\n * @returns The caveat object for the MultiTokenPeriodEnforcer.\n */\nexport const multiTokenPeriodBuilder = (\n  environment: DeleGatorEnvironment,\n  configs: MultiTokenPeriodBuilderConfig,\n): Caveat => {\n  if (!configs || configs.length === 0) {\n    throw new Error('MultiTokenPeriodBuilder: configs array cannot be empty');\n  }\n\n  configs.forEach((config) => {\n    if (!isAddress(config.token)) {\n      throw new Error(`Invalid token address: ${String(config.token)}`);\n    }\n\n    if (config.periodAmount <= 0) {\n      throw new Error('Invalid period amount: must be greater than 0');\n    }\n\n    if (config.periodDuration <= 0) {\n      throw new Error('Invalid period duration: must be greater than 0');\n    }\n  });\n\n  // Each config requires 116 bytes:\n  // - 20 bytes for token address\n  // - 32 bytes for periodAmount\n  // - 32 bytes for periodDuration\n  // - 32 bytes for startDate\n  const termsArray = configs.reduce<Hex[]>(\n    (acc, { token, periodAmount, periodDuration, startDate }) => [\n      ...acc,\n      pad(token, { size: 20 }),\n      toHex(periodAmount, { size: 32 }),\n      toHex(periodDuration, { size: 32 }),\n      toHex(startDate, { size: 32 }),\n    ],\n    [],\n  );\n\n  const terms = concat(termsArray);\n\n  const {\n    caveatEnforcers: { MultiTokenPeriodEnforcer },\n  } = environment;\n\n  if (!MultiTokenPeriodEnforcer) {\n    throw new Error('MultiTokenPeriodEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: MultiTokenPeriodEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Address, isAddress, encodePacked } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\nimport { BalanceChangeType } from './types';\n\nexport const nativeBalanceChange = 'nativeBalanceChange';\n\nexport type NativeBalanceChangeBuilderConfig = {\n  /**\n   * The recipient's address as a hex string.\n   */\n  recipient: Address;\n  /**\n   * The amount by which the balance must have changed as a bigint.\n   */\n  balance: bigint;\n  /**\n   * The balance change type for the native currency.\n   * Specifies whether the balance should have increased or decreased.\n   * Valid parameters are BalanceChangeType.Increase and BalanceChangeType.Decrease.\n   */\n  changeType: BalanceChangeType;\n};\n\n/**\n * Builds a caveat struct for the NativeBalanceChangeEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the NativeBalanceChangeEnforcer.\n * @returns The Caveat.\n * @throws Error if the recipient address is invalid or the amount is not a positive number.\n */\nexport const nativeBalanceChangeBuilder = (\n  environment: DeleGatorEnvironment,\n  config: NativeBalanceChangeBuilderConfig,\n): Caveat => {\n  const { recipient, balance, changeType } = config;\n\n  if (!isAddress(recipient)) {\n    throw new Error('Invalid recipient: must be a valid Address');\n  }\n\n  if (balance <= 0n) {\n    throw new Error('Invalid balance: must be a positive number');\n  }\n\n  if (\n    changeType !== BalanceChangeType.Increase &&\n    changeType !== BalanceChangeType.Decrease\n  ) {\n    throw new Error('Invalid changeType: must be either Increase or Decrease');\n  }\n\n  const terms = encodePacked(\n    ['uint8', 'address', 'uint256'],\n    [changeType, recipient, balance],\n  );\n\n  const {\n    caveatEnforcers: { NativeBalanceChangeEnforcer },\n  } = environment;\n\n  if (!NativeBalanceChangeEnforcer) {\n    throw new Error('NativeBalanceChangeEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: NativeBalanceChangeEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Address, encodePacked, isAddress } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const nativeTokenPayment = 'nativeTokenPayment';\n\nexport type NativeTokenPaymentBuilderConfig = {\n  /**\n   * The recipient's address as a hex string.\n   */\n  recipient: Address;\n  /**\n   * The amount that must be paid as a bigint.\n   */\n  amount: bigint;\n};\n\n/**\n * Builds a caveat struct for the NativeTokenPaymentEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the NativeTokenPaymentEnforcer.\n * @returns The Caveat.\n * @throws Error if the amount is invalid or the recipient address is invalid.\n */\nexport const nativeTokenPaymentBuilder = (\n  environment: DeleGatorEnvironment,\n  config: NativeTokenPaymentBuilderConfig,\n): Caveat => {\n  const { recipient, amount } = config;\n\n  if (amount <= 0n) {\n    throw new Error('Invalid amount: must be positive');\n  }\n\n  if (!isAddress(recipient)) {\n    throw new Error('Invalid recipient: must be a valid address');\n  }\n\n  const terms = encodePacked(['address', 'uint256'], [recipient, amount]);\n\n  const {\n    caveatEnforcers: { NativeTokenPaymentEnforcer },\n  } = environment;\n\n  if (!NativeTokenPaymentEnforcer) {\n    throw new Error('NativeTokenPaymentEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: NativeTokenPaymentEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { createNativeTokenPeriodTransferTerms } from '@metamask/delegation-core';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const nativeTokenPeriodTransfer = 'nativeTokenPeriodTransfer';\n\nexport type NativeTokenPeriodTransferBuilderConfig = {\n  /**\n   * The maximum amount of tokens that can be transferred per period.\n   */\n  periodAmount: bigint;\n  /**\n   * The duration of each period in seconds.\n   */\n  periodDuration: number;\n  /**\n   * The timestamp when the first period begins in seconds.\n   */\n  startDate: number;\n};\n\n/**\n * Builds a caveat struct for NativeTokenPeriodTransferEnforcer.\n * This enforcer validates that native token (ETH) transfers do not exceed a specified amount\n * within a given time period. The transferable amount resets at the beginning of each period,\n * and any unused ETH is forfeited once the period ends.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing periodAmount, periodDuration, and startDate.\n * @returns The Caveat.\n * @throws Error if any of the parameters are invalid.\n */\nexport const nativeTokenPeriodTransferBuilder = (\n  environment: DeleGatorEnvironment,\n  config: NativeTokenPeriodTransferBuilderConfig,\n): Caveat => {\n  const { periodAmount, periodDuration, startDate } = config;\n\n  const terms = createNativeTokenPeriodTransferTerms({\n    periodAmount,\n    periodDuration,\n    startDate,\n  });\n\n  const {\n    caveatEnforcers: { NativeTokenPeriodTransferEnforcer },\n  } = environment;\n\n  if (!NativeTokenPeriodTransferEnforcer) {\n    throw new Error(\n      'NativeTokenPeriodTransferEnforcer not found in environment',\n    );\n  }\n\n  return {\n    enforcer: NativeTokenPeriodTransferEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { createNativeTokenStreamingTerms } from '@metamask/delegation-core';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport const nativeTokenStreaming = 'nativeTokenStreaming';\n\nexport type NativeTokenStreamingBuilderConfig = {\n  /**\n   * The initial amount available at start time as a bigint.\n   */\n  initialAmount: bigint;\n  /**\n   * Maximum total amount that can be unlocked as a bigint.\n   */\n  maxAmount: bigint;\n  /**\n   * Rate at which tokens accrue per second as a bigint.\n   */\n  amountPerSecond: bigint;\n  /**\n   * Start timestamp as a number in seconds.\n   */\n  startTime: number;\n};\n\n/**\n * Builds a caveat struct for the NativeTokenStreamingEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the NativeTokenStreamingEnforcer.\n * @returns The Caveat.\n * @throws Error if any of the parameters are invalid.\n */\nexport const nativeTokenStreamingBuilder = (\n  environment: DeleGatorEnvironment,\n  config: NativeTokenStreamingBuilderConfig,\n): Caveat => {\n  const { initialAmount, maxAmount, amountPerSecond, startTime } = config;\n\n  const terms = createNativeTokenStreamingTerms({\n    initialAmount,\n    maxAmount,\n    amountPerSecond,\n    startTime,\n  });\n\n  const {\n    caveatEnforcers: { NativeTokenStreamingEnforcer },\n  } = environment;\n\n  if (!NativeTokenStreamingEnforcer) {\n    throw new Error('NativeTokenStreamingEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: NativeTokenStreamingEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { encodePacked } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const nativeTokenTransferAmount = 'nativeTokenTransferAmount';\n\nexport type NativeTokenTransferAmountBuilderConfig = {\n  /**\n   * The maximum amount of native tokens that can be transferred.\n   */\n  maxAmount: bigint;\n};\n\n/**\n * Builds a caveat struct for the NativeTokenTransferAmountEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing the maxAmount.\n * @returns The Caveat.\n * @throws Error if the maxAmount is negative.\n */\nexport const nativeTokenTransferAmountBuilder = (\n  environment: DeleGatorEnvironment,\n  config: NativeTokenTransferAmountBuilderConfig,\n): Caveat => {\n  const { maxAmount } = config;\n\n  if (maxAmount < 0n) {\n    throw new Error('Invalid maxAmount: must be zero or positive');\n  }\n\n  const terms = encodePacked(['uint256'], [maxAmount]);\n\n  const {\n    caveatEnforcers: { NativeTokenTransferAmountEnforcer },\n  } = environment;\n\n  if (!NativeTokenTransferAmountEnforcer) {\n    throw new Error(\n      'NativeTokenTransferAmountEnforcer not found in environment',\n    );\n  }\n\n  return {\n    enforcer: NativeTokenTransferAmountEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { createNonceTerms } from '@metamask/delegation-core';\nimport { type Hex } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport const nonce = 'nonce';\n\nexport type NonceBuilderConfig = {\n  /**\n   * A nonce as a hex string to allow bulk revocation of delegations.\n   */\n  nonce: Hex;\n};\n\n/**\n * Builds a caveat struct for the NonceEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing the nonce value.\n * @returns The Caveat.\n * @throws Error if the nonce is invalid.\n */\nexport const nonceBuilder = (\n  environment: DeleGatorEnvironment,\n  config: NonceBuilderConfig,\n): Caveat => {\n  const { nonce: nonceValue } = config;\n\n  const terms = createNonceTerms({ nonce: nonceValue });\n\n  const {\n    caveatEnforcers: { NonceEnforcer },\n  } = environment;\n\n  if (!NonceEnforcer) {\n    throw new Error('NonceEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: NonceEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Address, isAddress } from 'viem';\n\nimport type { DeleGatorEnvironment, Caveat } from '../types';\n\nexport const ownershipTransfer = 'ownershipTransfer';\n\nexport type OwnershipTransferBuilderConfig = {\n  /**\n   * The target contract address as a hex string for which ownership transfers are allowed.\n   */\n  contractAddress: Address;\n};\n\n/**\n * Builds a caveat struct for the OwnershipTransferEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the ownership transfer builder.\n * @returns The Caveat representing the caveat for ownership transfer.\n * @throws Error if the target contract address is invalid.\n */\nexport const ownershipTransferBuilder = (\n  environment: DeleGatorEnvironment,\n  config: OwnershipTransferBuilderConfig,\n): Caveat => {\n  const { contractAddress } = config;\n\n  if (!isAddress(contractAddress, { strict: false })) {\n    throw new Error('Invalid contractAddress: must be a valid address');\n  }\n\n  const terms = contractAddress;\n\n  const {\n    caveatEnforcers: { OwnershipTransferEnforcer },\n  } = environment;\n\n  if (!OwnershipTransferEnforcer) {\n    throw new Error('OwnershipTransferEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: OwnershipTransferEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { type Address, concat, isAddress } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const redeemer = 'redeemer';\n\nexport type RedeemerBuilderConfig = {\n  /**\n   * An array of addresses that are allowed to redeem the delegation.\n   * Each address must be a valid hex string.\n   */\n  redeemers: Address[];\n};\n\n/**\n * Builds a caveat struct for the RedeemerEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing redeemers.\n * @returns The Caveat.\n * @throws Error if the redeemer address is invalid or the array is empty.\n */\nexport const redeemerBuilder = (\n  environment: DeleGatorEnvironment,\n  config: RedeemerBuilderConfig,\n): Caveat => {\n  const { redeemers } = config;\n\n  if (redeemers.length === 0) {\n    throw new Error(\n      'Invalid redeemers: must specify at least one redeemer address',\n    );\n  }\n\n  for (const redeemerAddress of redeemers) {\n    if (!isAddress(redeemerAddress)) {\n      throw new Error('Invalid redeemers: must be a valid address');\n    }\n  }\n\n  const terms = concat(redeemers);\n\n  const {\n    caveatEnforcers: { RedeemerEnforcer },\n  } = environment;\n\n  if (!RedeemerEnforcer) {\n    throw new Error('RedeemerEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: RedeemerEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { concat, isAddress, toHex, type Address, type Hex } from 'viem';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const specificActionERC20TransferBatch =\n  'specificActionERC20TransferBatch';\n\nexport type SpecificActionErc20TransferBatchBuilderConfig = {\n  /**\n   * The address of the ERC-20 token contract.\n   */\n  tokenAddress: Address;\n  /**\n   * The address that will receive the tokens.\n   */\n  recipient: Address;\n  /**\n   * The amount of tokens to transfer.\n   */\n  amount: bigint;\n  /**\n   * The target address for the first transaction.\n   */\n  target: Address;\n  /**\n   * The calldata for the first transaction.\n   */\n  calldata: Hex;\n};\n\n/**\n * Builds a caveat struct for SpecificActionERC20TransferBatchEnforcer.\n * Enforces a batch of exactly 2 transactions: a specific action followed by an ERC20 transfer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration for the specific action ERC20 transfer batch builder.\n * @returns The Caveat.\n * @throws Error if any of the addresses are invalid or if the amount is not a positive number.\n */\nexport const specificActionERC20TransferBatchBuilder = (\n  environment: DeleGatorEnvironment,\n  config: SpecificActionErc20TransferBatchBuilderConfig,\n): Caveat => {\n  const { tokenAddress, recipient, amount, target, calldata } = config;\n\n  if (!isAddress(tokenAddress, { strict: false })) {\n    throw new Error('Invalid tokenAddress: must be a valid address');\n  }\n\n  if (!isAddress(recipient, { strict: false })) {\n    throw new Error('Invalid recipient: must be a valid address');\n  }\n\n  if (!isAddress(target, { strict: false })) {\n    throw new Error('Invalid target: must be a valid address');\n  }\n\n  if (amount <= 0n) {\n    throw new Error('Invalid amount: must be a positive number');\n  }\n\n  const terms = concat([\n    tokenAddress,\n    recipient,\n    toHex(amount, { size: 32 }),\n    target,\n    calldata,\n  ]);\n\n  const {\n    caveatEnforcers: { SpecificActionERC20TransferBatchEnforcer },\n  } = environment;\n\n  if (!SpecificActionERC20TransferBatchEnforcer) {\n    throw new Error(\n      'SpecificActionERC20TransferBatchEnforcer not found in environment',\n    );\n  }\n\n  return {\n    enforcer: SpecificActionERC20TransferBatchEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { createTimestampTerms } from '@metamask/delegation-core';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const timestamp = 'timestamp';\n\nexport type TimestampBuilderConfig = {\n  /**\n   * The timestamp after which the delegation is valid in seconds.\n   * Set to 0 to disable this threshold.\n   */\n  afterThreshold: number;\n  /**\n   * The timestamp before which the delegation is valid.\n   * Set to 0 to disable this threshold.\n   */\n  beforeThreshold: number;\n};\n\n/**\n * Builds a caveat struct for the TimestampEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object for the TimestampEnforcer.\n * @returns The Caveat.\n * @throws Error if any of the parameters are invalid.\n */\nexport const timestampBuilder = (\n  environment: DeleGatorEnvironment,\n  config: TimestampBuilderConfig,\n): Caveat => {\n  const { afterThreshold, beforeThreshold } = config;\n\n  const terms = createTimestampTerms({\n    timestampAfterThreshold: afterThreshold,\n    timestampBeforeThreshold: beforeThreshold,\n  });\n\n  const {\n    caveatEnforcers: { TimestampEnforcer },\n  } = environment;\n\n  if (!TimestampEnforcer) {\n    throw new Error('TimestampEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: TimestampEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import { createValueLteTerms } from '@metamask/delegation-core';\n\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport const valueLte = 'valueLte';\n\nexport type ValueLteBuilderConfig = {\n  /**\n   * The maximum value that may be specified when redeeming this delegation.\n   */\n  maxValue: bigint;\n};\n\n/**\n * Builds a caveat struct for ValueLteEnforcer.\n *\n * @param environment - The DeleGator environment.\n * @param config - The configuration object containing the maximum value allowed for the transaction.\n * @returns The Caveat.\n * @throws Error if any of the parameters are invalid.\n */\nexport const valueLteBuilder = (\n  environment: DeleGatorEnvironment,\n  config: ValueLteBuilderConfig,\n): Caveat => {\n  const { maxValue } = config;\n\n  const terms = createValueLteTerms({ maxValue });\n\n  const {\n    caveatEnforcers: { ValueLteEnforcer },\n  } = environment;\n\n  if (!ValueLteEnforcer) {\n    throw new Error('ValueLteEnforcer not found in environment');\n  }\n\n  return {\n    enforcer: ValueLteEnforcer,\n    terms,\n    args: '0x',\n  };\n};\n", "import type { DeleGatorEnvironment } from '../types';\nimport {\n  allowedCalldata,\n  allowedCalldataBuilder,\n} from './allowedCalldataBuilder';\nimport { allowedMethods, allowedMethodsBuilder } from './allowedMethodsBuilder';\nimport { allowedTargets, allowedTargetsBuilder } from './allowedTargetsBuilder';\nimport {\n  argsEqualityCheck,\n  argsEqualityCheckBuilder,\n} from './argsEqualityCheckBuilder';\nimport { blockNumber, blockNumberBuilder } from './blockNumberBuilder';\nimport type { CaveatBuilderConfig } from './caveatBuilder';\nimport { CaveatBuilder } from './caveatBuilder';\nimport { deployed, deployedBuilder } from './deployedBuilder';\nimport {\n  erc1155BalanceChange,\n  erc1155BalanceChangeBuilder,\n} from './erc1155BalanceChangeBuilder';\nimport {\n  erc20BalanceChange,\n  erc20BalanceChangeBuilder,\n} from './erc20BalanceChangeBuilder';\nimport {\n  erc20PeriodTransfer,\n  erc20PeriodTransferBuilder,\n} from './erc20PeriodTransferBuilder';\nimport { erc20Streaming, erc20StreamingBuilder } from './erc20StreamingBuilder';\nimport {\n  erc20TransferAmount,\n  erc20TransferAmountBuilder,\n} from './erc20TransferAmountBuilder';\nimport {\n  erc721BalanceChange,\n  erc721BalanceChangeBuilder,\n} from './erc721BalanceChangeBuilder';\nimport { erc721Transfer, erc721TransferBuilder } from './erc721TransferBuilder';\nimport {\n  exactCalldataBatch,\n  exactCalldataBatchBuilder,\n} from './exactCalldataBatchBuilder';\nimport { exactCalldata, exactCalldataBuilder } from './exactCalldataBuilder';\nimport {\n  exactExecutionBatch,\n  exactExecutionBatchBuilder,\n} from './exactExecutionBatchBuilder';\nimport { exactExecution, exactExecutionBuilder } from './exactExecutionBuilder';\nimport { id, idBuilder } from './idBuilder';\nimport { limitedCalls, limitedCallsBuilder } from './limitedCallsBuilder';\nimport {\n  multiTokenPeriod,\n  multiTokenPeriodBuilder,\n} from './multiTokenPeriodBuilder';\nimport {\n  nativeBalanceChange,\n  nativeBalanceChangeBuilder,\n} from './nativeBalanceChangeBuilder';\nimport {\n  nativeTokenPayment,\n  nativeTokenPaymentBuilder,\n} from './nativeTokenPaymentBuilder';\nimport {\n  nativeTokenPeriodTransfer,\n  nativeTokenPeriodTransferBuilder,\n} from './nativeTokenPeriodTransferBuilder';\nimport {\n  nativeTokenStreaming,\n  nativeTokenStreamingBuilder,\n} from './nativeTokenStreamingBuilder';\nimport {\n  nativeTokenTransferAmount,\n  nativeTokenTransferAmountBuilder,\n} from './nativeTokenTransferAmountBuilder';\nimport { nonce, nonceBuilder } from './nonceBuilder';\nimport {\n  ownershipTransfer,\n  ownershipTransferBuilder,\n} from './ownershipTransferBuilder';\nimport { redeemer, redeemerBuilder } from './redeemerBuilder';\nimport {\n  specificActionERC20TransferBatch,\n  specificActionERC20TransferBatchBuilder,\n} from './specificActionERC20TransferBatchBuilder';\nimport { timestamp, timestampBuilder } from './timestampBuilder';\nimport { valueLte, valueLteBuilder } from './valueLteBuilder';\n\n// While we could derive CoreCaveatMap from the createCaveatBuilder function,\n// doing so would significantly complicate type resolution. By explicitly\n// declaring the return type of createCaveatBuilder, we ensure the caveat\n// map remains synchronized with the actual implementation.\ntype CoreCaveatMap = {\n  allowedMethods: typeof allowedMethodsBuilder;\n  allowedTargets: typeof allowedTargetsBuilder;\n  deployed: typeof deployedBuilder;\n  allowedCalldata: typeof allowedCalldataBuilder;\n  erc20BalanceChange: typeof erc20BalanceChangeBuilder;\n  erc721BalanceChange: typeof erc721BalanceChangeBuilder;\n  erc1155BalanceChange: typeof erc1155BalanceChangeBuilder;\n  valueLte: typeof valueLteBuilder;\n  limitedCalls: typeof limitedCallsBuilder;\n  id: typeof idBuilder;\n  nonce: typeof nonceBuilder;\n  timestamp: typeof timestampBuilder;\n  blockNumber: typeof blockNumberBuilder;\n  erc20TransferAmount: typeof erc20TransferAmountBuilder;\n  erc20Streaming: typeof erc20StreamingBuilder;\n  nativeTokenStreaming: typeof nativeTokenStreamingBuilder;\n  erc721Transfer: typeof erc721TransferBuilder;\n  nativeTokenTransferAmount: typeof nativeTokenTransferAmountBuilder;\n  nativeBalanceChange: typeof nativeBalanceChangeBuilder;\n  redeemer: typeof redeemerBuilder;\n  nativeTokenPayment: typeof nativeTokenPaymentBuilder;\n  argsEqualityCheck: typeof argsEqualityCheckBuilder;\n  specificActionERC20TransferBatch: typeof specificActionERC20TransferBatchBuilder;\n  erc20PeriodTransfer: typeof erc20PeriodTransferBuilder;\n  nativeTokenPeriodTransfer: typeof nativeTokenPeriodTransferBuilder;\n  exactCalldataBatch: typeof exactCalldataBatchBuilder;\n  exactCalldata: typeof exactCalldataBuilder;\n  exactExecution: typeof exactExecutionBuilder;\n  exactExecutionBatch: typeof exactExecutionBatchBuilder;\n  multiTokenPeriod: typeof multiTokenPeriodBuilder;\n  ownershipTransfer: typeof ownershipTransferBuilder;\n};\n\n/**\n * A caveat builder type that includes all core caveat types pre-configured.\n * This type represents a fully configured caveat builder with all the standard\n * caveat builders available for use.\n */\nexport type CoreCaveatBuilder = CaveatBuilder<CoreCaveatMap>;\n\ntype ExtractCaveatMapType<TCaveatBuilder extends CaveatBuilder<any>> =\n  TCaveatBuilder extends CaveatBuilder<infer TCaveatMap> ? TCaveatMap : never;\ntype ExtractedCoreMap = ExtractCaveatMapType<CoreCaveatBuilder>;\n\nexport type CaveatConfigurations = {\n  [TType in keyof ExtractedCoreMap]: {\n    type: TType;\n  } & Parameters<ExtractedCoreMap[TType]>[1];\n}[keyof ExtractedCoreMap];\n\nexport type CaveatConfiguration<\n  TCaveatBuilder extends CaveatBuilder<any>,\n  CaveatMap = ExtractCaveatMapType<TCaveatBuilder>,\n> =\n  CaveatMap extends Record<string, (...args: any[]) => any>\n    ? {\n        [TType in keyof CaveatMap]: {\n          type: TType;\n        } & Parameters<CaveatMap[TType]>[1];\n      }[keyof CaveatMap]\n    : never;\n\nexport type CoreCaveatConfiguration = CaveatConfiguration<CoreCaveatBuilder>;\n\n/**\n * Creates a caveat builder with all core caveat types pre-configured.\n *\n * @param environment - The DeleGator environment configuration.\n * @param config - Optional configuration for the caveat builder.\n * @returns A fully configured CoreCaveatBuilder instance with all core caveat types.\n */\nexport const createCaveatBuilder = (\n  environment: DeleGatorEnvironment,\n  config?: CaveatBuilderConfig,\n): CoreCaveatBuilder => {\n  const caveatBuilder = new CaveatBuilder(environment, config)\n    .extend(allowedMethods, allowedMethodsBuilder)\n    .extend(allowedTargets, allowedTargetsBuilder)\n    .extend(deployed, deployedBuilder)\n    .extend(allowedCalldata, allowedCalldataBuilder)\n    .extend(erc20BalanceChange, erc20BalanceChangeBuilder)\n    .extend(erc721BalanceChange, erc721BalanceChangeBuilder)\n    .extend(erc1155BalanceChange, erc1155BalanceChangeBuilder)\n    .extend(valueLte, valueLteBuilder)\n    .extend(limitedCalls, limitedCallsBuilder)\n    .extend(id, idBuilder)\n    .extend(nonce, nonceBuilder)\n    .extend(timestamp, timestampBuilder)\n    .extend(blockNumber, blockNumberBuilder)\n    .extend(erc20TransferAmount, erc20TransferAmountBuilder)\n    .extend(erc20Streaming, erc20StreamingBuilder)\n    .extend(nativeTokenStreaming, nativeTokenStreamingBuilder)\n    .extend(erc721Transfer, erc721TransferBuilder)\n    .extend(nativeTokenTransferAmount, nativeTokenTransferAmountBuilder)\n    .extend(nativeBalanceChange, nativeBalanceChangeBuilder)\n    .extend(redeemer, redeemerBuilder)\n    .extend(nativeTokenPayment, nativeTokenPaymentBuilder)\n    .extend(argsEqualityCheck, argsEqualityCheckBuilder)\n    .extend(\n      specificActionERC20TransferBatch,\n      specificActionERC20TransferBatchBuilder,\n    )\n    .extend(erc20PeriodTransfer, erc20PeriodTransferBuilder)\n    .extend(nativeTokenPeriodTransfer, nativeTokenPeriodTransferBuilder)\n    .extend(exactCalldataBatch, exactCalldataBatchBuilder)\n    .extend(exactCalldata, exactCalldataBuilder)\n    .extend(exactExecution, exactExecutionBuilder)\n    .extend(exactExecutionBatch, exactExecutionBatchBuilder)\n    .extend(multiTokenPeriod, multiTokenPeriodBuilder)\n    .extend(ownershipTransfer, ownershipTransferBuilder);\n\n  return caveatBuilder;\n};\n", "import type { DeleGatorEnvironment } from '../../types';\nimport { createCaveatBuilder } from '../coreCaveatBuilder';\nimport type { CoreCaveatBuilder } from '../coreCaveatBuilder';\nimport type {\n  erc20PeriodTransfer,\n  Erc20PeriodTransferBuilderConfig,\n} from '../erc20PeriodTransferBuilder';\n\nexport type Erc20PeriodicScopeConfig = {\n  type: typeof erc20PeriodTransfer;\n} & Erc20PeriodTransferBuilderConfig;\n\n/**\n * Creates a caveat builder configured for ERC20 token periodic transfers with recurring limits.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing ERC20 periodic transfer parameters.\n * @returns A configured caveat builder with ERC20 period transfer and value limit caveats.\n * @throws Error if any of the ERC20 periodic transfer parameters are invalid.\n * @throws Error if the environment is not properly configured.\n */\nexport function createErc20PeriodicCaveatBuilder(\n  environment: DeleGatorEnvironment,\n  config: Erc20PeriodicScopeConfig,\n): CoreCaveatBuilder {\n  return createCaveatBuilder(environment)\n    .addCaveat('valueLte', {\n      maxValue: 0n,\n    })\n    .addCaveat('erc20PeriodTransfer', {\n      tokenAddress: config.tokenAddress,\n      periodAmount: config.periodAmount,\n      periodDuration: config.periodDuration,\n      startDate: config.startDate,\n    });\n}\n", "import type { DeleGatorEnvironment } from '../../types';\nimport { createCaveatBuilder } from '../coreCaveatBuilder';\nimport type { CoreCaveatBuilder } from '../coreCaveatBuilder';\nimport type {\n  erc20Streaming,\n  Erc20StreamingBuilderConfig,\n} from '../erc20StreamingBuilder';\n\nexport type Erc20StreamingScopeConfig = {\n  type: typeof erc20Streaming;\n} & Erc20StreamingBuilderConfig;\n\n/**\n * Creates a caveat builder configured for ERC20 token streaming with time-based limits.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing ERC20 streaming parameters.\n * @returns A configured caveat builder with ERC20 streaming and value limit caveats.\n * @throws Error if any of the ERC20 streaming parameters are invalid.\n * @throws Error if the environment is not properly configured.\n */\nexport function createErc20StreamingCaveatBuilder(\n  environment: DeleGatorEnvironment,\n  config: Erc20StreamingScopeConfig,\n): CoreCaveatBuilder {\n  return createCaveatBuilder(environment)\n    .addCaveat('valueLte', {\n      maxValue: 0n,\n    })\n    .addCaveat('erc20Streaming', {\n      tokenAddress: config.tokenAddress,\n      initialAmount: config.initialAmount,\n      maxAmount: config.maxAmount,\n      amountPerSecond: config.amountPerSecond,\n      startTime: config.startTime,\n    });\n}\n", "import type { DeleGatorEnvironment } from '../../types';\nimport { createCaveatBuilder } from '../coreCaveatBuilder';\nimport type { CoreCaveatBuilder } from '../coreCaveatBuilder';\nimport type {\n  erc20TransferAmount,\n  Erc20TransferAmountBuilderConfig,\n} from '../erc20TransferAmountBuilder';\n\nexport type Erc20TransferScopeConfig = {\n  type: typeof erc20TransferAmount;\n} & Erc20TransferAmountBuilderConfig;\n\n/**\n * Creates a caveat builder configured for ERC20 token transfers with amount limits.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing ERC20 transfer parameters.\n * @returns A configured caveat builder with ERC20 transfer amount and value limit caveats.\n * @throws Error if any of the ERC20 transfer parameters are invalid.\n * @throws Error if the environment is not properly configured.\n */\nexport function createErc20TransferCaveatBuilder(\n  environment: DeleGatorEnvironment,\n  config: Erc20TransferScopeConfig,\n): CoreCaveatBuilder {\n  return createCaveatBuilder(environment)\n    .addCaveat('valueLte', {\n      maxValue: 0n,\n    })\n    .addCaveat('erc20TransferAmount', {\n      tokenAddress: config.tokenAddress,\n      maxAmount: config.maxAmount,\n    });\n}\n", "import { type Hex, isHex, toHex } from 'viem';\n\n/**\n * Checks if two hexadecimal strings are equal, ignoring case sensitivity.\n * @param a - The first hexadecimal string.\n * @param b - The second hexadecimal string.\n * @returns True if the hexadecimal strings are equal, false otherwise.\n */\nexport function isEqualHex(a: Hex, b: Hex): boolean {\n  return isHex(a) && a.toLowerCase() === b.toLowerCase();\n}\n\n/**\n * Recursively converts all members of an object to hexadecimal format.\n * Handles various data types including functions, null, strings, booleans,\n * bigints, arrays, and objects.\n *\n * @param obj - The object to convert to hexadecimal format.\n * @returns The object with all values converted to hexadecimal format.\n */\nexport function deepHexlify(obj: any): any {\n  if (typeof obj === 'function') {\n    return undefined;\n  }\n\n  if (\n    obj === null ||\n    obj === undefined ||\n    typeof obj === 'string' ||\n    typeof obj === 'boolean'\n  ) {\n    return obj;\n  }\n\n  if (typeof obj === 'bigint') {\n    return toHex(obj);\n  }\n\n  if (obj._isBigNumber !== null || typeof obj !== 'object') {\n    return toHex(obj).replace(/^0x0/u, '0x');\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map((member) => deepHexlify(member));\n  }\n\n  return Object.keys(obj).reduce(\n    (set, key) =>\n      Object.assign(Object.assign({}, set), {\n        [key]: deepHexlify(obj[key]),\n      }),\n    {},\n  );\n}\n\n/**\n * Utility function to check if an object has all specified properties defined and not undefined.\n *\n * @template TObject - The type of the object to check.\n * @template TKey - The keys of the properties to check for.\n * @param object - The object to check for the required properties.\n * @param properties - An array of property names to verify on the object.\n * @returns True if all specified properties exist on the object and are not undefined, otherwise false.\n */\nexport const hasProperties = <\n  TObject extends Record<string, any>,\n  TKey extends keyof TObject,\n>(\n  object: TObject,\n  properties: readonly TKey[],\n): object is TObject & Record<TKey, NonNullable<TObject[TKey]>> => {\n  return properties.every(\n    (prop) => prop in object && object[prop] !== undefined,\n  );\n};\n", "import type { DeleGatorEnvironment } from '../../types';\nimport { hasProperties } from '../../utils';\nimport { createCaveatBuilder } from '../coreCaveatBuilder';\nimport type { CoreCaveatBuilder } from '../coreCaveatBuilder';\nimport type {\n  erc721Transfer,\n  Erc721TransferBuilderConfig,\n} from '../erc721TransferBuilder';\n\nexport type Erc721ScopeBaseConfig = {\n  type: typeof erc721Transfer;\n};\n\nexport type Erc721ScopeConfig = Erc721ScopeBaseConfig &\n  Erc721TransferBuilderConfig;\n\nconst isErc721TransferConfig = (\n  config: Erc721ScopeBaseConfig,\n): config is Erc721TransferBuilderConfig & Erc721ScopeBaseConfig => {\n  return hasProperties(\n    config as Erc721TransferBuilderConfig & Erc721ScopeBaseConfig,\n    ['tokenAddress', 'tokenId'],\n  );\n};\n\n/**\n * Creates a caveat builder configured for ERC721 unit of authority.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing permitted contract and token ID.\n * @returns A configured caveat builder with the specified caveats.\n * @throws Error if any of the required parameters are invalid.\n */\nexport function createErc721CaveatBuilder(\n  environment: DeleGatorEnvironment,\n  config: Erc721ScopeConfig,\n): CoreCaveatBuilder {\n  if (!isErc721TransferConfig(config)) {\n    throw new Error('Invalid ERC721 configuration');\n  }\n\n  const caveatBuilder = createCaveatBuilder(environment).addCaveat(\n    'erc721Transfer',\n    config,\n  );\n\n  return caveatBuilder;\n}\n", "import type { DeleGatorEnvironment } from '../../types';\nimport { hasProperties } from '../../utils';\nimport type { AllowedCalldataBuilderConfig } from '../allowedCalldataBuilder';\nimport type { AllowedMethodsBuilderConfig } from '../allowedMethodsBuilder';\nimport type { AllowedTargetsBuilderConfig } from '../allowedTargetsBuilder';\nimport { createCaveatBuilder } from '../coreCaveatBuilder';\nimport type { CoreCaveatBuilder } from '../coreCaveatBuilder';\nimport type { ExactCalldataBuilderConfig } from '../exactCalldataBuilder';\n\ntype FunctionCallScopeBaseConfig = {\n  type: 'functionCall';\n};\n\nexport type FunctionCallScopeConfig = FunctionCallScopeBaseConfig &\n  AllowedTargetsBuilderConfig &\n  AllowedMethodsBuilderConfig & {\n    allowedCalldata?: AllowedCalldataBuilderConfig[];\n    exactCalldata?: ExactCalldataBuilderConfig;\n  };\n\nconst isFunctionCallConfig = (\n  config: FunctionCallScopeConfig,\n): config is FunctionCallScopeConfig => {\n  return hasProperties(config, ['targets', 'selectors']);\n};\n\n/**\n * Creates a caveat builder configured for function call unit of authority.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing allowed targets, methods, and optionally calldata.\n * @returns A configured caveat builder with the specified caveats.\n * @throws Error if any of the required parameters are invalid.\n * @throws Error if both allowedCalldata and exactCalldata are provided simultaneously.\n */\nexport function createFunctionCallCaveatBuilder(\n  environment: DeleGatorEnvironment,\n  config: FunctionCallScopeConfig,\n): CoreCaveatBuilder {\n  const { targets, selectors, allowedCalldata, exactCalldata } = config;\n\n  if (!isFunctionCallConfig(config)) {\n    throw new Error('Invalid Function Call configuration');\n  }\n\n  if (allowedCalldata && allowedCalldata.length > 0 && exactCalldata) {\n    throw new Error(\n      'Cannot specify both allowedCalldata and exactCalldata. Please use only one calldata restriction type.',\n    );\n  }\n\n  const caveatBuilder = createCaveatBuilder(environment)\n    .addCaveat('allowedTargets', { targets })\n    .addCaveat('allowedMethods', { selectors });\n\n  if (allowedCalldata && allowedCalldata.length > 0) {\n    allowedCalldata.forEach((calldataConfig) => {\n      caveatBuilder.addCaveat('allowedCalldata', calldataConfig);\n    });\n  } else if (exactCalldata) {\n    caveatBuilder.addCaveat('exactCalldata', exactCalldata);\n  }\n\n  return caveatBuilder;\n}\n", "import type { DeleGatorEnvironment } from '../../types';\nimport type { AllowedCalldataBuilderConfig } from '../allowedCalldataBuilder';\nimport { createCaveatBuilder } from '../coreCaveatBuilder';\nimport type { CoreCaveatBuilder } from '../coreCaveatBuilder';\nimport type { ExactCalldataBuilderConfig } from '../exactCalldataBuilder';\nimport type {\n  nativeTokenPeriodTransfer,\n  NativeTokenPeriodTransferBuilderConfig,\n} from '../nativeTokenPeriodTransferBuilder';\n\nexport type NativeTokenPeriodicScopeConfig = {\n  type: typeof nativeTokenPeriodTransfer;\n  allowedCalldata?: AllowedCalldataBuilderConfig[];\n  exactCalldata?: ExactCalldataBuilderConfig;\n} & NativeTokenPeriodTransferBuilderConfig;\n\n/**\n * Creates a caveat builder configured for native token periodic transfers with recurring limits.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing native token periodic transfer parameters.\n * @returns A configured caveat builder with native token period transfer and exact calldata caveats.\n * @throws Error if any of the native token periodic transfer parameters are invalid.\n * @throws Error if both allowedCalldata and exactCalldata are provided simultaneously.\n * @throws Error if the environment is not properly configured.\n */\nexport function createNativeTokenPeriodicCaveatBuilder(\n  environment: DeleGatorEnvironment,\n  config: NativeTokenPeriodicScopeConfig,\n): CoreCaveatBuilder {\n  const {\n    periodAmount,\n    periodDuration,\n    startDate,\n    allowedCalldata,\n    exactCalldata,\n  } = config;\n\n  if (allowedCalldata && allowedCalldata.length > 0 && exactCalldata) {\n    throw new Error(\n      'Cannot specify both allowedCalldata and exactCalldata. Please use only one calldata restriction type.',\n    );\n  }\n\n  const caveatBuilder = createCaveatBuilder(environment);\n\n  // Add calldata restrictions\n  if (allowedCalldata && allowedCalldata.length > 0) {\n    allowedCalldata.forEach((calldataConfig) => {\n      caveatBuilder.addCaveat('allowedCalldata', calldataConfig);\n    });\n  } else if (exactCalldata) {\n    caveatBuilder.addCaveat('exactCalldata', exactCalldata);\n  } else {\n    // Default behavior: only allow empty calldata\n    caveatBuilder.addCaveat('exactCalldata', {\n      calldata: '0x',\n    });\n  }\n\n  // Add native token period transfer restriction\n  caveatBuilder.addCaveat('nativeTokenPeriodTransfer', {\n    periodAmount,\n    periodDuration,\n    startDate,\n  });\n\n  return caveatBuilder;\n}\n", "import type { DeleGatorEnvironment } from '../../types';\nimport type { AllowedCalldataBuilderConfig } from '../allowedCalldataBuilder';\nimport { createCaveatBuilder } from '../coreCaveatBuilder';\nimport type { CoreCaveatBuilder } from '../coreCaveatBuilder';\nimport type { ExactCalldataBuilderConfig } from '../exactCalldataBuilder';\nimport type {\n  nativeTokenStreaming,\n  NativeTokenStreamingBuilderConfig,\n} from '../nativeTokenStreamingBuilder';\n\nexport type NativeTokenStreamingScopeConfig = {\n  type: typeof nativeTokenStreaming;\n  allowedCalldata?: AllowedCalldataBuilderConfig[];\n  exactCalldata?: ExactCalldataBuilderConfig;\n} & NativeTokenStreamingBuilderConfig;\n\n/**\n * Creates a caveat builder configured for native token streaming with time-based limits.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing native token streaming parameters.\n * @returns A configured caveat builder with native token streaming and exact calldata caveats.\n * @throws Error if any of the native token streaming parameters are invalid.\n * @throws Error if both allowedCalldata and exactCalldata are provided simultaneously.\n * @throws Error if the environment is not properly configured.\n */\nexport function createNativeTokenStreamingCaveatBuilder(\n  environment: DeleGatorEnvironment,\n  config: NativeTokenStreamingScopeConfig,\n): CoreCaveatBuilder {\n  const {\n    initialAmount,\n    maxAmount,\n    amountPerSecond,\n    startTime,\n    allowedCalldata,\n    exactCalldata,\n  } = config;\n\n  if (allowedCalldata && allowedCalldata.length > 0 && exactCalldata) {\n    throw new Error(\n      'Cannot specify both allowedCalldata and exactCalldata. Please use only one calldata restriction type.',\n    );\n  }\n\n  const caveatBuilder = createCaveatBuilder(environment);\n\n  // Add calldata restrictions\n  if (allowedCalldata && allowedCalldata.length > 0) {\n    allowedCalldata.forEach((calldataConfig) => {\n      caveatBuilder.addCaveat('allowedCalldata', calldataConfig);\n    });\n  } else if (exactCalldata) {\n    caveatBuilder.addCaveat('exactCalldata', exactCalldata);\n  } else {\n    // Default behavior: only allow empty calldata\n    caveatBuilder.addCaveat('exactCalldata', {\n      calldata: '0x',\n    });\n  }\n\n  // Add native token streaming restriction\n  caveatBuilder.addCaveat('nativeTokenStreaming', {\n    initialAmount,\n    maxAmount,\n    amountPerSecond,\n    startTime,\n  });\n\n  return caveatBuilder;\n}\n", "import type { DeleGatorEnvironment } from '../../types';\nimport type { AllowedCalldataBuilderConfig } from '../allowedCalldataBuilder';\nimport { createCaveatBuilder } from '../coreCaveatBuilder';\nimport type { CoreCaveatBuilder } from '../coreCaveatBuilder';\nimport type { ExactCalldataBuilderConfig } from '../exactCalldataBuilder';\nimport type {\n  nativeTokenTransferAmount,\n  NativeTokenTransferAmountBuilderConfig,\n} from '../nativeTokenTransferAmountBuilder';\n\nexport type NativeTokenTransferScopeConfig = {\n  type: typeof nativeTokenTransferAmount;\n  allowedCalldata?: AllowedCalldataBuilderConfig[];\n  exactCalldata?: ExactCalldataBuilderConfig;\n} & NativeTokenTransferAmountBuilderConfig;\n\n/**\n * Creates a caveat builder configured for native token transfers with amount limits.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing native token transfer parameters.\n * @returns A configured caveat builder with native token transfer amount and exact calldata caveats.\n * @throws Error if any of the native token transfer parameters are invalid.\n * @throws Error if both allowedCalldata and exactCalldata are provided simultaneously.\n * @throws Error if the environment is not properly configured.\n */\nexport function createNativeTokenTransferCaveatBuilder(\n  environment: DeleGatorEnvironment,\n  config: NativeTokenTransferScopeConfig,\n): CoreCaveatBuilder {\n  const { maxAmount, allowedCalldata, exactCalldata } = config;\n\n  if (allowedCalldata && allowedCalldata.length > 0 && exactCalldata) {\n    throw new Error(\n      'Cannot specify both allowedCalldata and exactCalldata. Please use only one calldata restriction type.',\n    );\n  }\n\n  const caveatBuilder = createCaveatBuilder(environment);\n\n  // Add calldata restrictions\n  if (allowedCalldata && allowedCalldata.length > 0) {\n    allowedCalldata.forEach((calldataConfig) => {\n      caveatBuilder.addCaveat('allowedCalldata', calldataConfig);\n    });\n  } else if (exactCalldata) {\n    caveatBuilder.addCaveat('exactCalldata', exactCalldata);\n  } else {\n    // Default behavior: only allow empty calldata\n    caveatBuilder.addCaveat('exactCalldata', {\n      calldata: '0x',\n    });\n  }\n\n  // Add native token transfer amount restriction\n  caveatBuilder.addCaveat('nativeTokenTransferAmount', {\n    maxAmount,\n  });\n\n  return caveatBuilder;\n}\n", "import type { DeleGatorEnvironment } from '../../types';\nimport { hasProperties } from '../../utils';\nimport { createCaveatBuilder } from '../coreCaveatBuilder';\nimport type { CoreCaveatBuilder } from '../coreCaveatBuilder';\nimport type {\n  ownershipTransfer,\n  OwnershipTransferBuilderConfig,\n} from '../ownershipTransferBuilder';\n\ntype OwnershipScopeBaseConfig = {\n  type: typeof ownershipTransfer;\n};\n\nexport type OwnershipScopeConfig = OwnershipScopeBaseConfig &\n  OwnershipTransferBuilderConfig;\n\nconst isOwnershipTransferConfig = (\n  config: OwnershipScopeConfig,\n): config is OwnershipTransferBuilderConfig & OwnershipScopeBaseConfig => {\n  return hasProperties(\n    config as OwnershipTransferBuilderConfig & OwnershipScopeBaseConfig,\n    ['contractAddress'],\n  );\n};\n\n/**\n * Creates a caveat builder configured for ownership transfer unit of authority.\n *\n * @param environment - The DeleGator environment.\n * @param config - Configuration object containing the target contract.\n * @returns A configured caveat builder with the specified caveats.\n * @throws Error if any of the required parameters are invalid.\n */\nexport function createOwnershipCaveatBuilder(\n  environment: DeleGatorEnvironment,\n  config: OwnershipScopeConfig,\n): CoreCaveatBuilder {\n  if (!isOwnershipTransferConfig(config)) {\n    throw new Error('Invalid ownership transfer configuration');\n  }\n\n  const caveatBuilder = createCaveatBuilder(environment).addCaveat(\n    'ownershipTransfer',\n    config,\n  );\n\n  return caveatBuilder;\n}\n", "import {\n  type Erc20PeriodicScopeConfig,\n  createErc20PeriodicCaveatBuilder,\n} from './erc20PeriodicScope';\nimport {\n  type Erc20StreamingScopeConfig,\n  createErc20StreamingCaveatBuilder,\n} from './erc20StreamingScope';\nimport {\n  type Erc20TransferScopeConfig,\n  createErc20TransferCaveatBuilder,\n} from './erc20TransferScope';\nimport {\n  type Erc721ScopeConfig,\n  createErc721CaveatBuilder,\n} from './erc721Scope';\nimport {\n  createFunctionCallCaveatBuilder,\n  type FunctionCallScopeConfig,\n} from './functionCallScope';\nimport {\n  type NativeTokenPeriodicScopeConfig,\n  createNativeTokenPeriodicCaveatBuilder,\n} from './nativeTokenPeriodicScope';\nimport {\n  type NativeTokenStreamingScopeConfig,\n  createNativeTokenStreamingCaveatBuilder,\n} from './nativeTokenStreamingScope';\nimport {\n  type NativeTokenTransferScopeConfig,\n  createNativeTokenTransferCaveatBuilder,\n} from './nativeTokenTransferScope';\nimport {\n  createOwnershipCaveatBuilder,\n  type OwnershipScopeConfig,\n} from './ownershipScope';\nimport type { DeleGatorEnvironment } from '../../types';\n// Import caveat builder name constants\nimport { erc20PeriodTransfer } from '../erc20PeriodTransferBuilder';\nimport { erc20Streaming } from '../erc20StreamingBuilder';\nimport { erc20TransferAmount } from '../erc20TransferAmountBuilder';\nimport { erc721Transfer } from '../erc721TransferBuilder';\nimport { nativeTokenPeriodTransfer } from '../nativeTokenPeriodTransferBuilder';\nimport { nativeTokenStreaming } from '../nativeTokenStreamingBuilder';\nimport { nativeTokenTransferAmount } from '../nativeTokenTransferAmountBuilder';\nimport { ownershipTransfer } from '../ownershipTransferBuilder';\n\nexport type ScopeConfig =\n  | Erc20TransferScopeConfig\n  | Erc20StreamingScopeConfig\n  | Erc20PeriodicScopeConfig\n  | NativeTokenTransferScopeConfig\n  | NativeTokenStreamingScopeConfig\n  | NativeTokenPeriodicScopeConfig\n  | Erc721ScopeConfig\n  | OwnershipScopeConfig\n  | FunctionCallScopeConfig;\n\nexport const createCaveatBuilderFromScope = (\n  environment: DeleGatorEnvironment,\n  scopeConfig: ScopeConfig,\n) => {\n  switch (scopeConfig.type) {\n    case erc20TransferAmount:\n      return createErc20TransferCaveatBuilder(environment, scopeConfig);\n    case erc20Streaming:\n      return createErc20StreamingCaveatBuilder(environment, scopeConfig);\n    case erc20PeriodTransfer:\n      return createErc20PeriodicCaveatBuilder(environment, scopeConfig);\n    case nativeTokenTransferAmount:\n      return createNativeTokenTransferCaveatBuilder(environment, scopeConfig);\n    case nativeTokenStreaming:\n      return createNativeTokenStreamingCaveatBuilder(environment, scopeConfig);\n    case nativeTokenPeriodTransfer:\n      return createNativeTokenPeriodicCaveatBuilder(environment, scopeConfig);\n    case erc721Transfer:\n      return createErc721CaveatBuilder(environment, scopeConfig);\n    case ownershipTransfer:\n      return createOwnershipCaveatBuilder(environment, scopeConfig);\n    case 'functionCall':\n      return createFunctionCallCaveatBuilder(environment, scopeConfig);\n    default:\n      // eslint-disable-next-line no-case-declarations\n      const exhaustivenessCheck: never = scopeConfig;\n      throw new Error(\n        `Invalid scope type: ${(exhaustivenessCheck as { type: string }).type}`,\n      );\n  }\n};\n", "import type { CaveatBuilder } from './caveatBuilder';\nimport type { CoreCaveatConfiguration } from './coreCaveatBuilder';\nimport { createCaveatBuilderFromScope, type ScopeConfig } from './scope';\nimport type { Caveat, DeleGatorEnvironment } from '../types';\n\nexport type Caveats = CaveatBuilder | (Caveat | CoreCaveatConfiguration)[];\n\n/**\n * Resolves the array of Caveat from a Caveats argument.\n * @param config - The configuration for the caveat builder.\n * @param config.environment - The environment to be used for the caveat builder.\n * @param config.scope - The scope to be used for the caveat builder.\n * @param config.caveats - The caveats to be resolved, which can be either a CaveatBuilder or an array of Caveat or CaveatConfiguration. Optional - if not provided, only scope caveats will be used.\n * @returns The resolved array of caveats.\n */\nexport const resolveCaveats = ({\n  environment,\n  scope,\n  caveats,\n}: {\n  environment: DeleGatorEnvironment;\n  scope: ScopeConfig;\n  caveats?: Caveats;\n}) => {\n  const scopeCaveatBuilder = createCaveatBuilderFromScope(environment, scope);\n\n  if (caveats) {\n    if ('build' in caveats && typeof caveats.build === 'function') {\n      (caveats as CaveatBuilder).build().forEach((caveat) => {\n        scopeCaveatBuilder.addCaveat(caveat);\n      });\n    } else if (Array.isArray(caveats)) {\n      caveats.forEach((caveat) => {\n        try {\n          if ('type' in caveat) {\n            const { type, ...config } = caveat;\n            scopeCaveatBuilder.addCaveat(type, config);\n          } else {\n            scopeCaveatBuilder.addCaveat(caveat);\n          }\n        } catch (error) {\n          throw new Error(`Invalid caveat: ${(error as Error).message}`);\n        }\n      });\n    }\n  }\n\n  return scopeCaveatBuilder.build();\n};\n", "import {\n  type Hex,\n  encodePacked,\n  encodeAbiParameters,\n  parseAbiParameters,\n  keccak256,\n  toHex,\n} from 'viem';\n\nimport type { Caveat } from './types';\n\nexport const CAVEAT_ABI_TYPE_COMPONENTS = [\n  { type: 'address', name: 'enforcer' },\n  { type: 'bytes', name: 'terms' },\n  { type: 'bytes', name: 'args' },\n];\n\nexport const CAVEAT_TYPEHASH: Hex = keccak256(\n  toHex('Caveat(address enforcer,bytes terms)'),\n);\n\n/**\n * Calculates the hash of a single Caveat.\n * @param input - The Caveat data.\n * @returns The keccak256 hash of the encoded Caveat packet.\n */\nexport const getCaveatPacketHash = (input: Caveat): Hex => {\n  const encoded = encodeAbiParameters(\n    parseAbiParameters('bytes32, address, bytes32'),\n    [CAVEAT_TYPEHASH, input.enforcer, keccak256(input.terms)],\n  );\n  return keccak256(encoded);\n};\n\n/**\n * Calculates the hash of an array of Caveats.\n * @param input - The array of Caveats.\n * @returns The keccak256 hash of the encoded Caveat array packet.\n */\nexport const getCaveatArrayPacketHash = (input: Caveat[]): Hex => {\n  let encoded: Hex = '0x';\n\n  for (const caveat of input) {\n    const caveatPacketHash = getCaveatPacketHash(caveat);\n    encoded = encodePacked(['bytes', 'bytes32'], [encoded, caveatPacketHash]);\n  }\n  return keccak256(encoded);\n};\n\n/**\n * Creates a caveat.\n * @param enforcer - The contract that guarantees the caveat is upheld.\n * @param terms - The data that the enforcer will use to verify the caveat (unique per enforcer).\n * @param args - Additional arguments for the caveat (optional).\n * @returns A Caveat.\n */\nexport const createCaveat = (\n  enforcer: Hex,\n  terms: Hex,\n  args: Hex = '0x',\n): Caveat => ({\n  enforcer,\n  terms,\n  args,\n});\n", "import {\n  encodeDelegations as encodeDelegationsCore,\n  decodeDelegations as decodeDelegationsCore,\n  hashDelegation,\n  ANY_BENEFICIARY,\n  DELEGATION_TYPEHASH,\n  CAVEAT_TYPEHASH,\n  ROOT_AUTHORITY,\n} from '@metamask/delegation-core';\nimport { hashMessage, toBytes, toHex, getAddress } from 'viem';\nimport type { TypedData, AbiParameter, Address, Hex } from 'viem';\nimport { signTypedData } from 'viem/accounts';\n\nimport { type Caveats, resolveCaveats } from './caveatBuilder';\nimport type { ScopeConfig } from './caveatBuilder/scope';\nimport { CAVEAT_ABI_TYPE_COMPONENTS } from './caveats';\nimport type { Delegation, DeleGatorEnvironment } from './types';\n\nexport {\n  ANY_BENEFICIARY,\n  DELEGATION_TYPEHASH,\n  CAVEAT_TYPEHASH,\n  ROOT_AUTHORITY,\n};\n\n/**\n * The ABI type components of a Delegation.\n */\nexport const DELEGATION_ABI_TYPE_COMPONENTS = [\n  { type: 'address', name: 'delegate' },\n  { type: 'address', name: 'delegator' },\n  { type: 'bytes32', name: 'authority' },\n  { type: 'tuple[]', name: 'caveats', components: CAVEAT_ABI_TYPE_COMPONENTS },\n  { type: 'uint256', name: 'salt' },\n  { type: 'bytes', name: 'signature' },\n];\n\n/**\n * Converts a delegation to a delegation struct.\n * @param delegation - The delegation to convert.\n * @returns The delegation struct.\n */\nexport const toDelegationStruct = (\n  delegation: Delegation,\n): DelegationStruct => {\n  const caveats = delegation.caveats.map((caveat) => ({\n    enforcer: getAddress(caveat.enforcer),\n    terms: caveat.terms,\n    args: caveat.args,\n  }));\n\n  const salt = delegation.salt === '0x' ? 0n : BigInt(delegation.salt);\n\n  return {\n    delegate: getAddress(delegation.delegate),\n    delegator: getAddress(delegation.delegator),\n    authority:\n      delegation.authority === undefined\n        ? ROOT_AUTHORITY\n        : delegation.authority,\n    caveats,\n    salt,\n    signature: delegation.signature,\n  };\n};\n\n/**\n * Converts a DelegationStruct to a Delegation.\n * The Delegation type is used for off-chain operations and has a hex string salt.\n * @param delegationStruct - The delegation struct to convert\n * @returns The converted delegation with a hex string salt\n */\n\nexport const toDelegation = (\n  delegationStruct: DelegationStruct,\n): Delegation => {\n  return {\n    ...delegationStruct,\n    salt: toHex(delegationStruct.salt),\n  };\n};\n\n/**\n * Represents a DelegationStruct as defined in the Delegation Framework.\n * This is distinguished from the Delegation type by requiring the salt to be a bigint\n * instead of a Hex string, which is useful for on-chain operations and EIP-712 signing.\n */\nexport type DelegationStruct = Omit<Delegation, 'salt'> & {\n  salt: bigint;\n};\n\n/**\n * ABI Encodes an array of delegations.\n * @param delegations - The delegations to encode.\n * @returns The encoded delegations.\n */\nexport const encodeDelegations = (delegations: Delegation[]): Hex => {\n  const delegationStructs = delegations.map(toDelegationStruct);\n\n  return encodeDelegationsCore(delegationStructs);\n};\n\n/**\n * Abi encodes permission contexts.\n * @param delegations - The delegation chains to encode.\n * @returns The encoded permission contexts.\n */\nexport const encodePermissionContexts = (delegations: Delegation[][]) => {\n  const encodedDelegations = delegations.map((delegationChain) =>\n    encodeDelegations(delegationChain),\n  );\n\n  return encodedDelegations;\n};\n\n/**\n * Decodes an array of delegations from its ABI-encoded representation.\n * @param encoded - The hex-encoded delegation array to decode.\n * @returns An array of decoded delegations.\n */\nexport const decodeDelegations = (encoded: Hex): Delegation[] => {\n  // decodeDelegationsCore returns DelegationStruct, so we need to map it back to Delegation\n  return decodeDelegationsCore(encoded).map(toDelegation);\n};\n\n/**\n * Decodes an array of encoded permission contexts into an array of delegation chains.\n * @param encoded - The hex-encoded permission context to decode.\n * @returns An array of decoded delegations.\n */\nexport const decodePermissionContexts = (encoded: Hex[]): Delegation[][] => {\n  const delegationChains = encoded.map(decodeDelegations);\n\n  return delegationChains;\n};\n\n/**\n * TypedData to be used when signing a Delegation. Delegation value for `signature` and Caveat values for `args` are omitted as they cannot be known at signing time.\n */\nexport const SIGNABLE_DELEGATION_TYPED_DATA: TypedData = {\n  Caveat: [\n    { name: 'enforcer', type: 'address' },\n    { name: 'terms', type: 'bytes' },\n  ],\n  Delegation: [\n    { name: 'delegate', type: 'address' },\n    { name: 'delegator', type: 'address' },\n    { name: 'authority', type: 'bytes32' },\n    { name: 'caveats', type: 'Caveat[]' },\n    { name: 'salt', type: 'uint256' },\n  ],\n} as const;\n\n/**\n * The ABI type for a full delegation.\n */\nexport const DELEGATION_ARRAY_ABI_TYPE: AbiParameter = {\n  type: 'tuple[]',\n  components: DELEGATION_ABI_TYPE_COMPONENTS,\n} as const;\n\n/**\n * Prepares a delegation hash for passkey signing.\n * @param delegationHash - The delegation hash to prepare.\n * @returns The prepared hash for passkey signing.\n */\nexport const prepDelegationHashForPasskeySign = (delegationHash: Hex) => {\n  return hashMessage({\n    raw: toBytes(delegationHash),\n  });\n};\n\n/**\n * Gets a delegation hash offchain.\n * @param input - The delegation to get the hash for.\n * @returns The hash of the delegation parameters.\n */\nexport const getDelegationHashOffchain = (input: Delegation): Hex => {\n  const delegationStruct = toDelegationStruct(input);\n\n  return hashDelegation(delegationStruct);\n};\n\ntype BaseCreateDelegationOptions = {\n  environment: DeleGatorEnvironment;\n  scope: ScopeConfig;\n  from: Hex;\n  caveats?: Caveats;\n  parentDelegation?: Delegation | Hex;\n  salt?: Hex;\n};\n\n/**\n * Options for creating a specific delegation\n */\nexport type CreateDelegationOptions = BaseCreateDelegationOptions & {\n  to: Hex;\n};\n\n/**\n * Options for creating an open delegation\n */\nexport type CreateOpenDelegationOptions = BaseCreateDelegationOptions;\n\n/**\n * Resolves the authority for a delegation based on the parent delegation.\n * @param parentDelegation - The parent delegation or its hash.\n * @returns The resolved authority hash.\n */\nexport const resolveAuthority = (parentDelegation?: Delegation | Hex): Hex => {\n  if (!parentDelegation) {\n    return ROOT_AUTHORITY;\n  }\n\n  if (typeof parentDelegation === 'string') {\n    return parentDelegation;\n  }\n\n  return getDelegationHashOffchain(parentDelegation);\n};\n\n/**\n * Creates a delegation with specific delegate.\n * @param options - The options for creating the delegation.\n * @returns The created delegation data structure.\n */\nexport const createDelegation = (\n  options: CreateDelegationOptions,\n): Delegation => {\n  return {\n    delegate: options.to,\n    delegator: options.from,\n    authority: resolveAuthority(options.parentDelegation),\n    caveats: resolveCaveats(options),\n    salt: options.salt ?? '0x',\n    signature: '0x',\n  };\n};\n\n/**\n * Creates an open delegation that can be redeemed by any delegate.\n * @param options - The options for creating the open delegation.\n * @returns The created delegation data structure.\n */\nexport const createOpenDelegation = (\n  options: CreateOpenDelegationOptions,\n): Delegation => {\n  return {\n    delegate: ANY_BENEFICIARY,\n    delegator: options.from,\n    authority: resolveAuthority(options.parentDelegation),\n    caveats: resolveCaveats(options),\n    salt: options.salt ?? '0x',\n    signature: '0x',\n  };\n};\n\n/**\n * Prepares typed data for delegation signing (internal helper function).\n * @param params - The parameters for preparing the typed data.\n * @param params.delegation - The delegation to prepare for signing.\n * @param params.delegationManager - The address of the delegation manager contract.\n * @param params.chainId - The chain ID for the signature.\n * @param params.name - The name of the contract.\n * @param params.version - The version of the contract.\n * @param params.allowInsecureUnrestrictedDelegation - Whether to allow insecure unrestricted delegation.\n * @returns The typed data parameters ready for signing.\n * @internal\n */\nexport const prepareSignDelegationTypedData = ({\n  delegation,\n  delegationManager,\n  chainId,\n  name = 'DelegationManager',\n  version = '1',\n  allowInsecureUnrestrictedDelegation = false,\n}: {\n  delegation: Omit<Delegation, 'signature'>;\n  delegationManager: Address;\n  chainId: number;\n  name?: string;\n  version?: string;\n  allowInsecureUnrestrictedDelegation?: boolean;\n}) => {\n  const delegationStruct = toDelegationStruct({\n    ...delegation,\n    signature: '0x',\n  });\n\n  if (\n    delegationStruct.caveats.length === 0 &&\n    !allowInsecureUnrestrictedDelegation\n  ) {\n    throw new Error(\n      'No caveats found. If you definitely want to sign a delegation without caveats, set `allowInsecureUnrestrictedDelegation` to `true`.',\n    );\n  }\n\n  return {\n    domain: {\n      chainId,\n      name,\n      version,\n      verifyingContract: delegationManager,\n    },\n    types: SIGNABLE_DELEGATION_TYPED_DATA,\n    primaryType: 'Delegation' as const,\n    message: delegationStruct,\n  };\n};\n\n/**\n * Signs a delegation using a private key.\n * @param params - The parameters for signing the delegation.\n * @param params.privateKey - The private key to use for signing.\n * @param params.delegation - The delegation to sign.\n * @param params.delegationManager - The address of the delegation manager contract.\n * @param params.chainId - The chain ID for the signature.\n * @param params.name - The name of the contract.\n * @param params.version - The version of the contract.\n * @param params.allowInsecureUnrestrictedDelegation - Whether to allow insecure unrestricted delegation.\n * @returns The signed delegation.\n */\nexport const signDelegation = async ({\n  privateKey,\n  delegation,\n  delegationManager,\n  chainId,\n  name = 'DelegationManager',\n  version = '1',\n  allowInsecureUnrestrictedDelegation = false,\n}: {\n  privateKey: Hex;\n  delegation: Omit<Delegation, 'signature'>;\n  delegationManager: Address;\n  chainId: number;\n  name?: string;\n  version?: string;\n  allowInsecureUnrestrictedDelegation?: boolean;\n}) => {\n  const typedData = prepareSignDelegationTypedData({\n    delegation,\n    delegationManager,\n    chainId,\n    name,\n    version,\n    allowInsecureUnrestrictedDelegation,\n  });\n\n  return signTypedData({\n    privateKey,\n    ...typedData,\n  });\n};\n", "export const abi = [\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressEmptyCode\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressInsufficientBalance\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedInnerCall\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a050c4fa34153d3fae9d282b8c08f593842bb7e1d0caa440348574559167b6a64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"allowedMethods_\",\n        \"type\": \"bytes4[]\",\n        \"internalType\": \"bytes4[]\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506107fc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a366004610512565b50505050505050505050565b005b610076610086366004610512565b6100b4565b61009e6100993660046105df565b610197565b6040516100ab9190610621565b60405180910390f35b856100c08160006102e5565b6101115760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6101228160006102e5565b61017c5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610108565b506101898c8c89896102fc565b505050505050505050505050565b60606000826101a7600482610685565b1580156101b357508015155b6102135760405162461bcd60e51b815260206004820152602b60248201527f416c6c6f7765644d6574686f6473456e666f726365723a696e76616c69642d7460448201526a0cae4dae65ad8cadccee8d60ab1b6064820152608401610108565b61021e6004826106af565b67ffffffffffffffff811115610236576102366106c3565b60405190808252806020026020018201604052801561025f578160200160208202803683370190505b50925060005b818110156102dc5785818661027b8260046106d9565b92610288939291906106ec565b61029191610716565b8484815181106102a3576102a3610746565b6001600160e01b031990921660209283029190910190910152826102c68161075c565b93506102d590506004826106d9565b9050610265565b50505092915050565b6001600160f81b0319828116908216145b92915050565b366000610309848461045c565b90945092505050600481101561037e5760405162461bcd60e51b815260206004820152603460248201527f416c6c6f7765644d6574686f6473456e666f726365723a696e76616c69642d656044820152730f0cac6eae8d2dedc5ac8c2e8c25ad8cadccee8d60631b6064820152608401610108565b600061038d60048284866106ec565b61039691610716565b905060006103a48888610197565b805190915060005b818110156103fb578281815181106103c6576103c6610746565b60200260200101516001600160e01b031916846001600160e01b031916036103f357505050505050610456565b6001016103ac565b5060405162461bcd60e51b815260206004820152602960248201527f416c6c6f7765644d6574686f6473456e666f726365723a6d6574686f642d6e6f6044820152681d0b585b1b1bddd95960ba1b6064820152608401610108565b50505050565b600080368161046e60148287896106ec565b61047791610775565b60601c935061048a6034601487896106ec565b610493916107a8565b92506104a285603481896106ec565b949793965094505050565b60008083601f8401126104bf57600080fd5b50813567ffffffffffffffff8111156104d757600080fd5b6020830191508360208285010111156104ef57600080fd5b9250929050565b80356001600160a01b038116811461050d57600080fd5b919050565b60008060008060008060008060008060e08b8d03121561053157600080fd5b8a3567ffffffffffffffff8082111561054957600080fd5b6105558e838f016104ad565b909c509a5060208d013591508082111561056e57600080fd5b61057a8e838f016104ad565b909a50985060408d0135975060608d013591508082111561059a57600080fd5b506105a78d828e016104ad565b90965094505060808b013592506105c060a08c016104f6565b91506105ce60c08c016104f6565b90509295989b9194979a5092959850565b600080602083850312156105f257600080fd5b823567ffffffffffffffff81111561060957600080fd5b610615858286016104ad565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156106635783516001600160e01b0319168352928401929184019160010161063d565b50909695505050505050565b634e487b7160e01b600052601260045260246000fd5b6000826106945761069461066f565b500690565b634e487b7160e01b600052601160045260246000fd5b6000826106be576106be61066f565b500490565b634e487b7160e01b600052604160045260246000fd5b808201808211156102f6576102f6610699565b600080858511156106fc57600080fd5b8386111561070957600080fd5b5050820193919092039150565b6001600160e01b0319813581811691600485101561073e5780818660040360031b1b83161692505b505092915050565b634e487b7160e01b600052603260045260246000fd5b60006001820161076e5761076e610699565b5060010190565b6bffffffffffffffffffffffff19813581811691601485101561073e5760149490940360031b84901b1690921692915050565b803560208310156102f657600019602084900360031b1b169291505056fea26469706673582212200b708c0be5e7b588370a3a50ea4c9e1f7cb79f4e1abc8d9c979a4f6d6867e5ae64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"allowedTargets_\",\n        \"type\": \"address[]\",\n        \"internalType\": \"address[]\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610736806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a36600461047b565b50505050505050505050565b005b61007661008636600461047b565b6100b4565b61009e610099366004610548565b61025e565b6040516100ab919061058a565b60405180910390f35b856100c08160006103ae565b6101115760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6101228160006103ae565b61017c5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610108565b50600061018988886103c5565b5050509050600061019a8e8e61025e565b805190915060005b818110156101ed578281815181106101bc576101bc6105d7565b60200260200101516001600160a01b0316846001600160a01b0316036101e55750505050610250565b6001016101a2565b5060405162461bcd60e51b815260206004820152603160248201527f416c6c6f77656454617267657473456e666f726365723a7461726765742d6164604482015270191c995cdccb5b9bdd0b585b1b1bddd959607a1b6064820152608401610108565b505050505050505050505050565b606060008261026e601482610603565b15801561027a57508015155b6102da5760405162461bcd60e51b815260206004820152602b60248201527f416c6c6f77656454617267657473456e666f726365723a696e76616c69642d7460448201526a0cae4dae65ad8cadccee8d60ab1b6064820152608401610108565b6102e560148261062d565b67ffffffffffffffff8111156102fd576102fd610641565b604051908082528060200260200182016040528015610326578160200160208202803683370190505b50925060005b818110156103a557858186610342826014610657565b9261034f9392919061066a565b61035891610694565b60601c84848151811061036d5761036d6105d7565b6001600160a01b03909216602092830291909101909101528261038f816106c9565b935061039e9050601482610657565b905061032c565b50505092915050565b6001600160f81b0319828116908216145b92915050565b60008036816103d7601482878961066a565b6103e091610694565b60601c93506103f360346014878961066a565b6103fc916106e2565b925061040b856034818961066a565b949793965094505050565b60008083601f84011261042857600080fd5b50813567ffffffffffffffff81111561044057600080fd5b60208301915083602082850101111561045857600080fd5b9250929050565b80356001600160a01b038116811461047657600080fd5b919050565b60008060008060008060008060008060e08b8d03121561049a57600080fd5b8a3567ffffffffffffffff808211156104b257600080fd5b6104be8e838f01610416565b909c509a5060208d01359150808211156104d757600080fd5b6104e38e838f01610416565b909a50985060408d0135975060608d013591508082111561050357600080fd5b506105108d828e01610416565b90965094505060808b0135925061052960a08c0161045f565b915061053760c08c0161045f565b90509295989b9194979a5092959850565b6000806020838503121561055b57600080fd5b823567ffffffffffffffff81111561057257600080fd5b61057e85828601610416565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156105cb5783516001600160a01b0316835292840192918401916001016105a6565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082610612576106126105ed565b500690565b634e487b7160e01b600052601160045260246000fd5b60008261063c5761063c6105ed565b500490565b634e487b7160e01b600052604160045260246000fd5b808201808211156103bf576103bf610617565b6000808585111561067a57600080fd5b8386111561068757600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156106c15780818660140360031b1b83161692505b505092915050565b6000600182016106db576106db610617565b5060010190565b803560208310156103bf57600019602084900360031b1b169291505056fea2646970667358221220192854344f7cbe5e3a46630068ff1c57d1382d110f4c7dae36ce8f18206bd1c864736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088f05df9a321ebbfd15b9ae491704455fd55c5a0ef490ba4f3111c5cd7aa944764736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba35151db75ea04dd32865d4b2bd18ac453d87dfd60b81ec325260f801c1709564736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"DifferentArgsAndTerms\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"terms\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"args\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506103b7806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063414c3e3314610051578063a145832a1461006d578063d3eddcc514610051578063ed46336714610051575b600080fd5b61006b61005f366004610249565b50505050505050505050565b005b61006b61007b366004610249565b85600881901b6001600160f81b03198116156100ec5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b5088886040516100fd929190610316565b60405180910390208b8b604051610115929190610316565b6040518091039020146101d75783826001600160a01b0316336001600160a01b03167f07fc5f2898fc1f1cf9d6012177b7abb8d010b9e64055979af3a5bcd274e2a11a8e8e8e8e60405161016c949392919061034f565b60405180910390a460405162461bcd60e51b815260206004820152603260248201527f41726773457175616c697479436865636b456e666f726365723a646966666572604482015271656e742d617267732d616e642d7465726d7360701b60648201526084016100e3565b5050505050505050505050565b60008083601f8401126101f657600080fd5b50813567ffffffffffffffff81111561020e57600080fd5b60208301915083602082850101111561022657600080fd5b9250929050565b80356001600160a01b038116811461024457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561026857600080fd5b8a3567ffffffffffffffff8082111561028057600080fd5b61028c8e838f016101e4565b909c509a5060208d01359150808211156102a557600080fd5b6102b18e838f016101e4565b909a50985060408d0135975060608d01359150808211156102d157600080fd5b506102de8d828e016101e4565b90965094505060808b013592506102f760a08c0161022d565b915061030560c08c0161022d565b90509295989b9194979a5092959850565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081526000610363604083018688610326565b8281036020840152610376818587610326565b97965050505050505056fea264697066735822122078e67ed2011e86335117ad2962f5a7ffbe2179a19bda7b4e0f3c3beff2ca893c64736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"error\",\n    \"name\": \"Create2EmptyBytecode\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"Create2FailedDeployment\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"Create2InsufficientBalance\",\n    \"inputs\": [\n      {\n        \"name\": \"balance\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"needed\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010c6b66ba2fc3a92f070bf47f6d02e68772a73d44eed07c73bca1c9f7fab44e964736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"receive\",\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"PACKED_USER_OP_TYPEHASH\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"UPGRADE_INTERFACE_VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addDeposit\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegationManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"disableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"eip712Domain\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"fields\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"bytes1\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"version\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"verifyingContract\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"extensions\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"enableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"entryPoint\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_execution\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Execution\",\n        \"components\": [\n          {\n            \"name\": \"target\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"executeFromExecutor\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"returnData_\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDeposit\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDomainHash\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getImplementation\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getInitializedVersion\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint64\",\n        \"internalType\": \"uint64\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"_key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationTypedDataHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isDelegationDisabled\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isValidSignature\",\n    \"inputs\": [\n      {\n        \"name\": \"_hash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_signature\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"magicValue_\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155BatchReceived\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC721Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"proxiableUUID\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"redeemDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"_permissionContexts\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      },\n      {\n        \"name\": \"_modes\",\n        \"type\": \"bytes32[]\",\n        \"internalType\": \"ModeCode[]\"\n      },\n      {\n        \"name\": \"_executionCallDatas\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"_interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"upgradeToAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"_newImplementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"upgradeToAndCallAndRetainStorage\",\n    \"inputs\": [\n      {\n        \"name\": \"_newImplementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"validateUserOp\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_missingAccountFunds\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"validationData_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawDeposit\",\n    \"inputs\": [\n      {\n        \"name\": \"_withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      },\n      {\n        \"name\": \"_withdrawAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ClearedStorage\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EIP712DomainChanged\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Initialized\",\n    \"inputs\": [\n      {\n        \"name\": \"version\",\n        \"type\": \"uint64\",\n        \"indexed\": false,\n        \"internalType\": \"uint64\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SentPrefund\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"success\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetDelegationManager\",\n    \"inputs\": [\n      {\n        \"name\": \"newDelegationManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetEntryPoint\",\n    \"inputs\": [\n      {\n        \"name\": \"entryPoint\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TryExecuteUnsuccessful\",\n    \"inputs\": [\n      {\n        \"name\": \"batchExecutionindex\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"result\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Upgraded\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressEmptyCode\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967InvalidImplementation\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967NonPayable\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ExecutionFailed\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedInnerCall\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidInitialization\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidShortString\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotDelegationManager\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPoint\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPointOrSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotInitializing\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"StringTooLong\",\n    \"inputs\": [\n      {\n        \"name\": \"str\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UUPSUnauthorizedCallContext\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UUPSUnsupportedProxiableUUID\",\n    \"inputs\": [\n      {\n        \"name\": \"slot\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedCallType\",\n    \"inputs\": [\n      {\n        \"name\": \"callType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"CallType\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedExecType\",\n    \"inputs\": [\n      {\n        \"name\": \"execType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"ExecType\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"_owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_swapApiSigner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      },\n      {\n        \"name\": \"_metaSwap\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IMetaSwap\"\n      },\n      {\n        \"name\": \"_argsEqualityCheckEnforcer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"receive\",\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"WHITELIST_ENFORCED\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"WHITELIST_NOT_ENFORCED\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"acceptOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"argsEqualityCheckEnforcer\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegationManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"executeFromExecutor\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"returnData_\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isAggregatorAllowed\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregatorIdHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"allowed\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isTokenAllowed\",\n    \"inputs\": [\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IERC20\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"allowed\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"metaSwap\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IMetaSwap\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"pendingOwner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"renounceOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"setSwapApiSigner\",\n    \"inputs\": [\n      {\n        \"name\": \"_newSigner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"swapApiSigner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"swapByDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_signatureData\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct DelegationMetaSwapAdapter.SignatureData\",\n        \"components\": [\n          {\n            \"name\": \"apiData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"expiration\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"_delegations\",\n        \"type\": \"tuple[]\",\n        \"internalType\": \"struct Delegation[]\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"_useTokenWhitelist\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"swapTokens\",\n    \"inputs\": [\n      {\n        \"name\": \"_aggregatorId\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"_tokenFrom\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IERC20\"\n      },\n      {\n        \"name\": \"_tokenTo\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IERC20\"\n      },\n      {\n        \"name\": \"_recipient\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_amountFrom\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"_balanceFromBefore\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"_swapData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"updateAllowedAggregatorIds\",\n    \"inputs\": [\n      {\n        \"name\": \"_aggregatorIds\",\n        \"type\": \"string[]\",\n        \"internalType\": \"string[]\"\n      },\n      {\n        \"name\": \"_statuses\",\n        \"type\": \"bool[]\",\n        \"internalType\": \"bool[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"updateAllowedTokens\",\n    \"inputs\": [\n      {\n        \"name\": \"_tokens\",\n        \"type\": \"address[]\",\n        \"internalType\": \"contract IERC20[]\"\n      },\n      {\n        \"name\": \"_statuses\",\n        \"type\": \"bool[]\",\n        \"internalType\": \"bool[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdraw\",\n    \"inputs\": [\n      {\n        \"name\": \"_token\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IERC20\"\n      },\n      {\n        \"name\": \"_amount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"_recipient\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ChangedAggregatorIdStatus\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregatorIdHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"aggregatorId\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"status\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ChangedTokenStatus\",\n    \"inputs\": [\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"contract IERC20\"\n      },\n      {\n        \"name\": \"status\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferStarted\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SentTokens\",\n    \"inputs\": [\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IERC20\"\n      },\n      {\n        \"name\": \"recipient\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetArgsEqualityCheckEnforcer\",\n    \"inputs\": [\n      {\n        \"name\": \"newArgsEqualityCheckEnforcer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetDelegationManager\",\n    \"inputs\": [\n      {\n        \"name\": \"newDelegationManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetMetaSwap\",\n    \"inputs\": [\n      {\n        \"name\": \"newMetaSwap\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IMetaSwap\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SwapApiSignerUpdated\",\n    \"inputs\": [\n      {\n        \"name\": \"newSigner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TryExecuteUnsuccessful\",\n    \"inputs\": [\n      {\n        \"name\": \"batchExecutionindex\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"result\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressEmptyCode\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressInsufficientBalance\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AggregatorIdIsNotAllowed\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregatorId\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AmountFromMismatch\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureLength\",\n    \"inputs\": [\n      {\n        \"name\": \"length\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureS\",\n    \"inputs\": [\n      {\n        \"name\": \"s\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ExecutionFailed\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedInnerCall\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedNativeTokenTransfer\",\n    \"inputs\": [\n      {\n        \"name\": \"recipient\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InputLengthsMismatch\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InsufficientTokens\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidApiSignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidEmptyDelegations\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidIdenticalTokens\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidSwapFunctionSelector\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidZeroAddress\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"MissingArgsEqualityCheckEnforcer\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotDelegationManager\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotLeafDelegator\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableInvalidOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableUnauthorizedAccount\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SafeERC20FailedOperation\",\n    \"inputs\": [\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SignatureExpired\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"TokenFromIsNotAllowed\",\n    \"inputs\": [\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IERC20\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"TokenFromMismatch\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"TokenToIsNotAllowed\",\n    \"inputs\": [\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IERC20\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedCallType\",\n    \"inputs\": [\n      {\n        \"name\": \"callType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"CallType\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedExecType\",\n    \"inputs\": [\n      {\n        \"name\": \"execType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"ExecType\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"blockAfterThreshold_\",\n        \"type\": \"uint128\",\n        \"internalType\": \"uint128\"\n      },\n      {\n        \"name\": \"blockBeforeThreshold_\",\n        \"type\": \"uint128\",\n        \"internalType\": \"uint128\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506104ed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a366004610345565b50505050505050505050565b005b610076610086366004610345565b6100c2565b61009e610099366004610412565b61023e565b604080516001600160801b0393841681529290911660208301520160405180910390f35b85600881901b6001600160f81b03198116156101335760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b506000806101418d8d61023e565b90925090506001600160801b038216156101b957816001600160801b031643116101b95760405162461bcd60e51b8152602060048201526024808201527f426c6f636b4e756d626572456e666f726365723a6561726c792d64656c6567616044820152633a34b7b760e11b606482015260840161012a565b6001600160801b0381161561022f57806001600160801b0316431061022f5760405162461bcd60e51b815260206004820152602660248201527f426c6f636b4e756d626572456e666f726365723a657870697265642d64656c6560448201526533b0ba34b7b760d11b606482015260840161012a565b50505050505050505050505050565b600080602083146102a25760405162461bcd60e51b815260206004820152602860248201527f426c6f636b4e756d626572456e666f726365723a696e76616c69642d7465726d6044820152670e65ad8cadccee8d60c31b606482015260840161012a565b6102b0601060008587610454565b6102b99161047e565b60801c91506102cb8360108187610454565b6102d49161047e565b60801c90509250929050565b60008083601f8401126102f257600080fd5b50813567ffffffffffffffff81111561030a57600080fd5b60208301915083602082850101111561032257600080fd5b9250929050565b80356001600160a01b038116811461034057600080fd5b919050565b60008060008060008060008060008060e08b8d03121561036457600080fd5b8a3567ffffffffffffffff8082111561037c57600080fd5b6103888e838f016102e0565b909c509a5060208d01359150808211156103a157600080fd5b6103ad8e838f016102e0565b909a50985060408d0135975060608d01359150808211156103cd57600080fd5b506103da8d828e016102e0565b90965094505060808b013592506103f360a08c01610329565b915061040160c08c01610329565b90509295989b9194979a5092959850565b6000806020838503121561042557600080fd5b823567ffffffffffffffff81111561043c57600080fd5b610448858286016102e0565b90969095509350505050565b6000808585111561046457600080fd5b8386111561047157600080fd5b5050820193919092039150565b6fffffffffffffffffffffffffffffffff1981358181169160108510156104af5780818660100360031b1b83161692505b50509291505056fea2646970667358221220e786ddc75b5e54c089f23ff0a2c6c7b67417725b5021ebc3aa3b2726c852e6cb64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"computeAddress\",\n    \"inputs\": [\n      {\n        \"name\": \"_bytecodeHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"addr_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"expectedAddress_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"salt_\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"bytecode_\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"DeployedContract\",\n    \"inputs\": [\n      {\n        \"name\": \"contractAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SkippedDeployment\",\n    \"inputs\": [\n      {\n        \"name\": \"contractAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"Create2EmptyBytecode\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"Create2FailedDeployment\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"Create2InsufficientBalance\",\n    \"inputs\": [\n      {\n        \"name\": \"balance\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"needed\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"DeployedEmptyContract\",\n    \"inputs\": [\n      {\n        \"name\": \"contractAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610748806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063414c3e3314610067578063481286e614610083578063a145832a146100b3578063b99deb0e146100c6578063d3eddcc514610067578063ed46336714610067575b600080fd5b6100816100753660046104fe565b50505050505050505050565b005b6100966100913660046105cb565b6100e8565b6040516001600160a01b0390911681526020015b60405180910390f35b6100816100c13660046104fe565b6100fd565b6100d96100d43660046105ed565b61026d565b6040516100aa9392919061062f565b60006100f48284610353565b90505b92915050565b85600881901b6001600160f81b031981161561016e5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b50600080600061017e8e8e61026d565b919450925090506001600160a01b0383163b156101d9576040516001600160a01b03841681527f641dafeb23238fae3ef71c64fced975da90c34dede63890507f3dda6b1e0dfef9060200160405180910390a1505050610260565b60006101e58284610360565b9050836001600160a01b0316816001600160a01b03161461025b5760405162461bcd60e51b815260206004820152602a60248201527f4465706c6f796564456e666f726365723a6465706c6f7965642d6164647265736044820152690e65adad2e6dac2e8c6d60b31b6064820152608401610165565b505050505b5050505050505050505050565b6000806060603484116102d05760405162461bcd60e51b815260206004820152602560248201527f4465706c6f796564456e666f726365723a696e76616c69642d7465726d732d6c6044820152640cadccee8d60db1b6064820152608401610165565b6102de601460008688610695565b6102e7916106bf565b60601c92506102fa603460148688610695565b610303916106f4565b91506103128460348188610695565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509598949750919550929350505050565b60006100f48383306103e8565b600061036e60008385610412565b9050806001600160a01b03163b6000036103a6576040516352c7cd4960e11b81526001600160a01b0382166004820152602401610165565b6040516001600160a01b03821681527faf3c4b03f515b5a38f3c238fdc24abf10854a2f27f2a85743a71de17e9bc7e7f9060200160405180910390a192915050565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b60008347101561043e5760405163392efb2b60e21b815247600482015260248101859052604401610165565b815160000361046057604051631328927760e21b815260040160405180910390fd5b8282516020840186f590506001600160a01b03811661049257604051633a0ba96160e11b815260040160405180910390fd5b9392505050565b60008083601f8401126104ab57600080fd5b50813567ffffffffffffffff8111156104c357600080fd5b6020830191508360208285010111156104db57600080fd5b9250929050565b80356001600160a01b03811681146104f957600080fd5b919050565b60008060008060008060008060008060e08b8d03121561051d57600080fd5b8a3567ffffffffffffffff8082111561053557600080fd5b6105418e838f01610499565b909c509a5060208d013591508082111561055a57600080fd5b6105668e838f01610499565b909a50985060408d0135975060608d013591508082111561058657600080fd5b506105938d828e01610499565b90965094505060808b013592506105ac60a08c016104e2565b91506105ba60c08c016104e2565b90509295989b9194979a5092959850565b600080604083850312156105de57600080fd5b50508035926020909101359150565b6000806020838503121561060057600080fd5b823567ffffffffffffffff81111561061757600080fd5b61062385828601610499565b90969095509350505050565b60018060a01b03841681526000602084602084015260606040840152835180606085015260005b8181101561067257858101830151858201608001528201610656565b506000608082860101526080601f19601f83011685010192505050949350505050565b600080858511156106a557600080fd5b838611156106b257600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156106ec5780818660140360031b1b83161692505b505092915050565b803560208310156100f757600019602084900360031b1b169291505056fea264697066735822122012632a27b82f8f9b4b083a1f26c705dcd1ceb840e52519ff7902232eb956870464736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201124664c489cae3f1f240552ace1b72f497b65d8c9bdbce66e0c2b36268dcd2c64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"receive\",\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"PACKED_USER_OP_TYPEHASH\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addDeposit\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegationManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"disableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"eip712Domain\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"fields\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"bytes1\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"version\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"verifyingContract\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"extensions\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"enableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"entryPoint\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_execution\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Execution\",\n        \"components\": [\n          {\n            \"name\": \"target\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"executeFromExecutor\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"returnData_\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDeposit\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDomainHash\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"_key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationTypedDataHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isDelegationDisabled\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isValidSignature\",\n    \"inputs\": [\n      {\n        \"name\": \"_hash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_signature\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"magicValue_\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155BatchReceived\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC721Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"redeemDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"_permissionContexts\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      },\n      {\n        \"name\": \"_modes\",\n        \"type\": \"bytes32[]\",\n        \"internalType\": \"ModeCode[]\"\n      },\n      {\n        \"name\": \"_executionCallDatas\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsExecutionMode\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"_interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"validateUserOp\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_missingAccountFunds\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"validationData_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawDeposit\",\n    \"inputs\": [\n      {\n        \"name\": \"_withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      },\n      {\n        \"name\": \"_withdrawAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EIP712DomainChanged\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SentPrefund\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"success\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetDelegationManager\",\n    \"inputs\": [\n      {\n        \"name\": \"newDelegationManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetEntryPoint\",\n    \"inputs\": [\n      {\n        \"name\": \"entryPoint\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TryExecuteUnsuccessful\",\n    \"inputs\": [\n      {\n        \"name\": \"batchExecutionindex\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"result\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ExecutionFailed\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidEIP712NameLength\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidEIP712VersionLength\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidShortString\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotDelegationManager\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPoint\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPointOrSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"StringTooLong\",\n    \"inputs\": [\n      {\n        \"name\": \"str\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnauthorizedCallContext\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedCallType\",\n    \"inputs\": [\n      {\n        \"name\": \"callType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"CallType\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedExecType\",\n    \"inputs\": [\n      {\n        \"name\": \"execType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"ExecType\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceCache\",\n    \"inputs\": [\n      {\n        \"name\": \"hashKey\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"balance\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getHashKey\",\n    \"inputs\": [\n      {\n        \"name\": \"_caller\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_token\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_recipient\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"enforceDecrease_\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"token_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"recipient_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"amount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isLocked\",\n    \"inputs\": [\n      {\n        \"name\": \"hashKey\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"lock\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506109cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b99deb0e1161005b578063b99deb0e14610122578063d0a3529f1461016b578063d3eddcc51461017e578063ed463367146100c557600080fd5b806332a16f4e1461008d578063414c3e33146100c5578063a145832a146100e1578063b5e54492146100f4575b600080fd5b6100b061009b3660046106cb565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100df6100d3366004610749565b50505050505050505050565b005b6100df6100ef366004610749565b610191565b6101146101023660046106cb565b60006020819052908152604090205481565b6040519081526020016100bc565b610135610130366004610816565b610350565b6040805195151586526001600160a01b03948516602087015292909316918401919091526060830152608082015260a0016100bc565b610114610179366004610858565b61045d565b6100df61018c366004610749565b610476565b85600881901b6101a2816000610661565b6102015760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b5060008060006102118e8e610350565b50935093509350506000610228338585858c610678565b60008181526001602052604090205490915060ff16156102a25760405162461bcd60e51b815260206004820152602f60248201527f4552433131353542616c616e63654368616e6765456e666f726365723a656e6660448201526e1bdc98d95c8b5a5ccb5b1bd8dad959608a1b60648201526084016101f8565b6000818152600160208190526040808320805460ff191690921790915551627eeac760e11b81526001600160a01b0385811660048301526024820185905286169062fdd58e90604401602060405180830381865afa158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906108ad565b60009283526020839052604090922091909155505050505050505050505050505050565b600080808080606986146103c05760405162461bcd60e51b815260206004820152603160248201527f4552433131353542616c616e63654368616e6765456e666f726365723a696e766044820152700c2d8d2c85ae8cae4dae65ad8cadccee8d607b1b60648201526084016101f8565b868660008181106103d3576103d36108c6565b909101356001600160f81b031916151595506103f5905060156001888a6108dc565b6103fe91610906565b60601c935061041160296015888a6108dc565b61041a91610906565b60601c925061042d60496029888a6108dc565b6104369161093b565b9150610445866049818a6108dc565b61044e9161093b565b60001c90509295509295909350565b600061046c8686868686610678565b9695505050505050565b60008060008060006104888f8f610350565b9450945094509450945060006104a1338686868d610678565b600081815260016020526040808220805460ff1916905551627eeac760e11b81526001600160a01b03878116600483015260248201879052929350909187169062fdd58e90604401602060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a91906108ad565b905086156105bf5760008281526020819052604090205461054c90849061096f565b8110156105ba5760405162461bcd60e51b815260206004820152603660248201527f4552433131353542616c616e63654368616e6765456e666f726365723a65786360448201527565656465642d62616c616e63652d646563726561736560501b60648201526084016101f8565b61064e565b6000828152602081905260409020546105d9908490610982565b81101561064e5760405162461bcd60e51b815260206004820152603a60248201527f4552433131353542616c616e63654368616e6765456e666f726365723a696e7360448201527f756666696369656e742d62616c616e63652d696e63726561736500000000000060648201526084016101f8565b5050505050505050505050505050505050565b6001600160f81b0319828116908216145b92915050565b604080516001600160a01b0396871660208083019190915295871681830152939095166060840152608083019190915260a0808301919091528351808303909101815260c0909101909252815191012090565b6000602082840312156106dd57600080fd5b5035919050565b60008083601f8401126106f657600080fd5b50813567ffffffffffffffff81111561070e57600080fd5b60208301915083602082850101111561072657600080fd5b9250929050565b80356001600160a01b038116811461074457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561076857600080fd5b8a3567ffffffffffffffff8082111561078057600080fd5b61078c8e838f016106e4565b909c509a5060208d01359150808211156107a557600080fd5b6107b18e838f016106e4565b909a50985060408d0135975060608d01359150808211156107d157600080fd5b506107de8d828e016106e4565b90965094505060808b013592506107f760a08c0161072d565b915061080560c08c0161072d565b90509295989b9194979a5092959850565b6000806020838503121561082957600080fd5b823567ffffffffffffffff81111561084057600080fd5b61084c858286016106e4565b90969095509350505050565b600080600080600060a0868803121561087057600080fd5b6108798661072d565b94506108876020870161072d565b93506108956040870161072d565b94979396509394606081013594506080013592915050565b6000602082840312156108bf57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600080858511156108ec57600080fd5b838611156108f957600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156109335780818660140360031b1b83161692505b505092915050565b8035602083101561067257600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561067257610672610959565b808201808211156106725761067261095956fea264697066735822122095ab63871cc701b6845065f3118822a1bb1778b7d93ba045a40145ebc06f19af64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"_owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"ANY_DELEGATE\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"DOMAIN_VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"NAME\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"ROOT_AUTHORITY\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"acceptOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"disableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"disabledDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"isDisabled\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"eip712Domain\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"fields\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"bytes1\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"version\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"verifyingContract\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"extensions\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"enableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDelegationHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_input\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDomainHash\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"pause\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"paused\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"pendingOwner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"redeemDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"_permissionContexts\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      },\n      {\n        \"name\": \"_modes\",\n        \"type\": \"bytes32[]\",\n        \"internalType\": \"ModeCode[]\"\n      },\n      {\n        \"name\": \"_executionCallDatas\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"renounceOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"unpause\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"DisabledDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"delegator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegate\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegation\",\n        \"type\": \"tuple\",\n        \"indexed\": false,\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EIP712DomainChanged\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EnabledDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"delegator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegate\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegation\",\n        \"type\": \"tuple\",\n        \"indexed\": false,\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferStarted\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Paused\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"RedeemedDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"rootDelegator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegation\",\n        \"type\": \"tuple\",\n        \"indexed\": false,\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetDomain\",\n    \"inputs\": [\n      {\n        \"name\": \"domainHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"domainVersion\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"contractAddress\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Unpaused\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AlreadyDisabled\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AlreadyEnabled\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"BatchDataLengthMismatch\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"CannotUseADisabledDelegation\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureLength\",\n    \"inputs\": [\n      {\n        \"name\": \"length\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureS\",\n    \"inputs\": [\n      {\n        \"name\": \"s\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"EmptySignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"EnforcedPause\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ExpectedPause\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidAuthority\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidDelegate\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidDelegator\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidEOASignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidERC1271Signature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidShortString\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableInvalidOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableUnauthorizedAccount\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"StringTooLong\",\n    \"inputs\": [\n      {\n        \"name\": \"str\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x6101606040523480156200001257600080fd5b506040516200334f3803806200334f833981016040819052620000359162000384565b60408051808201825260118152702232b632b3b0ba34b7b726b0b730b3b2b960791b602080830191909152825180840190935260018352603160f81b9083015290826001600160a01b038116620000a757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000b28162000204565b506001805460ff60a01b19169055620000cd82600262000222565b61012052620000de81600362000222565b61014052815160208084019190912060e052815190820120610100524660a0526200015b60e05161010051604080516000805160206200332f83398151915260208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526000620001706200025b565b9050306001600160a01b0316817f04a46d9007577c7ff1e513b900545162ec25d25991ae3dc60cf26ec01a84806d604051806040016040528060118152602001702232b632b3b0ba34b7b726b0b730b3b2b960791b815250604051806040016040528060018152602001603160f81b81525046604051620001f493929190620003fe565b60405180910390a35050620005e5565b600180546001600160a01b03191690556200021f81620002f1565b50565b600060208351101562000242576200023a8362000341565b905062000255565b816200024f8482620004df565b5060ff90505b92915050565b600060c0516001600160a01b0316306001600160a01b031614801562000282575060a05146145b156200028f575060805190565b620002ec60e05161010051604080516000805160206200332f83398151915260208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080829050601f815111156200036f578260405163305a27a960e01b81526004016200009e9190620005ab565b80516200037c82620005c0565b179392505050565b6000602082840312156200039757600080fd5b81516001600160a01b0381168114620003af57600080fd5b9392505050565b6000815180845260005b81811015620003de57602081850181015186830182015201620003c0565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000620004136060830186620003b6565b8281036020840152620004278186620003b6565b915050826040830152949350505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200046357607f821691505b6020821081036200048457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004da576000816000526020600020601f850160051c81016020861015620004b55750805b601f850160051c820191505b81811015620004d657828155600101620004c1565b5050505b505050565b81516001600160401b03811115620004fb57620004fb62000438565b62000513816200050c84546200044e565b846200048a565b602080601f8311600181146200054b5760008415620005325750858301515b600019600386901b1c1916600185901b178555620004d6565b600085815260208120601f198616915b828110156200057c578886015182559484019460019091019084016200055b565b50858210156200059b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000620003af6020830184620003b6565b80516020808301519190811015620004845760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051612cef620006406000396000611bda01526000611bad01526000611b1201526000611aea01526000611a4501526000611a6f01526000611a990152612cef6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806383ebb771116100ad578063acb8cc4911610071578063acb8cc491461027f578063cef6d2091461029f578063e30c3978146102b2578063f2fde38b146102c3578063ffa1ad74146102d657600080fd5b806383ebb771146102065780638456cb591461020e57806384b0196e146102165780638da5cb5b14610231578063a3f4df7e1461024257600080fd5b806358909ebc116100f457806358909ebc146101b05780635c975abb146101d157806366134607146101e3578063715018a6146101f657806379ba5097146101fe57600080fd5b80631b13cac2146101315780632d40d0521461014d5780633ed01015146101805780633f4ba83a14610195578063499340471461019d575b600080fd5b61013a60001981565b6040519081526020015b60405180910390f35b61017061015b3660046120e6565b60046020526000908152604090205460ff1681565b6040519015158152602001610144565b61019361018e3660046120ff565b6102fa565b005b6101936103f4565b6101936101ab3660046120ff565b610406565b6101b9610a1181565b6040516001600160a01b039091168152602001610144565b600154600160a01b900460ff16610170565b61013a6101f13660046120ff565b6104f6565b61019361050f565b610193610521565b61013a61056a565b610193610579565b61021e610589565b6040516101449796959493929190612190565b6000546001600160a01b03166101b9565b610272604051806040016040528060118152602001702232b632b3b0ba34b7b726b0b730b3b2b960791b81525081565b6040516101449190612229565b610272604051806040016040528060018152602001603160f81b81525081565b6101936102ad366004612287565b6105cf565b6001546001600160a01b03166101b9565b6101936102d136600461233c565b611891565b610272604051806040016040528060058152602001640312e332e360dc1b81525081565b61030a604082016020830161233c565b6001600160a01b03811633146103335760405163b9f0f17160e01b815260040160405180910390fd5b600061033e836104f6565b60008181526004602052604090205490915060ff1661037057604051637952fbad60e11b815260040160405180910390fd5b6000818152600460209081526040909120805460ff191690556103959084018461233c565b6001600160a01b03166103ae604085016020860161233c565b6001600160a01b0316827f3feadce88fc1b49db633a56fd5307ed6ee18734df83bcc4011daa720c9cd95f1866040516103e79190612484565b60405180910390a4505050565b6103fc611902565b61040461192f565b565b610416604082016020830161233c565b6001600160a01b038116331461043f5760405163b9f0f17160e01b815260040160405180910390fd5b600061044a836104f6565b60008181526004602052604090205490915060ff161561047c57604051625ecddb60e01b815260040160405180910390fd5b6000818152600460209081526040909120805460ff191660011790556104a49084018461233c565b6001600160a01b03166104bd604085016020860161233c565b6001600160a01b0316827fea589ba9473ee1fe77d352c7ed919747715a5d22931b972de9b02a907c66d5dd866040516103e79190612484565b600061050961050483612823565b611984565b92915050565b610517611902565b6104046000611a1f565b60015433906001600160a01b0316811461055e5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61056781611a1f565b50565b6000610574611a38565b905090565b610581611902565b610404611b63565b60006060806000806000606061059d611ba6565b6105a5611bd3565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6105d7611c00565b8481811415806105e75750808414155b1561060557604051631bcaf69f60e01b815260040160405180910390fd5b6000816001600160401b0381111561061f5761061f612555565b60405190808252806020026020018201604052801561065257816020015b606081526020019060019003908161063d5790505b5090506000826001600160401b0381111561066f5761066f612555565b6040519080825280602002602001820160405280156106a257816020015b606081526020019060019003908161068d5790505b50905060005b83811015610c815760008a8a838181106106c4576106c461282f565b90506020028101906106d69190612845565b8101906106e3919061288b565b905080516000036107d1576040805160008082526020820190925290610765565b6107526040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600080191681526020016060815260200160008152602001606081525090565b8152602001906001900390816107045790505b508483815181106107785761077861282f565b602090810291909101015260006040519080825280602002602001820160405280156107ae578160200160208202803683370190505b508383815181106107c1576107c161282f565b6020026020010181905250610c78565b808483815181106107e4576107e461282f565b6020026020010181905250600081516001600160401b0381111561080a5761080a612555565b604051908082528060200260200182016040528015610833578160200160208202803683370190505b509050808484815181106108495761084961282f565b6020026020010181905250336001600160a01b0316826000815181106108715761087161282f565b6020026020010151600001516001600160a01b0316141580156108c65750610a116001600160a01b0316826000815181106108ae576108ae61282f565b6020026020010151600001516001600160a01b031614155b156108e457604051632d618d8160e21b815260040160405180910390fd5b60005b8251811015610ab55760008382815181106109045761090461282f565b6020026020010151905061091781611984565b8383815181106109295761092961282f565b60200260200101818152505080602001516001600160a01b03163b6000036109dc57600061099e61099461095b61056a565b86868151811061096d5761096d61282f565b602002602001015160405161190160f01b8152600281019290925260228201526042902090565b8360a00151611c2b565b905081602001516001600160a01b0316816001600160a01b0316146109d657604051630f6d9e4760e21b815260040160405180910390fd5b50610aac565b60006109fb6109e961056a565b85858151811061096d5761096d61282f565b9050600082602001516001600160a01b0316631626ba7e838560a001516040518363ffffffff1660e01b8152600401610a3592919061293b565b602060405180830381865afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a76919061295c565b6001600160e01b0319169050630b135d3f60e11b8114610aa95760405163155ff42760e01b815260040160405180910390fd5b50505b506001016108e7565b5060005b8251811015610c755760046000838381518110610ad857610ad861282f565b60209081029190910181015182528101919091526040016000205460ff1615610b14576040516302dd502960e11b815260040160405180910390fd5b60018351610b22919061299c565b8114610c2b5781610b348260016129af565b81518110610b4457610b4461282f565b6020026020010151838281518110610b5e57610b5e61282f565b60200260200101516040015114610b8857604051636f6a1b8760e11b815260040160405180910390fd5b600083610b968360016129af565b81518110610ba657610ba661282f565b6020026020010151600001519050610a116001600160a01b0316816001600160a01b031614158015610c075750806001600160a01b0316848381518110610bef57610bef61282f565b6020026020010151602001516001600160a01b031614155b15610c2557604051632d618d8160e21b815260040160405180910390fd5b50610c6d565b60001960001b838281518110610c4357610c4361282f565b60200260200101516040015114610c6d57604051636f6a1b8760e11b815260040160405180910390fd5b600101610ab9565b50505b506001016106a8565b5060005b83811015610ea6576000838281518110610ca157610ca161282f565b6020026020010151511115610e9e5760005b838281518110610cc557610cc561282f565b602002602001015151811015610e9c576000848381518110610ce957610ce961282f565b60200260200101518281518110610d0257610d0261282f565b602002602001015160600151905060005b8151811015610e92576000828281518110610d3057610d3061282f565b6020026020010151600001519050806001600160a01b031663414c3e33848481518110610d5f57610d5f61282f565b602002602001015160200151858581518110610d7d57610d7d61282f565b6020026020010151604001518f8f8a818110610d9b57610d9b61282f565b905060200201358e8e8b818110610db457610db461282f565b9050602002810190610dc69190612845565b8c8c81518110610dd857610dd861282f565b60200260200101518b81518110610df157610df161282f565b60200260200101518e8d81518110610e0b57610e0b61282f565b60200260200101518c81518110610e2457610e2461282f565b602002602001015160200151336040518963ffffffff1660e01b8152600401610e549897969594939291906129c2565b600060405180830381600087803b158015610e6e57600080fd5b505af1158015610e82573d6000803e3d6000fd5b5050505050806001019050610d13565b5050600101610cb3565b505b600101610c85565b5060005b838110156114ca57828181518110610ec457610ec461282f565b602002602001015151600003610f82573363d691c964898984818110610eec57610eec61282f565b90506020020135888885818110610f0557610f0561282f565b9050602002810190610f179190612845565b6040518463ffffffff1660e01b8152600401610f3593929190612a2d565b6000604051808303816000875af1158015610f54573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f7c9190810190612a50565b506114c2565b60005b838281518110610f9757610f9761282f565b60200260200101515181101561116e576000848381518110610fbb57610fbb61282f565b60200260200101518281518110610fd457610fd461282f565b602002602001015160600151905060005b81518110156111645760008282815181106110025761100261282f565b6020026020010151600001519050806001600160a01b031663a145832a8484815181106110315761103161282f565b60200260200101516020015185858151811061104f5761104f61282f565b6020026020010151604001518f8f8a81811061106d5761106d61282f565b905060200201358e8e8b8181106110865761108661282f565b90506020028101906110989190612845565b8c8c815181106110aa576110aa61282f565b60200260200101518b815181106110c3576110c361282f565b60200260200101518e8d815181106110dd576110dd61282f565b60200260200101518c815181106110f6576110f661282f565b602002602001015160200151336040518963ffffffff1660e01b81526004016111269897969594939291906129c2565b600060405180830381600087803b15801561114057600080fd5b505af1158015611154573d6000803e3d6000fd5b5050505050806001019050610fe5565b5050600101610f85565b508281815181106111815761118161282f565b6020026020010151600184838151811061119d5761119d61282f565b6020026020010151516111b0919061299c565b815181106111c0576111c061282f565b6020026020010151602001516001600160a01b031663d691c9648989848181106111ec576111ec61282f565b905060200201358888858181106112055761120561282f565b90506020028101906112179190612845565b6040518463ffffffff1660e01b815260040161123593929190612a2d565b6000604051808303816000875af1158015611254573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261127c9190810190612a50565b5060008382815181106112915761129161282f565b60200260200101515190505b80156114c05760008483815181106112b7576112b761282f565b60200260200101516001836112cc919061299c565b815181106112dc576112dc61282f565b60200260200101516060015190506000815190505b80156114ad5760008261130560018461299c565b815181106113155761131561282f565b6020026020010151600001519050806001600160a01b031663d3eddcc584600185611340919061299c565b815181106113505761135061282f565b6020026020010151602001518560018661136a919061299c565b8151811061137a5761137a61282f565b6020026020010151604001518f8f8a8181106113985761139861282f565b905060200201358e8e8b8181106113b1576113b161282f565b90506020028101906113c39190612845565b8c8c815181106113d5576113d561282f565b602002602001015160018c6113ea919061299c565b815181106113fa576113fa61282f565b60200260200101518e8d815181106114145761141461282f565b602002602001015160018d611429919061299c565b815181106114395761143961282f565b602002602001015160200151336040518963ffffffff1660e01b81526004016114699897969594939291906129c2565b600060405180830381600087803b15801561148357600080fd5b505af1158015611497573d6000803e3d6000fd5b5050505050806114a690612b2f565b90506112f1565b5050806114b990612b2f565b905061129d565b505b600101610eaa565b5060005b838110156117465760008382815181106114ea576114ea61282f565b602002602001015151111561173e57600083828151811061150d5761150d61282f565b60200260200101515190505b801561173c5760008483815181106115335761153361282f565b6020026020010151600183611548919061299c565b815181106115585761155861282f565b60200260200101516060015190506000815190505b80156117295760008261158160018461299c565b815181106115915761159161282f565b6020026020010151600001519050806001600160a01b031663ed463367846001856115bc919061299c565b815181106115cc576115cc61282f565b602002602001015160200151856001866115e6919061299c565b815181106115f6576115f661282f565b6020026020010151604001518f8f8a8181106116145761161461282f565b905060200201358e8e8b81811061162d5761162d61282f565b905060200281019061163f9190612845565b8c8c815181106116515761165161282f565b602002602001015160018c611666919061299c565b815181106116765761167661282f565b60200260200101518e8d815181106116905761169061282f565b602002602001015160018d6116a5919061299c565b815181106116b5576116b561282f565b602002602001015160200151336040518963ffffffff1660e01b81526004016116e59897969594939291906129c2565b600060405180830381600087803b1580156116ff57600080fd5b505af1158015611713573d6000803e3d6000fd5b50505050508061172290612b2f565b905061156d565b50508061173590612b2f565b9050611519565b505b6001016114ce565b5060005b838110156118855760008382815181106117665761176661282f565b602002602001015151111561187d5760005b83828151811061178a5761178a61282f565b60200260200101515181101561187b57336001600160a01b03168483815181106117b6576117b661282f565b602002602001015160018685815181106117d2576117d261282f565b6020026020010151516117e5919061299c565b815181106117f5576117f561282f565b6020026020010151602001516001600160a01b03167f40dadaa36c6c2e3d7317e24757451ffb2d603d875f0ad5e92c5dd156573b187386858151811061183d5761183d61282f565b602002602001015184815181106118565761185661282f565b602002602001015160405161186b9190612b46565b60405180910390a3600101611778565b505b60010161174a565b50505050505050505050565b611899611902565b600180546001600160a01b0383166001600160a01b031990911681179091556118ca6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000546001600160a01b031633146104045760405163118cdaa760e01b8152336004820152602401610555565b611937611c55565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000807f88c1d2ecf185adf710588203a5f263f0ff61be0d33da39792cde19ba9aa4331e8360000151846020015185604001516119c48760600151611c7f565b6080808901516040805160208101989098526001600160a01b03968716908801529490931660608601529184015260a083015260c082015260e0015b60408051601f1981840301815291905280516020909101209392505050565b600180546001600160a01b031916905561056781611d4a565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611a9157507f000000000000000000000000000000000000000000000000000000000000000046145b15611abb57507f000000000000000000000000000000000000000000000000000000000000000090565b610574604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b611b6b611c00565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119673390565b60606105747f00000000000000000000000000000000000000000000000000000000000000006002611d9a565b60606105747f00000000000000000000000000000000000000000000000000000000000000006003611d9a565b600154600160a01b900460ff16156104045760405163d93c066560e01b815260040160405180910390fd5b600080600080611c3b8686611e45565b925092509250611c4b8282611e92565b5090949350505050565b600154600160a01b900460ff1661040457604051638dfc202b60e01b815260040160405180910390fd5b60008082516001600160401b03811115611c9b57611c9b612555565b604051908082528060200260200182016040528015611cc4578160200160208202803683370190505b50905060005b8351811015611d1a57611cf5848281518110611ce857611ce861282f565b6020026020010151611f4f565b828281518110611d0757611d0761282f565b6020908102919091010152600101611cca565b5080604051602001611d2c9190612c33565b60405160208183030381529060405280519060200120915050919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606060ff8314611db457611dad83611fb0565b9050610509565b818054611dc090612c69565b80601f0160208091040260200160405190810160405280929190818152602001828054611dec90612c69565b8015611e395780601f10611e0e57610100808354040283529160200191611e39565b820191906000526020600020905b815481529060010190602001808311611e1c57829003601f168201915b50505050509050610509565b60008060008351604103611e7f5760208401516040850151606086015160001a611e7188828585611fef565b955095509550505050611e8b565b50508151600091506002905b9250925092565b6000826003811115611ea657611ea6612ca3565b03611eaf575050565b6001826003811115611ec357611ec3612ca3565b03611ee15760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611ef557611ef5612ca3565b03611f165760405163fce698f760e01b815260048101829052602401610555565b6003826003811115611f2a57611f2a612ca3565b03611f4b576040516335e2f38360e21b815260048101829052602401610555565b5050565b6000807f80ad7e1b04ee6d994a125f4714ca0720908bd80ed16063ec8aee4b88e9253e2d8360000151846020015180519060200120604051602001611a00939291909283526001600160a01b03919091166020830152604082015260600190565b60606000611fbd836120be565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561202a57506000915060039050826120b4565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561207e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166120aa575060009250600191508290506120b4565b9250600091508190505b9450945094915050565b600060ff8216601f81111561050957604051632cd44ac360e21b815260040160405180910390fd5b6000602082840312156120f857600080fd5b5035919050565b60006020828403121561211157600080fd5b81356001600160401b0381111561212757600080fd5b820160c0818503121561213957600080fd5b9392505050565b60005b8381101561215b578181015183820152602001612143565b50506000910152565b6000815180845261217c816020860160208601612140565b601f01601f19169290920160200192915050565b60ff60f81b881681526000602060e060208401526121b160e084018a612164565b83810360408501526121c3818a612164565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015612217578351835292840192918401916001016121fb565b50909c9b505050505050505050505050565b6020815260006121396020830184612164565b60008083601f84011261224e57600080fd5b5081356001600160401b0381111561226557600080fd5b6020830191508360208260051b850101111561228057600080fd5b9250929050565b600080600080600080606087890312156122a057600080fd5b86356001600160401b03808211156122b757600080fd5b6122c38a838b0161223c565b909850965060208901359150808211156122dc57600080fd5b6122e88a838b0161223c565b9096509450604089013591508082111561230157600080fd5b5061230e89828a0161223c565b979a9699509497509295939492505050565b80356001600160a01b038116811461233757600080fd5b919050565b60006020828403121561234e57600080fd5b61213982612320565b6000808335601e1984360301811261236e57600080fd5b83016020810192503590506001600160401b0381111561238d57600080fd5b80360382131561228057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008383855260208086019550808560051b830101846000805b8881101561247657858403601f19018a52823536899003605e19018112612404578283fd5b880160606001600160a01b0361241983612320565b16865261242887830183612357565b828989015261243a838901828461239c565b92505050604061244c81840184612357565b93508783038289015261246083858361239c565b9d89019d975050509386019350506001016123df565b509198975050505050505050565b6020815260006001600160a01b038061249c85612320565b166020840152806124af60208601612320565b16604084015250604083013560608301526060830135601e198436030181126124d757600080fd5b83016020810190356001600160401b038111156124f357600080fd5b8060051b360382131561250557600080fd5b60c0608085015261251a60e0850182846123c5565b915050608084013560a084015261253460a0850185612357565b848303601f190160c086015261254b83828461239c565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561258d5761258d612555565b60405290565b60405160c081016001600160401b038111828210171561258d5761258d612555565b604051601f8201601f191681016001600160401b03811182821017156125dd576125dd612555565b604052919050565b60006001600160401b038211156125fe576125fe612555565b5060051b60200190565b60006001600160401b0382111561262157612621612555565b50601f01601f191660200190565b600082601f83011261264057600080fd5b813561265361264e82612608565b6125b5565b81815284602083860101111561266857600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261269657600080fd5b813560206126a661264e836125e5565b82815260059290921b840181019181810190868411156126c557600080fd5b8286015b848110156127745780356001600160401b03808211156126e95760008081fd5b908801906060828b03601f19018113156127035760008081fd5b61270b61256b565b612716888501612320565b81526040808501358481111561272c5760008081fd5b61273a8e8b8389010161262f565b838b0152509184013591838311156127525760008081fd5b6127608d8a8588010161262f565b9082015286525050509183019183016126c9565b509695505050505050565b600060c0828403121561279157600080fd5b612799612593565b90506127a482612320565b81526127b260208301612320565b60208201526040820135604082015260608201356001600160401b03808211156127db57600080fd5b6127e785838601612685565b60608401526080840135608084015260a084013591508082111561280a57600080fd5b506128178482850161262f565b60a08301525092915050565b6000610509368361277f565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261285c57600080fd5b8301803591506001600160401b0382111561287657600080fd5b60200191503681900382131561228057600080fd5b6000602080838503121561289e57600080fd5b82356001600160401b03808211156128b557600080fd5b818501915085601f8301126128c957600080fd5b81356128d761264e826125e5565b81815260059190911b830184019084810190888311156128f657600080fd5b8585015b8381101561292e578035858111156129125760008081fd5b6129208b89838a010161277f565b8452509186019186016128fa565b5098975050505050505050565b8281526040602082015260006129546040830184612164565b949350505050565b60006020828403121561296e57600080fd5b81516001600160e01b03198116811461213957600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561050957610509612986565b8082018082111561050957610509612986565b60e0815260006129d560e083018b612164565b82810360208401526129e7818b612164565b90508860408401528281036060840152612a0281888a61239c565b608084019690965250506001600160a01b0392831660a0820152911660c09091015295945050505050565b838152604060208201526000612a4760408301848661239c565b95945050505050565b60006020808385031215612a6357600080fd5b82516001600160401b0380821115612a7a57600080fd5b818501915085601f830112612a8e57600080fd5b8151612a9c61264e826125e5565b81815260059190911b83018401908481019088831115612abb57600080fd5b8585015b8381101561292e57805185811115612ad75760008081fd5b8601603f81018b13612ae95760008081fd5b878101516040612afb61264e83612608565b8281528d82848601011115612b105760008081fd5b612b1f838c8301848701612140565b8652505050918601918601612abf565b600081612b3e57612b3e612986565b506000190190565b602080825282516001600160a01b0390811683830152838201518116604080850191909152808501516060808601919091528086015160c06080870152805160e0870181905260009594610100600583901b8901810195919493870193919290890190885b81811015612c055760ff198b8903018352855187815116895289810151858b8b0152612bd9868b0182612164565b918701518a83038b890152919050612bf18183612164565b995050509488019491880191600101612bab565b50505050505050608085015160a085015260a08501519150601f198482030160c0850152612a478183612164565b815160009082906020808601845b83811015612c5d57815185529382019390820190600101612c41565b50929695505050505050565b600181811c90821680612c7d57607f821691505b602082108103612c9d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220ca409e8c9582544b3b8d8c05ed7b77fb8b148a77f098b1aea58f1517227de31d64736f6c634300081700338b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\" as const;", "export const abi = [\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureLength\",\n    \"inputs\": [\n      {\n        \"name\": \"length\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureS\",\n    \"inputs\": [\n      {\n        \"name\": \"s\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f453c45fd8890597438ba3740ed042994be373737c9bd8ac833ff249df3eaab64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"eip712Domain\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"fields\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"bytes1\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"version\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"verifyingContract\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"extensions\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EIP712DomainChanged\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidShortString\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"StringTooLong\",\n    \"inputs\": [\n      {\n        \"name\": \"str\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"fallback\",\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Upgraded\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressEmptyCode\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967InvalidImplementation\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967NonPayable\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedInnerCall\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x60806040526040516103f03803806103f08339810160408190526100229161025e565b61002c8282610033565b5050610341565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101289190610326565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561025657818101518382015260200161023e565b50505f910152565b5f806040838503121561026f575f80fd5b82516001600160a01b0381168114610285575f80fd5b60208401519092506001600160401b03808211156102a1575f80fd5b818501915085601f8301126102b4575f80fd5b8151818111156102c6576102c6610228565b604051601f8201601f19908116603f011681019083821181831017156102ee576102ee610228565b81604052828152886020848701011115610306575f80fd5b61031783602083016020880161023c565b80955050505050509250929050565b5f825161033781846020870161023c565b9190910192915050565b60a38061034d5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220fd2cc92935c943d341edacaf5318a0b9ab0185ce62ef72e95ab393ef358730c464736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"dataStart_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"value_\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506106dc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a3660046104a2565b50505050505050505050565b005b6100766100863660046104a2565b6100b5565b61009e61009936600461056f565b610198565b6040516100ac9291906105b1565b60405180910390f35b856100c1816000610265565b6101125760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b610123816000610265565b61017d5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610109565b5061018a8c8c898961027c565b505050505050505050505050565b6000606060218310156102005760405162461bcd60e51b815260206004820152602a60248201527f416c6c6f77656443616c6c64617461456e666f726365723a696e76616c69642d6044820152697465726d732d73697a6560b01b6064820152608401610109565b61020e602060008587610608565b61021791610632565b91506102268360208187610608565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250949792965091945050505050565b6001600160f81b0319828116908216145b92915050565b6000606036600061028d86866103d6565b93509350505061029d8888610198565b80519195509350816102af8287610650565b11156103155760405162461bcd60e51b815260206004820152602f60248201527f416c6c6f77656443616c6c64617461456e666f726365723a696e76616c69642d60448201526e0c6c2d8d8c8c2e8c25ad8cadccee8d608b1b6064820152608401610109565b61036e8386846103258583610650565b9261033293929190610608565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250610427915050565b6103cb5760405162461bcd60e51b815260206004820152602860248201527f416c6c6f77656443616c6c64617461456e666f726365723a696e76616c69642d60448201526763616c6c6461746160c01b6064820152608401610109565b505050505050505050565b60008036816103e86014828789610608565b6103f191610671565b60601c9350610404603460148789610608565b61040d91610632565b925061041c8560348189610608565b949793965094505050565b8051602091820120825192909101919091201490565b60008083601f84011261044f57600080fd5b50813567ffffffffffffffff81111561046757600080fd5b60208301915083602082850101111561047f57600080fd5b9250929050565b80356001600160a01b038116811461049d57600080fd5b919050565b60008060008060008060008060008060e08b8d0312156104c157600080fd5b8a3567ffffffffffffffff808211156104d957600080fd5b6104e58e838f0161043d565b909c509a5060208d01359150808211156104fe57600080fd5b61050a8e838f0161043d565b909a50985060408d0135975060608d013591508082111561052a57600080fd5b506105378d828e0161043d565b90965094505060808b0135925061055060a08c01610486565b915061055e60c08c01610486565b90509295989b9194979a5092959850565b6000806020838503121561058257600080fd5b823567ffffffffffffffff81111561059957600080fd5b6105a58582860161043d565b90969095509350505050565b8281526000602060406020840152835180604085015260005b818110156105e6578581018301518582016060015282016105ca565b506000606082860101526060601f19601f830116850101925050509392505050565b6000808585111561061857600080fd5b8386111561062557600080fd5b5050820193919092039150565b8035602083101561027657600019602084900360031b1b1692915050565b8082018082111561027657634e487b7160e01b600052601160045260246000fd5b6bffffffffffffffffffffffff19813581811691601485101561069e5780818660140360031b1b83161692505b50509291505056fea2646970667358221220040ece6946150f16c5413920be7d1b9c5d49d2aae2b6945d7da6faa6f92f5ef664736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e387e66c46ba5a334fec27a4edf89a8be9952b587b8297dbf10cb57e8c1726d964736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"allowedContract_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"maxTokens_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"spentMap\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"IncreasedSpentMap\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"limit\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"spent\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b5061081e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063414c3e33146100675780639dd5d9ab14610083578063a145832a146100be578063b99deb0e146100d1578063d3eddcc514610067578063ed46336714610067575b600080fd5b6100816100753660046105c3565b50505050505050505050565b005b6100ab610091366004610690565b600060208181529281526040808220909352908152205481565b6040519081526020015b60405180910390f35b6100816100cc3660046105c3565b610103565b6100e46100df3660046106ba565b610247565b604080516001600160a01b0390931683526020830191909152016100b5565b8561010f8160006102df565b6101605760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6101718160006102df565b6101cb5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610157565b506000806101dc8e8e8b8b8b6102f6565b9150915086856001600160a01b0316336001600160a01b03167fc026e493323d526061a052b5dd562495120e2f648797a48be61966d3a6beec8d858560405161022f929190918252602082015260400190565b60405180910390a45050505050505050505050505050565b600080603483146102a15760405162461bcd60e51b815260206004820152603060248201526000805160206107c983398151915260448201526f0d8d2c85ae8cae4dae65ad8cadccee8d60831b6064820152608401610157565b6102af6014600085876106fc565b6102b891610726565b60601c91506102ca83601481876106fc565b6102d39161075b565b60001c90509250929050565b6001600160f81b0319828116908216145b92915050565b6000806000366000610308888861050d565b9295509350909150506044811461036c5760405162461bcd60e51b815260206004820152603460248201526000805160206107c98339815191526044820152730d8d2c85acaf0cac6eae8d2dedc5ad8cadccee8d60631b6064820152608401610157565b60006103788b8b610247565b965090506001600160a01b03808216908516146103da5760405162461bcd60e51b815260206004820152602c60248201526000805160206107c983398151915260448201526b1b1a590b58dbdb9d1c9858dd60a21b6064820152608401610157565b63a9059cbb60e01b6103f06004600085876106fc565b6103f991610779565b6001600160e01b031916146104515760405162461bcd60e51b815260206004820152602a60248201526000805160206107c98339815191526044820152691b1a590b5b595d1a1bd960b21b6064820152608401610157565b61045f6044602484866106fc565b6104689161075b565b336000908152602081815260408083208b8452909152812080549091906104909084906107a7565b9250508190559450858511156104ff5760405162461bcd60e51b815260206004820152602e60248201527f45524332305472616e73666572416d6f756e74456e666f726365723a616c6c6f60448201526d1dd85b98d94b595e18d95959195960921b6064820152608401610157565b505050509550959350505050565b600080368161051f60148287896106fc565b61052891610726565b60601c935061053b6034601487896106fc565b6105449161075b565b925061055385603481896106fc565b949793965094505050565b60008083601f84011261057057600080fd5b50813567ffffffffffffffff81111561058857600080fd5b6020830191508360208285010111156105a057600080fd5b9250929050565b80356001600160a01b03811681146105be57600080fd5b919050565b60008060008060008060008060008060e08b8d0312156105e257600080fd5b8a3567ffffffffffffffff808211156105fa57600080fd5b6106068e838f0161055e565b909c509a5060208d013591508082111561061f57600080fd5b61062b8e838f0161055e565b909a50985060408d0135975060608d013591508082111561064b57600080fd5b506106588d828e0161055e565b90965094505060808b0135925061067160a08c016105a7565b915061067f60c08c016105a7565b90509295989b9194979a5092959850565b600080604083850312156106a357600080fd5b6106ac836105a7565b946020939093013593505050565b600080602083850312156106cd57600080fd5b823567ffffffffffffffff8111156106e457600080fd5b6106f08582860161055e565b90969095509350505050565b6000808585111561070c57600080fd5b8386111561071957600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156107535780818660140360031b1b83161692505b505092915050565b803560208310156102f057600019602084900360031b1b1692915050565b6001600160e01b031981358181169160048510156107535760049490940360031b84901b1690921692915050565b808201808211156102f057634e487b7160e01b600052601160045260246000fdfe45524332305472616e73666572416d6f756e74456e666f726365723a696e7661a2646970667358221220936350618a5001f34797bf97c50cd107709e028340c60e13df9fe9a2d10d7fb364736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getAvailableAmount\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"availableAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"isNewPeriod_\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"currentPeriod_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"token_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"periodAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"periodDuration_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startDate_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"periodicAllowances\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"periodAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"periodDuration\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startDate\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"lastTransferPeriod\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"transferredInCurrentPeriod\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TransferredInPeriod\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"periodAmount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"periodDuration\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startDate\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"transferredInCurrentPeriod\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"transferTimestamp\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610d12806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a145832a1161005b578063a145832a1461013e578063b99deb0e14610151578063d3eddcc514610082578063ed4633671461008257600080fd5b8063414c3e33146100825780636a9843f61461009e5780637b91dc78146100d1575b600080fd5b61009c610090366004610a20565b50505050505050505050565b005b6100b16100ac366004610aed565b61018e565b604080519384529115156020840152908201526060015b60405180910390f35b6101166100df366004610b47565b6000602081815292815260408082209093529081522080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100c8565b61009c61014c366004610a20565b610265565b61016461015f366004610b71565b61034a565b604080516001600160a01b03909516855260208501939093529183015260608201526080016100c8565b6001600160a01b0383166000908152602081815260408083208784528252808320815160a081018352815481526001820154938101939093526002810154918301829052600381015460608401526004015460808301528291829115610203576101f781610416565b9350935093505061025b565b6000806000610212898961034a565b9350935093505060006040518060a00160405280858152602001848152602001838152602001600081526020016000815250905061024f81610416565b97509750975050505050505b9450945094915050565b856102718160006104aa565b6102c25760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6102d38160006104aa565b61032d5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084016102b9565b5061033c8c8c898989886104c1565b505050505050505050505050565b6000808080607485146103a65760405162461bcd60e51b81526020600482015260306024820152600080516020610cbd83398151915260448201526f0d8d2c85ae8cae4dae65ad8cadccee8d60831b60648201526084016102b9565b6103b4601460008789610bb3565b6103bd91610bdd565b60601c93506103d0603460148789610bb3565b6103d991610c12565b92506103e9605460348789610bb3565b6103f291610c12565b9150610402607460548789610bb3565b61040b91610c12565b939692955090935050565b60008060008360400151421015610435575060009150819050806104a3565b602084015160408501516104499042610c46565b6104539190610c59565b61045e906001610c7b565b90508084606001511415915060008261047b57846080015161047e565b60005b90508085600001511161049257600061049f565b845161049f908290610c46565b9350505b9193909250565b6001600160f81b0319828116908216145b92915050565b60003660006104d0878761096a565b929550935090915050604481146105345760405162461bcd60e51b81526020600482015260346024820152600080516020610cbd8339815191526044820152730d8d2c85acaf0cac6eae8d2dedc5ad8cadccee8d60631b60648201526084016102b9565b6000806000806105448d8d61034a565b9350935093509350866001600160a01b0316846001600160a01b0316146105b05760405162461bcd60e51b815260206004820152602c6024820152600080516020610cbd83398151915260448201526b1b1a590b58dbdb9d1c9858dd60a21b60648201526084016102b9565b63a9059cbb60e01b6105c660046000888a610bb3565b6105cf91610c8e565b6001600160e01b031916146106275760405162461bcd60e51b815260206004820152602a6024820152600080516020610cbd8339815191526044820152691b1a590b5b595d1a1bd960b21b60648201526084016102b9565b336000908152602081815260408083208c8452909152812060028101549091036107e157600082116106a55760405162461bcd60e51b81526020600482015260336024820152600080516020610cbd8339815191526044820152726c69642d7a65726f2d73746172742d6461746560681b60648201526084016102b9565b600084116107025760405162461bcd60e51b81526020600482015260366024820152600080516020610cbd8339815191526044820152751b1a590b5e995c9bcb5c195c9a5bd90b585b5bdd5b9d60521b60648201526084016102b9565b600083116107665760405162461bcd60e51b81526020600482015260386024820152600080516020610cbd83398151915260448201527f6c69642d7a65726f2d706572696f642d6475726174696f6e000000000000000060648201526084016102b9565b814210156107cf5760405162461bcd60e51b815260206004820152603060248201527f4552433230506572696f645472616e73666572456e666f726365723a7472616e60448201526f1cd9995c8b5b9bdd0b5cdd185c9d195960821b60648201526084016102b9565b83815560018101839055600281018290555b600080600061082c846040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050610416565b919450925090506000610843604460248c8e610bb3565b61084c91610c12565b9050838111156108bb5760405162461bcd60e51b815260206004820152603460248201527f4552433230506572696f645472616e73666572456e666f726365723a7472616e6044820152731cd9995c8b585b5bdd5b9d0b595e18d95959195960621b60648201526084016102b9565b82156108d05760038501829055600060048601555b808560040160008282546108e49190610c7b565b90915550506004850154604080516001600160a01b038c81168252602082018c90529181018a90526060810189905260808101929092524260a08301528f91908f169033907fb2a345c7f80b4be490c405f4a994faf85384dd05da7d70be0801dc31a8c253af9060c00160405180910390a4505050505050505050505050505050505050565b600080368161097c6014828789610bb3565b61098591610bdd565b60601c9350610998603460148789610bb3565b6109a191610c12565b92506109b08560348189610bb3565b949793965094505050565b60008083601f8401126109cd57600080fd5b50813567ffffffffffffffff8111156109e557600080fd5b6020830191508360208285010111156109fd57600080fd5b9250929050565b80356001600160a01b0381168114610a1b57600080fd5b919050565b60008060008060008060008060008060e08b8d031215610a3f57600080fd5b8a3567ffffffffffffffff80821115610a5757600080fd5b610a638e838f016109bb565b909c509a5060208d0135915080821115610a7c57600080fd5b610a888e838f016109bb565b909a50985060408d0135975060608d0135915080821115610aa857600080fd5b50610ab58d828e016109bb565b90965094505060808b01359250610ace60a08c01610a04565b9150610adc60c08c01610a04565b90509295989b9194979a5092959850565b60008060008060608587031215610b0357600080fd5b84359350610b1360208601610a04565b9250604085013567ffffffffffffffff811115610b2f57600080fd5b610b3b878288016109bb565b95989497509550505050565b60008060408385031215610b5a57600080fd5b610b6383610a04565b946020939093013593505050565b60008060208385031215610b8457600080fd5b823567ffffffffffffffff811115610b9b57600080fd5b610ba7858286016109bb565b90969095509350505050565b60008085851115610bc357600080fd5b83861115610bd057600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015610c0a5780818660140360031b1b83161692505b505092915050565b803560208310156104bb57600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104bb576104bb610c30565b600082610c7657634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156104bb576104bb610c30565b6001600160e01b03198135818116916004851015610c0a5760049490940360031b84901b169092169291505056fe4552433230506572696f645472616e73666572456e666f726365723a696e7661a264697066735822122078259b929dc2fea71614ebe238bd74e88ff3ea3542e0d11a18122c300122d3f664736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac220b672ee89e055a56513b249d66df06ecb6da367b913fa0b7b7f3f838634764736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"event\",\n    \"name\": \"AdminChanged\",\n    \"inputs\": [\n      {\n        \"name\": \"previousAdmin\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newAdmin\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"BeaconUpgraded\",\n    \"inputs\": [\n      {\n        \"name\": \"beacon\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Upgraded\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967InvalidAdmin\",\n    \"inputs\": [\n      {\n        \"name\": \"admin\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967InvalidBeacon\",\n    \"inputs\": [\n      {\n        \"name\": \"beacon\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967InvalidImplementation\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967NonPayable\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf999523a2735d33a4f148563c82738a41cc465257ff9df9a8912b831ab5af9564736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      },\n      {\n        \"name\": \"_entryPoint\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"receive\",\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"DOMAIN_VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"NAME\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"PACKED_USER_OP_TYPEHASH\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addDeposit\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegationManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"disableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"eip712Domain\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"fields\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"bytes1\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"version\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"verifyingContract\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"extensions\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"enableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"entryPoint\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_execution\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Execution\",\n        \"components\": [\n          {\n            \"name\": \"target\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"executeFromExecutor\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"returnData_\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDeposit\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDomainHash\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"_key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationTypedDataHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isDelegationDisabled\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isValidSignature\",\n    \"inputs\": [\n      {\n        \"name\": \"_hash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_signature\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"magicValue_\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155BatchReceived\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC721Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"redeemDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"_permissionContexts\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      },\n      {\n        \"name\": \"_modes\",\n        \"type\": \"bytes32[]\",\n        \"internalType\": \"ModeCode[]\"\n      },\n      {\n        \"name\": \"_executionCallDatas\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsExecutionMode\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"_interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"validateUserOp\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_missingAccountFunds\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"validationData_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawDeposit\",\n    \"inputs\": [\n      {\n        \"name\": \"_withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      },\n      {\n        \"name\": \"_withdrawAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EIP712DomainChanged\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SentPrefund\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"success\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetDelegationManager\",\n    \"inputs\": [\n      {\n        \"name\": \"newDelegationManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetEntryPoint\",\n    \"inputs\": [\n      {\n        \"name\": \"entryPoint\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TryExecuteUnsuccessful\",\n    \"inputs\": [\n      {\n        \"name\": \"batchExecutionindex\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"result\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureLength\",\n    \"inputs\": [\n      {\n        \"name\": \"length\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureS\",\n    \"inputs\": [\n      {\n        \"name\": \"s\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ExecutionFailed\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidEIP712NameLength\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidEIP712VersionLength\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidShortString\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotDelegationManager\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPoint\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPointOrSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"StringTooLong\",\n    \"inputs\": [\n      {\n        \"name\": \"str\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnauthorizedCallContext\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedCallType\",\n    \"inputs\": [\n      {\n        \"name\": \"callType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"CallType\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedExecType\",\n    \"inputs\": [\n      {\n        \"name\": \"execType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"ExecType\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x6101c060405230610160523480156200001757600080fd5b50604051620031b0380380620031b08339810160408190526200003a91620002b3565b81816040518060400160405280601981526020017f4549503737303253746174656c65737344656c654761746f7200000000000000815250604051806040016040528060018152602001603160f81b8152508181620000a46000836200021560201b90919060201c565b61012052620000b581600162000215565b61014052815160208084019190912060e052815190820120610100524660a0526200014360e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0528151601f10156200017057604051631ad9af3960e21b815260040160405180910390fd5b601f8151111562000194576040516309203c9d60e41b815260040160405180910390fd5b6001600160a01b038085166101808190529084166101a0526040517fb2e8eb88b584ae71ef4e854c10847f4d39bd93e52599f147bfb4dcc8de52014d90600090a26040516001600160a01b038416907fee8699dc0e27105da2653bdba54be0edcaadc3e33890a3ad705517ffe9bf0a9990600090a2505050505050620004db565b600060208351101562000235576200022d836200024e565b905062000248565b8162000242848262000399565b5060ff90505b92915050565b600080829050601f8151111562000285578260405163305a27a960e01b81526004016200027c919062000465565b60405180910390fd5b80516200029282620004b6565b179392505050565b6001600160a01b0381168114620002b057600080fd5b50565b60008060408385031215620002c757600080fd5b8251620002d4816200029a565b6020840151909250620002e7816200029a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200031d57607f821691505b6020821081036200033e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000394576000816000526020600020601f850160051c810160208610156200036f5750805b601f850160051c820191505b8181101562000390578281556001016200037b565b5050505b505050565b81516001600160401b03811115620003b557620003b5620002f2565b620003cd81620003c6845462000308565b8462000344565b602080601f831160018114620004055760008415620003ec5750858301515b600019600386901b1c1916600185901b17855562000390565b600085815260208120601f198616915b82811015620004365788860151825594840194600190910190840162000415565b5085821015620004555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b81811015620004955785810183015185820160400152820162000477565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156200033e5760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a051612bb1620005ff60003960008181610471015281816107f7015281816108c20152818161094001528181610aa401528181610b9a01528181610bf201528181610c7401528181610ce601528181610e1001528181610e8f01528181611015015281816112cd01526115ce01526000818161057a015281816109a301528181610a2601528181610b0701528181610ef201526110590152600081816106190152818161073a015281816107960152818161083f01528181610b4601528181610da7015261162101526000611960015260006119330152600061174c015260006117240152600061167f015260006116a9015260006116d30152612bb16000f3fe6080604052600436106101c65760003560e01c806384b0196e116100f7578063d03c791411610095578063ea4d3c9b11610064578063ea4d3c9b14610568578063ed8101b51461059c578063f23a6e61146105bc578063ffa1ad74146105dc57600080fd5b8063d03c791414610500578063d087d28814610520578063d691c96414610535578063e9ae5c531461055557600080fd5b8063b0d691fe116100d1578063b0d691fe1461045f578063bc197c81146104ab578063c399ec88146104cb578063cef6d209146104e057600080fd5b806384b0196e146103b4578063a3f4df7e146103dc578063acb8cc491461043257600080fd5b80633ed01015116101645780634a58db191161013e5780634a58db19146103645780635c1c6dcd1461036c5780637f07bfdc1461037f57806383ebb7711461039f57600080fd5b80633ed0101514610302578063445140b814610324578063499340471461034457600080fd5b80631626ba7e116101a05780631626ba7e1461026e57806319822f7c1461028e5780632b3afd99146102ae5780633e1b0812146102e257600080fd5b806301ffc9a7146101d257806306394d6714610207578063150b7a021461023557600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101f26101ed366004611fb2565b61060d565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b50610227610222366004611ff5565b6106f9565b6040519081526020016101fe565b34801561024157600080fd5b506102556102503660046120fb565b61072e565b6040516001600160e01b031990911681526020016101fe565b34801561027a57600080fd5b506102556102893660046121ae565b61078a565b34801561029a57600080fd5b506102276102a93660046121f9565b6107ea565b3480156102ba57600080fd5b506102277fbc37962d8bd1d319c95199bdfda6d3f92baa8903a61b32d5f4ec1f4b36a3bc1881565b3480156102ee57600080fd5b506102276102fd366004612246565b61089b565b34801561030e57600080fd5b5061032261031d36600461226f565b610935565b005b34801561033057600080fd5b506101f261033f3660046122a9565b610a0d565b34801561035057600080fd5b5061032261035f36600461226f565b610a99565b610322610b3c565b61032261037a3660046122c2565b610be7565b34801561038b57600080fd5b5061032261039a3660046122fc565b610c69565b3480156103ab57600080fd5b50610227610d46565b3480156103c057600080fd5b506103c9610d55565b6040516101fe979695949392919061236e565b3480156103e857600080fd5b506104256040518060400160405280601981526020017f4549503737303253746174656c65737344656c654761746f720000000000000081525081565b6040516101fe9190612407565b34801561043e57600080fd5b50610425604051806040016040528060018152602001603160f81b81525081565b34801561046b57600080fd5b506104937f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fe565b3480156104b757600080fd5b506102556104c6366004612499565b610d9b565b3480156104d757600080fd5b50610227610df8565b3480156104ec57600080fd5b506103226104fb36600461258a565b610e84565b34801561050c57600080fd5b506101f261051b3660046122a9565b610f6b565b34801561052c57600080fd5b50610227610ff6565b6105486105433660046121ae565b61104c565b6040516101fe9190612623565b6103226105633660046121ae565b6112c2565b34801561057457600080fd5b506104937f000000000000000000000000000000000000000000000000000000000000000081565b3480156105a857600080fd5b506102276105b7366004611ff5565b6114d3565b3480156105c857600080fd5b506102556105d7366004612687565b611615565b3480156105e857600080fd5b50610425604051806040016040528060058152602001640312e332e360dc1b81525081565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361065857604051634f81d01360e11b815260040160405180910390fd5b6001600160e01b031982166335a4725960e21b148061068757506001600160e01b03198216630a85bd0160e11b145b806106a257506001600160e01b03198216630271189760e51b145b806106bd57506001600160e01b031982166301ffc9a760e01b145b806106d857506001600160e01b03198216630b135d3f60e11b145b806106f357506001600160e01b03198216633992254760e01b145b92915050565b60006106f3610706611672565b61070f846114d3565b60405161190160f01b8152600281019290925260228201526042902090565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361077957604051634f81d01360e11b815260040160405180910390fd5b50630a85bd0160e11b949350505050565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107d557604051634f81d01360e11b815260040160405180910390fd5b6107e084848461179d565b90505b9392505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461083557604051636b31ba1560e11b815260040160405180910390fd5b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361087e57604051634f81d01360e11b815260040160405180910390fd5b6108908461088b866106f9565b611816565b90506107e38261185e565b604051631aab3f0d60e11b81523060048201526001600160c01b03821660248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a90604401602060405180830381865afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f391906126ef565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480159061096e5750333014155b1561098c57604051630796d94560e01b815260040160405180910390fd5b604051633ed0101560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ed01015906109d8908490600401612837565b600060405180830381600087803b1580156109f257600080fd5b505af1158015610a06573d6000803e3d6000fd5b5050505050565b6040516316a0682960e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d40d05290602401602060405180830381865afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f39190612908565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590610ad25750333014155b15610af057604051630796d94560e01b815260040160405180910390fd5b604051634993404760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906349934047906109d8908490600401612837565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610b8557604051634f81d01360e11b815260040160405180910390fd5b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b1580156109f257600080fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590610c205750333014155b15610c3e57604051630796d94560e01b815260040160405180910390fd5b610c65610c4e602083018361292a565b6020830135610c606040850185612947565b6118f6565b5050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590610ca25750333014155b15610cc057604051630796d94560e01b815260040160405180910390fd5b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b158015610d2a57600080fd5b505af1158015610d3e573d6000803e3d6000fd5b505050505050565b6000610d50611672565b905090565b600060608060008060006060610d6961192c565b610d71611959565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610de657604051634f81d01360e11b815260040160405180910390fd5b5063bc197c8160e01b95945050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a08231906024015b602060405180830381865afa158015610e60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5091906126ef565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590610ebd5750333014155b15610edb57604051630796d94560e01b815260040160405180910390fd5b60405163cef6d20960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cef6d20990610f31908990899089908990899089906004016129ee565b600060405180830381600087803b158015610f4b57600080fd5b505af1158015610f5f573d6000803e3d6000fd5b50505050505050505050565b600081600881901b603082901b605083901b610f878486611986565b80610f9b5750610f9b84600160f81b611986565b8015610fc15750610fad836000611986565b80610fc15750610fc183600160f81b611986565b8015610fd557506001600160e01b03198216155b8015610fec575069ffffffffffffffffffff198116155b9695505050505050565b604051631aab3f0d60e11b8152306004820152600060248201819052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a90604401610e43565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461109757604051630692ce8160e21b815260040160405180910390fd5b83600881901b6110ab82600160f81b611986565b15611131573660006110bd8787611998565b90925090506110cd836000611986565b156110e3576110dc8282611a31565b945061112a565b6110f183600160f81b611986565b15611100576110dc8282611af2565b6040516308c3ee0360e11b81526001600160f81b0319841660048201526024015b60405180910390fd5b50506112b9565b61113c826000611986565b15611294576000803660006111518989611c1f565b6040805160018082528183019092529498509296509094509250816020015b606081526020019060019003908161117057905050965060006111938682611986565b156111c7576111a4858585856118f6565b886000815181106111b7576111b7612a57565b602002602001018190525061128a565b6111d586600160f81b611986565b15611265576111e685858585611c70565b896000815181106111f9576111f9612a57565b6020908102919091010152905080611260577fe723f28f104e46b47fd3531f3608374ac226bcf3ddda334a23a266453e0efdb760008960008151811061124157611241612a57565b6020026020010151604051611257929190612a6d565b60405180910390a15b61128a565b6040516308c3ee0360e11b81526001600160f81b031987166004820152602401611121565b50505050506112b9565b604051632e5bf3f960e21b81526001600160f81b031983166004820152602401611121565b50509392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015906112fb5750333014155b1561131957604051630796d94560e01b815260040160405180910390fd5b82600881901b61132d82600160f81b611986565b156113885736600061133f8686611998565b909250905061134f836000611986565b156113645761135e8282611a31565b50611381565b61137283600160f81b611986565b156111005761135e8282611af2565b5050610a06565b611393826000611986565b15611294576000803660006113a88888611c1f565b93509350935093506113be85600060f81b611986565b156113d5576113cf848484846118f6565b506114ca565b6113e385600160f81b611986565b156114a557604080516001808252818301909252600091816020015b60608152602001906001900390816113ff579050509050600061142486868686611c70565b8360008151811061143757611437612a57565b602090810291909101015290508061149e577fe723f28f104e46b47fd3531f3608374ac226bcf3ddda334a23a266453e0efdb760008360008151811061147f5761147f612a57565b6020026020010151604051611495929190612a6d565b60405180910390a15b50506114ca565b6040516308c3ee0360e11b81526001600160f81b031986166004820152602401611121565b50505050610a06565b60007fbc37962d8bd1d319c95199bdfda6d3f92baa8903a61b32d5f4ec1f4b36a3bc18611503602084018461292a565b60208401356115156040860186612947565b604051611523929190612a86565b6040519081900390206115396060870187612947565b604051611547929190612a86565b604051908190039020608087013560a088013560c089013561156c60e08b018b612947565b60405161157a929190612a86565b60408051918290038220602083019a909a526001600160a01b03988916908201526060810196909652608086019490945260a085019290925260c084015260e08301526101008201526101208101929092527f00000000000000000000000000000000000000000000000000000000000000001661014082015261016001604051602081830303815290604052805190602001209050919050565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361166057604051634f81d01360e11b815260040160405180910390fd5b5063f23a6e6160e01b95945050505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156116cb57507f000000000000000000000000000000000000000000000000000000000000000046145b156116f557507f000000000000000000000000000000000000000000000000000000000000000090565b610d50604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000306001600160a01b03166117e98585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ca192505050565b6001600160a01b0316036118055750630b135d3f60e11b6107e3565b506001600160e01b03199392505050565b6000806118308361182b610100870187612947565b61179d565b90506374eca2c160e11b6001600160e01b03198216016118545760009150506106f3565b5060019392505050565b80156118f357604051600090339060001990849084818181858888f193505050503d80600081146118ab576040519150601f19603f3d011682016040523d82523d6000602084013e6118b0565b606091505b505060408051848152821515602082015291925033917fa427c7d47f24d01b170779a7600b1d4c0d7cdbabaa0f19c4f0e6182053ffc931910160405180910390a2505b50565b60405181838237600038838387895af1611913573d6000823e3d81fd5b3d8152602081013d6000823e3d01604052949350505050565b6060610d507f00000000000000000000000000000000000000000000000000000000000000006000611ccb565b6060610d507f00000000000000000000000000000000000000000000000000000000000000006001611ccb565b6001600160f81b031990811691161490565b366000833580850160208587010360208201945081359350808460051b8301118360401c17156119d05763ba597e7e6000526004601cfd5b8315611a27578392505b6001830392508260051b850135915081850160408101358082018381358201118460408501111782861782351760401c1715611a1e5763ba597e7e6000526004601cfd5b505050826119da575b5050509250929050565b606081806001600160401b03811115611a4c57611a4c612046565b604051908082528060200260200182016040528015611a7f57816020015b6060815260200190600190039081611a6a5790505b50915060005b81811015611aea5736858583818110611aa057611aa0612a57565b9050602002810190611ab29190612a96565b9050611ac4610c4e602083018361292a565b848381518110611ad657611ad6612a57565b602090810291909101015250600101611a85565b505092915050565b606081806001600160401b03811115611b0d57611b0d612046565b604051908082528060200260200182016040528015611b4057816020015b6060815260200190600190039081611b2b5790505b50915060005b81811015611aea5736858583818110611b6157611b61612a57565b9050602002810190611b739190612a96565b90506000611b9e611b87602084018461292a565b6020840135611b996040860186612947565b611c70565b868581518110611bb057611bb0612a57565b6020908102919091010152905080611c15577fe723f28f104e46b47fd3531f3608374ac226bcf3ddda334a23a266453e0efdb783868581518110611bf657611bf6612a57565b6020026020010151604051611c0c929190612a6d565b60405180910390a15b5050600101611b46565b6000803681611c316014828789612ab6565b611c3a91612ae0565b60601c9350611c4d603460148789612ab6565b611c5691612b13565b9250611c658560348189612ab6565b949793965094505050565b604051600090828482376000388483888a5af191503d8152602081013d6000823e3d81016040525094509492505050565b600080600080611cb18686611d76565b925092509250611cc18282611dc3565b5090949350505050565b606060ff8314611ce557611cde83611e7c565b90506106f3565b818054611cf190612b31565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1d90612b31565b8015611d6a5780601f10611d3f57610100808354040283529160200191611d6a565b820191906000526020600020905b815481529060010190602001808311611d4d57829003601f168201915b505050505090506106f3565b60008060008351604103611db05760208401516040850151606086015160001a611da288828585611ebb565b955095509550505050611dbc565b50508151600091506002905b9250925092565b6000826003811115611dd757611dd7612b65565b03611de0575050565b6001826003811115611df457611df4612b65565b03611e125760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611e2657611e26612b65565b03611e475760405163fce698f760e01b815260048101829052602401611121565b6003826003811115611e5b57611e5b612b65565b03610c65576040516335e2f38360e21b815260048101829052602401611121565b60606000611e8983611f8a565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611ef65750600091506003905082611f80565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611f4a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611f7657506000925060019150829050611f80565b9250600091508190505b9450945094915050565b600060ff8216601f8111156106f357604051632cd44ac360e21b815260040160405180910390fd5b600060208284031215611fc457600080fd5b81356001600160e01b0319811681146107e357600080fd5b60006101208284031215611fef57600080fd5b50919050565b60006020828403121561200757600080fd5b81356001600160401b0381111561201d57600080fd5b61202984828501611fdc565b949350505050565b6001600160a01b03811681146118f357600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561208457612084612046565b604052919050565b600082601f83011261209d57600080fd5b81356001600160401b038111156120b6576120b6612046565b6120c9601f8201601f191660200161205c565b8181528460208386010111156120de57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561211157600080fd5b843561211c81612031565b9350602085013561212c81612031565b92506040850135915060608501356001600160401b0381111561214e57600080fd5b61215a8782880161208c565b91505092959194509250565b60008083601f84011261217857600080fd5b5081356001600160401b0381111561218f57600080fd5b6020830191508360208285010111156121a757600080fd5b9250929050565b6000806000604084860312156121c357600080fd5b8335925060208401356001600160401b038111156121e057600080fd5b6121ec86828701612166565b9497909650939450505050565b60008060006060848603121561220e57600080fd5b83356001600160401b0381111561222457600080fd5b61223086828701611fdc565b9660208601359650604090950135949350505050565b60006020828403121561225857600080fd5b81356001600160c01b03811681146107e357600080fd5b60006020828403121561228157600080fd5b81356001600160401b0381111561229757600080fd5b820160c081850312156107e357600080fd5b6000602082840312156122bb57600080fd5b5035919050565b6000602082840312156122d457600080fd5b81356001600160401b038111156122ea57600080fd5b8201606081850312156107e357600080fd5b6000806040838503121561230f57600080fd5b823561231a81612031565b946020939093013593505050565b6000815180845260005b8181101561234e57602081850181015186830182015201612332565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e0602084015261238f60e084018a612328565b83810360408501526123a1818a612328565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b818110156123f5578351835292840192918401916001016123d9565b50909c9b505050505050505050505050565b6020815260006107e36020830184612328565b600082601f83011261242b57600080fd5b813560206001600160401b0382111561244657612446612046565b8160051b61245582820161205c565b928352848101820192828101908785111561246f57600080fd5b83870192505b8483101561248e57823582529183019190830190612475565b979650505050505050565b600080600080600060a086880312156124b157600080fd5b85356124bc81612031565b945060208601356124cc81612031565b935060408601356001600160401b03808211156124e857600080fd5b6124f489838a0161241a565b9450606088013591508082111561250a57600080fd5b61251689838a0161241a565b9350608088013591508082111561252c57600080fd5b506125398882890161208c565b9150509295509295909350565b60008083601f84011261255857600080fd5b5081356001600160401b0381111561256f57600080fd5b6020830191508360208260051b85010111156121a757600080fd5b600080600080600080606087890312156125a357600080fd5b86356001600160401b03808211156125ba57600080fd5b6125c68a838b01612546565b909850965060208901359150808211156125df57600080fd5b6125eb8a838b01612546565b9096509450604089013591508082111561260457600080fd5b5061261189828a01612546565b979a9699509497509295939492505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561267a57603f19888603018452612668858351612328565b9450928501929085019060010161264c565b5092979650505050505050565b600080600080600060a0868803121561269f57600080fd5b85356126aa81612031565b945060208601356126ba81612031565b9350604086013592506060860135915060808601356001600160401b038111156126e357600080fd5b6125398882890161208c565b60006020828403121561270157600080fd5b5051919050565b6000808335601e1984360301811261271f57600080fd5b83016020810192503590506001600160401b0381111561273e57600080fd5b8036038213156121a757600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008383855260208086019550808560051b830101846000805b8881101561282957858403601f19018a52823536899003605e190181126127b5578283fd5b8801606081356127c481612031565b6001600160a01b031686526127db82880183612708565b82898901526127ed838901828461274d565b9250505060406127ff81840184612708565b93508783038289015261281383858361274d565b9d89019d97505050938601935050600101612790565b509198975050505050505050565b602081526000823561284881612031565b6001600160a01b039081166020848101919091528401359061286982612031565b80821660408501525050604083013560608301526060830135601e1984360301811261289457600080fd5b83016020810190356001600160401b038111156128b057600080fd5b8060051b36038213156128c257600080fd5b60c060808501526128d760e085018284612776565b915050608084013560a08401526128f160a0850185612708565b848303601f190160c0860152610fec83828461274d565b60006020828403121561291a57600080fd5b815180151581146107e357600080fd5b60006020828403121561293c57600080fd5b81356107e381612031565b6000808335601e1984360301811261295e57600080fd5b8301803591506001600160401b0382111561297857600080fd5b6020019150368190038213156121a757600080fd5b6000838385526020808601955060208560051b8301018460005b878110156129e157848303601f190189526129c28288612708565b6129cd85828461274d565b9a86019a94505050908301906001016129a7565b5090979650505050505050565b606081526000612a0260608301888a61298d565b8281036020848101919091528682528791810160005b88811015612a3457833582529282019290820190600101612a18565b508481036040860152612a4881878961298d565b9b9a5050505050505050505050565b634e487b7160e01b600052603260045260246000fd5b8281526040602082015260006107e06040830184612328565b8183823760009101908152919050565b60008235605e19833603018112612aac57600080fd5b9190910192915050565b60008085851115612ac657600080fd5b83861115612ad357600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015611aea5760149490940360031b84901b1690921692915050565b803560208310156106f357600019602084900360031b1b1692915050565b600181811c90821680612b4557607f821691505b602082108103611fef57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212202a8fc88ef923739742bc7ec1685cd9198a7251cfb58c7e873c821a7e716b2ca664736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceCache\",\n    \"inputs\": [\n      {\n        \"name\": \"hashKey\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"balance\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getHashKey\",\n    \"inputs\": [\n      {\n        \"name\": \"_caller\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_token\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"enforceDecrease_\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"token_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"recipient_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isLocked\",\n    \"inputs\": [\n      {\n        \"name\": \"hashKey\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"lock\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b5061095e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5e544921161005b578063b5e5449214610115578063b99deb0e14610135578063d3eddcc51461017a578063ed463367146100c557600080fd5b806332a16f4e1461008d578063414c3e33146100c55780638678d6ef146100e1578063a145832a14610102575b600080fd5b6100b061009b366004610677565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100df6100d33660046106f5565b50505050505050505050565b005b6100f46100ef3660046107c2565b61018d565b6040519081526020016100bc565b6100df6101103660046106f5565b6101a2565b6100f4610123366004610677565b60006020819052908152604090205481565b6101486101433660046107fe565b610353565b6040516100bc949392919093151584526001600160a01b03928316602085015291166040830152606082015260800190565b6100df6101883660046106f5565b610440565b600061019a84848461061d565b949350505050565b85600881901b6101b3816000610660565b6102125760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b506000806102208d8d610353565b509250925050600061023333848961061d565b60008181526001602052604090205490915060ff16156102ab5760405162461bcd60e51b815260206004820152602d60248201527f455243323042616c616e63654368616e6765456e666f726365723a656e666f7260448201526c18d95c8b5a5ccb5b1bd8dad959609a1b6064820152608401610209565b6000818152600160208190526040808320805460ff1916909217909155516370a0823160e01b81526001600160a01b0384811660048301528516906370a0823190602401602060405180830381865afa15801561030c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103309190610840565b600092835260208390526040909220919091555050505050505050505050505050565b6000808080604985146103c05760405162461bcd60e51b815260206004820152602f60248201527f455243323042616c616e63654368616e6765456e666f726365723a696e76616c60448201526e0d2c85ae8cae4dae65ad8cadccee8d608b1b6064820152608401610209565b858560008181106103d3576103d3610859565b909101356001600160f81b031916151594506103f5905060156001878961086f565b6103fe91610899565b60601c925061041160296015878961086f565b61041a91610899565b60601c915061042c856029818961086f565b610435916108ce565b939692955090935050565b6000806000806104508e8e610353565b9350935093509350600061046533858a61061d565b600081815260016020526040808220805460ff19169055516370a0823160e01b81526001600160a01b03868116600483015292935090918616906370a0823190602401602060405180830381865afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190610840565b9050851561057c5760008281526020819052604090205461050b908490610902565b8110156105775760405162461bcd60e51b815260206004820152603460248201527f455243323042616c616e63654368616e6765456e666f726365723a65786365656044820152736465642d62616c616e63652d646563726561736560601b6064820152608401610209565b61060b565b600082815260208190526040902054610596908490610915565b81101561060b5760405162461bcd60e51b815260206004820152603860248201527f455243323042616c616e63654368616e6765456e666f726365723a696e73756660448201527f66696369656e742d62616c616e63652d696e63726561736500000000000000006064820152608401610209565b50505050505050505050505050505050565b604080516001600160a01b039485166020808301919091529390941684820152606080850192909252805180850390920182526080909301909252815191012090565b6001600160f81b0319828116908216145b92915050565b60006020828403121561068957600080fd5b5035919050565b60008083601f8401126106a257600080fd5b50813567ffffffffffffffff8111156106ba57600080fd5b6020830191508360208285010111156106d257600080fd5b9250929050565b80356001600160a01b03811681146106f057600080fd5b919050565b60008060008060008060008060008060e08b8d03121561071457600080fd5b8a3567ffffffffffffffff8082111561072c57600080fd5b6107388e838f01610690565b909c509a5060208d013591508082111561075157600080fd5b61075d8e838f01610690565b909a50985060408d0135975060608d013591508082111561077d57600080fd5b5061078a8d828e01610690565b90965094505060808b013592506107a360a08c016106d9565b91506107b160c08c016106d9565b90509295989b9194979a5092959850565b6000806000606084860312156107d757600080fd5b6107e0846106d9565b92506107ee602085016106d9565b9150604084013590509250925092565b6000806020838503121561081157600080fd5b823567ffffffffffffffff81111561082857600080fd5b61083485828601610690565b90969095509350505050565b60006020828403121561085257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808585111561087f57600080fd5b8386111561088c57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156108c65780818660140360031b1b83161692505b505092915050565b8035602083101561067157600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610671576106716108ec565b80820180821115610671576106716108ec56fea26469706673582212202ee065285e6d78b8f4f72189bef225cff106ed6fed2f250af767e847d4faa24364736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201dfea0fb90d440a56b093020135bfa0529382b21cf5681ce6bf65b9ef384b15664736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceCache\",\n    \"inputs\": [\n      {\n        \"name\": \"hashKey\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"balance\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getHashKey\",\n    \"inputs\": [\n      {\n        \"name\": \"_caller\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_token\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_recipient\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"enforceDecrease_\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"token_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"recipient_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isLocked\",\n    \"inputs\": [\n      {\n        \"name\": \"hashKey\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"lock\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b5061097c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5e544921161005b578063b5e5449214610115578063b99deb0e14610135578063d3eddcc51461017a578063ed463367146100c557600080fd5b806332a16f4e1461008d578063414c3e33146100c55780635f6f02e0146100e1578063a145832a14610102575b600080fd5b6100b061009b366004610686565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100df6100d3366004610704565b50505050505050505050565b005b6100f46100ef3660046107d1565b61018d565b6040519081526020016100bc565b6100df610110366004610704565b6101a4565b6100f4610123366004610686565b60006020819052908152604090205481565b61014861014336600461081c565b610357565b6040516100bc949392919093151584526001600160a01b03928316602085015291166040830152606082015260800190565b6100df610188366004610704565b610445565b600061019b85858585610624565b95945050505050565b85600881901b6101b581600061066f565b6102145760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b506000806102228d8d610357565b50925092505060006102363384848a610624565b60008181526001602052604090205490915060ff16156102af5760405162461bcd60e51b815260206004820152602e60248201527f45524337323142616c616e63654368616e6765456e666f726365723a656e666f60448201526d1c98d95c8b5a5ccb5b1bd8dad95960921b606482015260840161020b565b6000818152600160208190526040808320805460ff1916909217909155516370a0823160e01b81526001600160a01b0384811660048301528516906370a0823190602401602060405180830381865afa158015610310573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610334919061085e565b600092835260208390526040909220919091555050505050505050505050505050565b6000808080604985146103c55760405162461bcd60e51b815260206004820152603060248201527f45524337323142616c616e63654368616e6765456e666f726365723a696e766160448201526f0d8d2c85ae8cae4dae65ad8cadccee8d60831b606482015260840161020b565b858560008181106103d8576103d8610877565b909101356001600160f81b031916151594506103fa905060156001878961088d565b610403916108b7565b60601c925061041660296015878961088d565b61041f916108b7565b60601c9150610431856029818961088d565b61043a916108ec565b939692955090935050565b6000806000806104558e8e610357565b9350935093509350600061046b3385858b610624565b600081815260016020526040808220805460ff19169055516370a0823160e01b81526001600160a01b03868116600483015292935090918616906370a0823190602401602060405180830381865afa1580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ef919061085e565b9050851561058357600082815260208190526040902054610511908490610920565b81101561057e5760405162461bcd60e51b815260206004820152603560248201527f45524337323142616c616e63654368616e6765456e666f726365723a65786365604482015274656465642d62616c616e63652d646563726561736560581b606482015260840161020b565b610612565b60008281526020819052604090205461059d908490610933565b8110156106125760405162461bcd60e51b815260206004820152603960248201527f45524337323142616c616e63654368616e6765456e666f726365723a696e737560448201527f6666696369656e742d62616c616e63652d696e63726561736500000000000000606482015260840161020b565b50505050505050505050505050505050565b604080516001600160a01b03958616602080830191909152948616818301529290941660608301526080808301919091528351808303909101815260a0909101909252815191012090565b6001600160f81b0319828116908216145b92915050565b60006020828403121561069857600080fd5b5035919050565b60008083601f8401126106b157600080fd5b50813567ffffffffffffffff8111156106c957600080fd5b6020830191508360208285010111156106e157600080fd5b9250929050565b80356001600160a01b03811681146106ff57600080fd5b919050565b60008060008060008060008060008060e08b8d03121561072357600080fd5b8a3567ffffffffffffffff8082111561073b57600080fd5b6107478e838f0161069f565b909c509a5060208d013591508082111561076057600080fd5b61076c8e838f0161069f565b909a50985060408d0135975060608d013591508082111561078c57600080fd5b506107998d828e0161069f565b90965094505060808b013592506107b260a08c016106e8565b91506107c060c08c016106e8565b90509295989b9194979a5092959850565b600080600080608085870312156107e757600080fd5b6107f0856106e8565b93506107fe602086016106e8565b925061080c604086016106e8565b9396929550929360600135925050565b6000806020838503121561082f57600080fd5b823567ffffffffffffffff81111561084657600080fd5b6108528582860161069f565b90969095509350505050565b60006020828403121561087057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808585111561089d57600080fd5b838611156108aa57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156108e45780818660140360031b1b83161692505b505092915050565b8035602083101561068057600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106805761068061090a565b808201808211156106805761068061090a56fea26469706673582212201a908643c89c30b103124ac1346de2de7964be6fc4c537dea357364db407b9ad64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC7579DecodingError\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e31e42482ef7832f3e446f04f27415313e49db77c6e6717169033c8535b19d3764736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"permittedContract_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"permittedTokenId_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610821806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a3660046105ea565b50505050505050505050565b005b6100766100863660046105ea565b6100c1565b61009e6100993660046106bd565b61047c565b604080516001600160a01b03909316835260208301919091520160405180910390f35b856100cd816000610521565b61011e5760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b61012f816000610521565b6101895760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610115565b506000806101978e8e61047c565b9150915060003660006101aa8c8c610538565b929550935090915050606481101561021b5760405162461bcd60e51b815260206004820152602e60248201527f4552433732315472616e73666572456e666f726365723a696e76616c69642d6360448201526d0c2d8d8c8c2e8c25ad8cadccee8d60931b6064820152608401610115565b6000808061022c84600481886106ff565b8101906102399190610729565b919450925090506001600160a01b038316158061025d57506001600160a01b038216155b156102b95760405162461bcd60e51b815260206004820152602660248201527f4552433732315472616e73666572456e666f726365723a696e76616c69642d6160448201526564647265737360d01b6064820152608401610115565b60006102c860048287896106ff565b6102d19161076a565b9050886001600160a01b0316876001600160a01b0316146103505760405162461bcd60e51b815260206004820152603360248201527f4552433732315472616e73666572456e666f726365723a756e617574686f72696044820152721e99590b58dbdb9d1c9858dd0b5d185c99d95d606a1b6064820152608401610115565b6001600160e01b031981166323b872dd60e01b1480159061038257506001600160e01b03198116632142170760e11b14155b801561039f57506001600160e01b03198116635c46a7ef60e11b14155b156104015760405162461bcd60e51b815260206004820152602c60248201527f4552433732315472616e73666572456e666f726365723a756e617574686f726960448201526b3d32b216b9b2b632b1ba37b960a11b6064820152608401610115565b8782146104655760405162461bcd60e51b815260206004820152602c60248201527f4552433732315472616e73666572456e666f726365723a756e617574686f726960448201526b1e99590b5d1bdad95b8b5a5960a21b6064820152608401610115565b505050505050505050505050505050505050505050565b600080603483146104e35760405162461bcd60e51b815260206004820152602b60248201527f4552433732315472616e73666572456e666f726365723a696e76616c69642d7460448201526a0cae4dae65ad8cadccee8d60ab1b6064820152608401610115565b6104f16014600085876106ff565b6104fa9161079a565b60601c915061050c83601481876106ff565b610515916107cd565b60001c90509250929050565b6001600160f81b0319828116908216145b92915050565b600080368161054a60148287896106ff565b6105539161079a565b60601c93506105666034601487896106ff565b61056f916107cd565b925061057e85603481896106ff565b949793965094505050565b60008083601f84011261059b57600080fd5b50813567ffffffffffffffff8111156105b357600080fd5b6020830191508360208285010111156105cb57600080fd5b9250929050565b6001600160a01b03811681146105e757600080fd5b50565b60008060008060008060008060008060e08b8d03121561060957600080fd5b8a3567ffffffffffffffff8082111561062157600080fd5b61062d8e838f01610589565b909c509a5060208d013591508082111561064657600080fd5b6106528e838f01610589565b909a50985060408d0135975060608d013591508082111561067257600080fd5b5061067f8d828e01610589565b90965094505060808b0135925060a08b013561069a816105d2565b915060c08b01356106aa816105d2565b809150509295989b9194979a5092959850565b600080602083850312156106d057600080fd5b823567ffffffffffffffff8111156106e757600080fd5b6106f385828601610589565b90969095509350505050565b6000808585111561070f57600080fd5b8386111561071c57600080fd5b5050820193919092039150565b60008060006060848603121561073e57600080fd5b8335610749816105d2565b92506020840135610759816105d2565b929592945050506040919091013590565b6001600160e01b031981358181169160048510156107925780818660040360031b1b83161692505b505092915050565b6bffffffffffffffffffffffff1981358181169160148510156107925760149490940360031b84901b1690921692915050565b8035602083101561053257600019602084900360031b1b169291505056fea264697066735822122059baae7c286b09a388772bb8a0feea8851f9a4fec98691fdc00e38b6eb1a59b964736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getAvailableAmount\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"availableAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"token_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"initialAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"maxAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"amountPerSecond_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startTime_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"streamingAllowances\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"initialAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"maxAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"amountPerSecond\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startTime\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"spent\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"IncreasedSpentMap\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"initialAmount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"maxAmount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"amountPerSecond\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startTime\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"spent\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"lastUpdateTimestamp\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610b7d806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063d3eddcc51161005b578063d3eddcc514610082578063ed46336714610082578063ee73d772146100fb578063fb7d2c5b1461011c57600080fd5b8063414c3e3314610082578063a145832a1461009e578063b99deb0e146100b1575b600080fd5b61009c610090366004610910565b50505050505050505050565b005b61009c6100ac366004610910565b610189565b6100c46100bf3660046109dd565b61026e565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b61010e610109366004610a1f565b610365565b6040519081526020016100f2565b61016161012a366004610a1f565b6000602081815292815260408082209093529081522080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100f2565b856101958160006103d0565b6101e65760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6101f78160006103d0565b6102515760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084016101dd565b506102608c8c898989886103e7565b505050505050505050505050565b600080808080609486146102d85760405162461bcd60e51b815260206004820152602b60248201527f455243323053747265616d696e67456e666f726365723a696e76616c69642d7460448201526a0cae4dae65ad8cadccee8d60ab1b60648201526084016101dd565b6102e660146000888a610a49565b6102ef91610a73565b60601c945061030260346014888a610a49565b61030b91610aa8565b935061031b60546034888a610a49565b61032491610aa8565b925061033460746054888a610a49565b61033d91610aa8565b915061034d60946074888a610a49565b61035691610aa8565b60001c90509295509295909350565b6001600160a01b0382166000908152602081815260408083208484528252808320815160a081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152906103c8906107d9565b949350505050565b6001600160f81b0319828116908216145b92915050565b60003660006103f6878761085a565b929550935090915050604481146104675760405162461bcd60e51b815260206004820152602f60248201527f455243323053747265616d696e67456e666f726365723a696e76616c69642d6560448201526e0f0cac6eae8d2dedc5ad8cadccee8d608b1b60648201526084016101dd565b60008060008060006104798e8e61026e565b94509450945094509450838310156104e55760405162461bcd60e51b815260206004820152602960248201527f455243323053747265616d696e67456e666f726365723a696e76616c69642d6d604482015268185e0b585b5bdd5b9d60ba1b60648201526084016101dd565b6000811161054c5760405162461bcd60e51b815260206004820152602e60248201527f455243323053747265616d696e67456e666f726365723a696e76616c69642d7a60448201526d65726f2d73746172742d74696d6560901b60648201526084016101dd565b876001600160a01b0316856001600160a01b0316146105bd5760405162461bcd60e51b815260206004820152602760248201527f455243323053747265616d696e67456e666f726365723a696e76616c69642d636044820152661bdb9d1c9858dd60ca1b60648201526084016101dd565b63a9059cbb60e01b6105d360046000898b610a49565b6105dc91610ac6565b6001600160e01b031916146106415760405162461bcd60e51b815260206004820152602560248201527f455243323053747265616d696e67456e666f726365723a696e76616c69642d6d604482015264195d1a1bd960da1b60648201526084016101dd565b336000908152602081815260408083208d84529091528120600481015490910361067e578481556001810184905560028101839055600381018290555b600061068e604460248a8c610a49565b61069791610aa8565b6040805160a081018252845481526001850154602082015260028501549181019190915260038401546060820152600484015460808201529091506106db906107d9565b81111561073c5760405162461bcd60e51b815260206004820152602960248201527f455243323053747265616d696e67456e666f726365723a616c6c6f77616e63656044820152680b595e18d95959195960ba1b60648201526084016101dd565b808260040160008282546107509190610b0a565b90915550506004820154604080516001600160a01b038a81168252602082018a9052818301899052606082018890526080820187905260a08201939093524260c082015290518e928e169133917f30ceca901166c86cac9d1024230d7f5740b26cce6bdd9bad7b1d6e616904ea639181900360e00190a450505050505050505050505050505050565b600081606001514210156107ef57506000919050565b60008260600151426108019190610b1d565b905060008184604001516108159190610b30565b84516108219190610b0a565b90508360200151811115610836575060208301515b8084608001511061084b575060009392505050565b60808401516103c89082610b1d565b600080368161086c6014828789610a49565b61087591610a73565b60601c9350610888603460148789610a49565b61089191610aa8565b92506108a08560348189610a49565b949793965094505050565b60008083601f8401126108bd57600080fd5b50813567ffffffffffffffff8111156108d557600080fd5b6020830191508360208285010111156108ed57600080fd5b9250929050565b80356001600160a01b038116811461090b57600080fd5b919050565b60008060008060008060008060008060e08b8d03121561092f57600080fd5b8a3567ffffffffffffffff8082111561094757600080fd5b6109538e838f016108ab565b909c509a5060208d013591508082111561096c57600080fd5b6109788e838f016108ab565b909a50985060408d0135975060608d013591508082111561099857600080fd5b506109a58d828e016108ab565b90965094505060808b013592506109be60a08c016108f4565b91506109cc60c08c016108f4565b90509295989b9194979a5092959850565b600080602083850312156109f057600080fd5b823567ffffffffffffffff811115610a0757600080fd5b610a13858286016108ab565b90969095509350505050565b60008060408385031215610a3257600080fd5b610a3b836108f4565b946020939093013593505050565b60008085851115610a5957600080fd5b83861115610a6657600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015610aa05780818660140360031b1b83161692505b505092915050565b803560208310156103e157600019602084900360031b1b1692915050565b6001600160e01b03198135818116916004851015610aa05760049490940360031b84901b1690921692915050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103e1576103e1610af4565b818103818111156103e1576103e1610af4565b80820281158282048414176103e1576103e1610af456fea2646970667358221220d9282c553e448eac7b4631259f5a457c28077fd4d88ef08db72ec3df532e99ed64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"validateUserOp\",\n    \"inputs\": [\n      {\n        \"name\": \"userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"missingAccountFunds\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"validationData\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"callData_\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610559806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a366004610338565b50505050505050505050565b005b610076610086366004610338565b6100b4565b61009e610099366004610405565b61022b565b6040516100ab9190610447565b60405180910390f35b856100c081600061026b565b6101115760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b61012281600061026b565b61017c5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610108565b5036600061018a8989610282565b935093505050600061019c8f8f61022b565b905082826040516101ae929190610496565b604051809103902081805190602001201461021a5760405162461bcd60e51b815260206004820152602660248201527f457861637443616c6c64617461456e666f726365723a696e76616c69642d63616044820152656c6c6461746160d01b6064820152608401610108565b505050505050505050505050505050565b606082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929695505050505050565b6001600160f81b0319828116908216145b92915050565b600080368161029460148287896104a6565b61029d916104d0565b60601c93506102b06034601487896104a6565b6102b991610505565b92506102c885603481896104a6565b949793965094505050565b60008083601f8401126102e557600080fd5b50813567ffffffffffffffff8111156102fd57600080fd5b60208301915083602082850101111561031557600080fd5b9250929050565b80356001600160a01b038116811461033357600080fd5b919050565b60008060008060008060008060008060e08b8d03121561035757600080fd5b8a3567ffffffffffffffff8082111561036f57600080fd5b61037b8e838f016102d3565b909c509a5060208d013591508082111561039457600080fd5b6103a08e838f016102d3565b909a50985060408d0135975060608d01359150808211156103c057600080fd5b506103cd8d828e016102d3565b90965094505060808b013592506103e660a08c0161031c565b91506103f460c08c0161031c565b90509295989b9194979a5092959850565b6000806020838503121561041857600080fd5b823567ffffffffffffffff81111561042f57600080fd5b61043b858286016102d3565b90969095509350505050565b60006020808352835180602085015260005b8181101561047557858101830151858201604001528201610459565b506000604082860101526040601f19601f8301168501019250505092915050565b8183823760009101908152919050565b600080858511156104b657600080fd5b838611156104c357600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156104fd5780818660140360031b1b83161692505b505092915050565b8035602083101561027c57600019602084900360031b1b169291505056fea26469706673582212207ea2be587c5142bd07609ab1e9e3d82af76502619dbab0e88f14c164094d01e564736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"aggregateSignatures\",\n    \"inputs\": [\n      {\n        \"name\": \"userOps\",\n        \"type\": \"tuple[]\",\n        \"internalType\": \"struct PackedUserOperation[]\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"aggregatedSignature\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"validateSignatures\",\n    \"inputs\": [\n      {\n        \"name\": \"userOps\",\n        \"type\": \"tuple[]\",\n        \"internalType\": \"struct PackedUserOperation[]\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"signature\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"validateUserOpSignature\",\n    \"inputs\": [\n      {\n        \"name\": \"userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"sigForUserOp\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"execution_\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Execution\",\n        \"components\": [\n          {\n            \"name\": \"target\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b5061062f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a3660046103e9565b50505050505050505050565b005b6100766100863660046103e9565b6100b4565b61009e6100993660046104b6565b610197565b6040516100ab91906104f8565b60405180910390f35b856100c0816000610210565b6101115760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b610122816000610210565b61017c5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610108565b506101898c8c8989610227565b505050505050505050505050565b604080516060808201835260008083526020830152918101919091526101bd8383610333565b81818080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506040860152505060208301526001600160a01b0316815292915050565b6001600160f81b0319828116908216145b92915050565b6000803660006102378686610333565b929650909450925090506001600160a01b038416610259601460008a8c61056c565b61026291610596565b60601c14801561028757508261027c603460148a8c61056c565b610285916105cb565b145b80156102cc5750818160405161029e9291906105e9565b6040519081900390206102b4886034818c61056c565b6040516102c29291906105e9565b6040518091039020145b6103295760405162461bcd60e51b815260206004820152602860248201527f4578616374457865637574696f6e456e666f726365723a696e76616c69642d656044820152673c32b1baba34b7b760c11b6064820152608401610108565b5050505050505050565b6000803681610345601482878961056c565b61034e91610596565b60601c935061036160346014878961056c565b61036a916105cb565b9250610379856034818961056c565b949793965094505050565b60008083601f84011261039657600080fd5b50813567ffffffffffffffff8111156103ae57600080fd5b6020830191508360208285010111156103c657600080fd5b9250929050565b80356001600160a01b03811681146103e457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561040857600080fd5b8a3567ffffffffffffffff8082111561042057600080fd5b61042c8e838f01610384565b909c509a5060208d013591508082111561044557600080fd5b6104518e838f01610384565b909a50985060408d0135975060608d013591508082111561047157600080fd5b5061047e8d828e01610384565b90965094505060808b0135925061049760a08c016103cd565b91506104a560c08c016103cd565b90509295989b9194979a5092959850565b600080602083850312156104c957600080fd5b823567ffffffffffffffff8111156104e057600080fd5b6104ec85828601610384565b90969095509350505050565b6000602080835260018060a01b038451166020840152602084015160408401526040840151606080850152805180608086015260005b8181101561054a5782810184015186820160a00152830161052e565b50600060a0828701015260a0601f19601f830116860101935050505092915050565b6000808585111561057c57600080fd5b8386111561058957600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156105c35780818660140360031b1b83161692505b505092915050565b8035602083101561022157600019602084900360031b1b1692915050565b818382376000910190815291905056fea2646970667358221220e961f8992a129634c5841f6f8ff7eac208b6822d2646363c613c0f46bcd65a0b64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"implementation\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"disableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"disabledDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"enableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDelegationHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDomainHash\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"pause\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"redeemDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"_permissionContexts\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      },\n      {\n        \"name\": \"_modes\",\n        \"type\": \"bytes32[]\",\n        \"internalType\": \"ModeCode[]\"\n      },\n      {\n        \"name\": \"_executionCallDatas\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"unpause\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"DisabledDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"delegator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegate\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegation\",\n        \"type\": \"tuple\",\n        \"indexed\": false,\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EnabledDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"delegator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegate\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegation\",\n        \"type\": \"tuple\",\n        \"indexed\": false,\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"RedeemedDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"rootDelegator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegation\",\n        \"type\": \"tuple\",\n        \"indexed\": false,\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetDomain\",\n    \"inputs\": [\n      {\n        \"name\": \"domainHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"domainVersion\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"contractAddress\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AlreadyDisabled\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AlreadyEnabled\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"BatchDataLengthMismatch\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"CannotUseADisabledDelegation\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"EmptySignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidAuthority\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidDelegate\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidDelegator\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidEOASignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidERC1271Signature\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"receive\",\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addStake\",\n    \"inputs\": [\n      {\n        \"name\": \"unstakeDelaySec\",\n        \"type\": \"uint32\",\n        \"internalType\": \"uint32\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegateAndRevert\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"depositTo\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"deposits\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"deposit\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"staked\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"stake\",\n        \"type\": \"uint112\",\n        \"internalType\": \"uint112\"\n      },\n      {\n        \"name\": \"unstakeDelaySec\",\n        \"type\": \"uint32\",\n        \"internalType\": \"uint32\"\n      },\n      {\n        \"name\": \"withdrawTime\",\n        \"type\": \"uint48\",\n        \"internalType\": \"uint48\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDepositInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"info\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct IStakeManager.DepositInfo\",\n        \"components\": [\n          {\n            \"name\": \"deposit\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"staked\",\n            \"type\": \"bool\",\n            \"internalType\": \"bool\"\n          },\n          {\n            \"name\": \"stake\",\n            \"type\": \"uint112\",\n            \"internalType\": \"uint112\"\n          },\n          {\n            \"name\": \"unstakeDelaySec\",\n            \"type\": \"uint32\",\n            \"internalType\": \"uint32\"\n          },\n          {\n            \"name\": \"withdrawTime\",\n            \"type\": \"uint48\",\n            \"internalType\": \"uint48\"\n          }\n        ]\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getSenderAddress\",\n    \"inputs\": [\n      {\n        \"name\": \"initCode\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getUserOpHash\",\n    \"inputs\": [\n      {\n        \"name\": \"userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"handleAggregatedOps\",\n    \"inputs\": [\n      {\n        \"name\": \"opsPerAggregator\",\n        \"type\": \"tuple[]\",\n        \"internalType\": \"struct IEntryPoint.UserOpsPerAggregator[]\",\n        \"components\": [\n          {\n            \"name\": \"userOps\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct PackedUserOperation[]\",\n            \"components\": [\n              {\n                \"name\": \"sender\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"nonce\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"initCode\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"callData\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"accountGasLimits\",\n                \"type\": \"bytes32\",\n                \"internalType\": \"bytes32\"\n              },\n              {\n                \"name\": \"preVerificationGas\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"gasFees\",\n                \"type\": \"bytes32\",\n                \"internalType\": \"bytes32\"\n              },\n              {\n                \"name\": \"paymasterAndData\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"signature\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"aggregator\",\n            \"type\": \"address\",\n            \"internalType\": \"contract IAggregator\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"beneficiary\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"handleOps\",\n    \"inputs\": [\n      {\n        \"name\": \"ops\",\n        \"type\": \"tuple[]\",\n        \"internalType\": \"struct PackedUserOperation[]\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"beneficiary\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"incrementNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"innerHandleOp\",\n    \"inputs\": [\n      {\n        \"name\": \"callData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"opInfo\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct EntryPoint.UserOpInfo\",\n        \"components\": [\n          {\n            \"name\": \"mUserOp\",\n            \"type\": \"tuple\",\n            \"internalType\": \"struct EntryPoint.MemoryUserOp\",\n            \"components\": [\n              {\n                \"name\": \"sender\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"nonce\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"verificationGasLimit\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"callGasLimit\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"paymasterVerificationGasLimit\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"paymasterPostOpGasLimit\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"preVerificationGas\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"paymaster\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"maxFeePerGas\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"maxPriorityFeePerGas\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              }\n            ]\n          },\n          {\n            \"name\": \"userOpHash\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"prefund\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"contextOffset\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"preOpGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          }\n        ]\n      },\n      {\n        \"name\": \"context\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"actualGasCost\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"nonceSequenceNumber\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"unlockStake\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawStake\",\n    \"inputs\": [\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawTo\",\n    \"inputs\": [\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      },\n      {\n        \"name\": \"withdrawAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"AccountDeployed\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"factory\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"paymaster\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"BeforeExecution\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Deposited\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"totalDeposit\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"PostOpRevertReason\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"revertReason\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SignatureAggregatorChanged\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeLocked\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"totalStaked\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"unstakeDelaySec\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeUnlocked\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawTime\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeWithdrawn\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"UserOperationEvent\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"paymaster\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"success\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"actualGasCost\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"actualGasUsed\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"UserOperationPrefundTooLow\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"UserOperationRevertReason\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"revertReason\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Withdrawn\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"DelegateAndRevert\",\n    \"inputs\": [\n      {\n        \"name\": \"success\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"ret\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedOp\",\n    \"inputs\": [\n      {\n        \"name\": \"opIndex\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"reason\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedOpWithRevert\",\n    \"inputs\": [\n      {\n        \"name\": \"opIndex\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"reason\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"inner\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"PostOpReverted\",\n    \"inputs\": [\n      {\n        \"name\": \"returnData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ReentrancyGuardReentrantCall\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SenderAddressResult\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SignatureValidationFailed\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x60a0604052604051620000129062000051565b604051809103905ff0801580156200002c573d5f803e3d5ffd5b506001600160a01b031660805234801562000045575f80fd5b5060016002556200005f565b6101ff806200374883390190565b6080516136c96200007f5f395f8181610de0015261271501526136c95ff3fe608060405260043610610107575f3560e01c806370a0823111610092578063b760faf911610062578063b760faf914610425578063bb9fe6bf14610438578063c23a5cea1461044c578063dbed18e01461046b578063fc7e286d1461048a575f80fd5b806370a0823114610394578063765e827f146103c8578063850aaf62146103e75780639b249f6914610406575f80fd5b80631b2e01b8116100d85780631b2e01b8146101ae578063205c2878146101e457806322cdde4c1461020357806335567e1a146102225780635287ce1214610280575f80fd5b806242dc531461011b57806301ffc9a71461014d5780630396cb601461017c5780630bd28e3b1461018f575f80fd5b366101175761011533610530565b005b5f80fd5b348015610126575f80fd5b5061013a610135366004612c4f565b610584565b6040519081526020015b60405180910390f35b348015610158575f80fd5b5061016c610167366004612d06565b610702565b6040519015158152602001610144565b61011561018a366004612d2d565b610789565b34801561019a575f80fd5b506101156101a9366004612d66565b610a14565b3480156101b9575f80fd5b5061013a6101c8366004612d7f565b600160209081525f928352604080842090915290825290205481565b3480156101ef575f80fd5b506101156101fe366004612db2565b610a4a565b34801561020e575f80fd5b5061013a61021d366004612ddc565b610b96565b34801561022d575f80fd5b5061013a61023c366004612d7f565b6001600160a01b0382165f9081526001602090815260408083206001600160c01b038516845290915290819020549082901b67ffffffffffffffff19161792915050565b34801561028b575f80fd5b5061033a61029a366004612e13565b6040805160a0810182525f80825260208201819052918101829052606081018290526080810191909152506001600160a01b03165f9081526020818152604091829020825160a0810184528154815260019091015460ff811615159282019290925261010082046001600160701b031692810192909252600160781b810463ffffffff166060830152600160981b900465ffffffffffff16608082015290565b60405161014491905f60a082019050825182526020830151151560208301526001600160701b03604084015116604083015263ffffffff606084015116606083015265ffffffffffff608084015116608083015292915050565b34801561039f575f80fd5b5061013a6103ae366004612e13565b6001600160a01b03165f9081526020819052604090205490565b3480156103d3575f80fd5b506101156103e2366004612e6e565b610bd7565b3480156103f2575f80fd5b50610115610401366004612ec0565b610d4c565b348015610411575f80fd5b50610115610420366004612f10565b610dc7565b610115610433366004612e13565b610530565b348015610443575f80fd5b50610115610e7e565b348015610457575f80fd5b50610115610466366004612e13565b610fa8565b348015610476575f80fd5b50610115610485366004612e6e565b6111c7565b348015610495575f80fd5b506104ed6104a4366004612e13565b5f602081905290815260409020805460019091015460ff81169061010081046001600160701b031690600160781b810463ffffffff1690600160981b900465ffffffffffff1685565b6040805195865293151560208601526001600160701b039092169284019290925263ffffffff909116606083015265ffffffffffff16608082015260a001610144565b5f61053b82346115ce565b9050816001600160a01b03167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c48260405161057891815260200190565b60405180910390a25050565b5f805a90503330146105dd5760405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c7900000000000000000060448201526064015b60405180910390fd5b8451606081015160a082015181016127100160405a603f028161060257610602612f4e565b0410156106185763deaddead60e01b5f5260205ffd5b87515f90156106a6575f610631845f01515f8c86611600565b9050806106a4575f610644610800611616565b80519091501561069e57845f01516001600160a01b03168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201876020015184604051610695929190612faf565b60405180910390a35b60019250505b505b5f88608001515a86030190506106f4828a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250879250611641915050565b9a9950505050505050505050565b5f6001600160e01b0319821663307e35b760e11b148061073257506001600160e01b0319821663122a0e9b60e31b145b8061074d57506001600160e01b0319821663cf28ef9760e01b145b8061076857506001600160e01b03198216633e84f02160e01b145b8061078357506301ffc9a760e01b6001600160e01b03198316145b92915050565b335f90815260208190526040902063ffffffff82166107ea5760405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064016105d4565b600181015463ffffffff600160781b9091048116908316101561084f5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d650000000060448201526064016105d4565b60018101545f9061086f90349061010090046001600160701b0316612fdb565b90505f81116108b55760405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b60448201526064016105d4565b6001600160701b038111156108fd5760405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b60448201526064016105d4565b6040805160a08101825283548152600160208083018281526001600160701b0386811685870190815263ffffffff8a8116606088018181525f60808a0181815233808352828a52918c90209a518b55965199909801805494519151965165ffffffffffff16600160981b0265ffffffffffff60981b1997909416600160781b029690961669ffffffffffffffffffff60781b1991909516610100026effffffffffffffffffffffffffff0019991515999099166effffffffffffffffffffffffffffff1990941693909317979097179190911691909117179055835185815290810192909252917fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01910160405180910390a2505050565b335f9081526001602090815260408083206001600160c01b03851684529091528120805491610a4283612fee565b919050555050565b335f9081526020819052604090208054821115610aa95760405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c617267650000000000000060448201526064016105d4565b8054610ab6908390613006565b8155604080516001600160a01b03851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a25f836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610b45576040519150601f19603f3d011682016040523d82523d5f602084013e610b4a565b606091505b5050905080610b905760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b60448201526064016105d4565b50505050565b5f610ba0826117f9565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b610bdf611811565b815f816001600160401b03811115610bf957610bf9612a5a565b604051908082528060200260200182016040528015610c3257816020015b610c1f6129d0565b815260200190600190039081610c175790505b5090505f5b82811015610ca7575f828281518110610c5257610c52613019565b602002602001015190505f80610c8c848a8a87818110610c7457610c74613019565b9050602002810190610c86919061302d565b85611839565b91509150610c9c8483835f611a3b565b505050600101610c37565b506040515f907fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972908290a15f5b83811015610d2f57610d2381888884818110610cf257610cf2613019565b9050602002810190610d04919061302d565b858481518110610d1657610d16613019565b6020026020010151611bd5565b90910190600101610cd4565b50610d3a8482611e83565b505050610d476001600255565b505050565b5f80846001600160a01b03168484604051610d6892919061304c565b5f60405180830381855af49150503d805f8114610da0576040519150601f19603f3d011682016040523d82523d5f602084013e610da5565b606091505b50915091508181604051632650415560e21b81526004016105d492919061305b565b604051632b870d1b60e11b81525f906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a3690610e17908690869060040161309d565b6020604051808303815f875af1158015610e33573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e5791906130b0565b604051633653dc0360e11b81526001600160a01b03821660048201529091506024016105d4565b335f90815260208190526040812060018101549091600160781b90910463ffffffff169003610edc5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b60448201526064016105d4565b600181015460ff16610f245760405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b60448201526064016105d4565b60018101545f90610f4290600160781b900463ffffffff16426130cb565b60018301805460ff65ffffffffffff60981b011916600160981b65ffffffffffff841690810260ff19169190911790915560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602001610578565b335f908152602081905260409020600181015461010090046001600160701b03168061100d5760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b60448201526064016105d4565b6001820154600160981b900465ffffffffffff1661106d5760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b65282920666972737400000060448201526064016105d4565b600182015442600160981b90910465ffffffffffff1611156110d15760405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f7420647565000000000060448201526064016105d4565b600182018054610100600160c81b0319169055604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a25f836001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611171576040519150601f19603f3d011682016040523d82523d5f602084013e611176565b606091505b5050905080610b905760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b65000000000000000060448201526064016105d4565b6111cf611811565b815f805b8281101561133657368686838181106111ee576111ee613019565b905060200281019061120091906130f1565b9050365f61120e8380613105565b90925090505f6112246040850160208601612e13565b90505f196001600160a01b0382160161127f5760405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f7200000000000000000060448201526064016105d4565b6001600160a01b0381161561131a576001600160a01b038116632dd8113384846112ac604089018961314a565b6040518563ffffffff1660e01b81526004016112cb94939291906132ab565b5f6040518083038186803b1580156112e1575f80fd5b505afa9250505080156112f2575060015b61131a5760405163086a9f7560e41b81526001600160a01b03821660048201526024016105d4565b6113248287612fdb565b955050600190930192506111d3915050565b505f816001600160401b0381111561135057611350612a5a565b60405190808252806020026020018201604052801561138957816020015b6113766129d0565b81526020019060019003908161136e5790505b5090505f805b8481101561146057368888838181106113aa576113aa613019565b90506020028101906113bc91906130f1565b9050365f6113ca8380613105565b90925090505f6113e06040850160208601612e13565b9050815f5b8181101561144e575f89898151811061140057611400613019565b602002602001015190505f806114228b898987818110610c7457610c74613019565b9150915061143284838389611a3b565b8a61143c81612fee565b9b5050600190930192506113e5915050565b50506001909401935061138f92505050565b506040517fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972905f90a1505f80805b8581101561158a57368989838181106114a9576114a9613019565b90506020028101906114bb91906130f1565b90506114cd6040820160208301612e13565b6001600160a01b03167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a2365f61150e8380613105565b9092509050805f5b81811015611579576115588885858481811061153457611534613019565b9050602002810190611546919061302d565b8b8b81518110610d1657610d16613019565b6115629088612fdb565b96508761156e81612fee565b985050600101611516565b50506001909301925061148e915050565b506040515f907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a26115bf8682611e83565b5050505050610d476001600255565b6001600160a01b0382165f908152602081905260408120805482906115f4908590612fdb565b91829055509392505050565b5f805f845160208601878987f195945050505050565b60603d828111156116245750815b604051602082018101604052818152815f602083013e9392505050565b5f805a85519091505f908161165582611f78565b60e08301519091506001600160a01b038116611674578251935061172b565b8093505f8851111561172b57868202955060028a600281111561169957611699613325565b1461172b5760a0830151604051637c627b2160e01b81526001600160a01b03831691637c627b21916116d5908e908d908c908990600401613339565b5f604051808303815f88803b1580156116ec575f80fd5b5087f1935050505080156116fe575060015b61172b575f61170e610800611616565b905080604051632b5e552f60e21b81526004016105d49190613380565b5a60a0840151606085015160808c01519288039990990198019088038082111561175e576064600a828403020498909801975b505060408901518783029650868110156117b75760028b600281111561178657611786613325565b036117a8578096506117978a611fa9565b6117a38a5f898b611ff8565b6117eb565b63deadaa5160e01b5f5260205ffd5b8681036117c486826115ce565b505f808d60028111156117d9576117d9613325565b1490506117e88c828b8d611ff8565b50505b505050505050949350505050565b5f61180382612073565b805190602001209050919050565b600280540361183357604051633ee5aeb560e01b815260040160405180910390fd5b60028055565b5f805f5a845190915061184c8682612128565b61185586610b96565b6020860152604081015161012082015161010083015160a08401516080850151606086015160c0870151861717171717176effffffffffffffffffffffffffffff8111156118e55760405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f77000000000000000060448201526064016105d4565b5f6119138460c081015160a08201516080830151606084015160408501516101009095015194010101010290565b90506119228a8a8a8487612234565b9650611935845f015185602001516123c5565b61198b5789604051631101335b60e11b81526004016105d4918152604060208201819052601a908201527f4141323520696e76616c6964206163636f756e74206e6f6e6365000000000000606082015260800190565b825a860311156119e75789604051631101335b60e11b81526004016105d4918152604060208201819052601e908201527f41413236206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60e08401516060906001600160a01b031615611a0e57611a098b8b8b85612411565b975090505b604089018290528060608a015260a08a01355a870301896080018181525050505050505050935093915050565b5f80611a46856125c8565b91509150816001600160a01b0316836001600160a01b031614611aac5785604051631101335b60e11b81526004016105d49181526040602082018190526014908201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b8015611b045785604051631101335b60e11b81526004016105d49181526040602082018190526017908201527f414132322065787069726564206f72206e6f7420647565000000000000000000606082015260800190565b5f611b0e856125c8565b925090506001600160a01b03811615611b6a5786604051631101335b60e11b81526004016105d49181526040602082018190526014908201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b8115611bcc5786604051631101335b60e11b81526004016105d49181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f742064756060820152606560f81b608082015260a00190565b50505050505050565b5f805a90505f611be6846060015190565b6040519091505f903682611bfd60608a018a61314a565b9150915060605f826003811115611c1357843591505b506372288ed160e01b6001600160e01b0319821601611cc0575f8b8b60200151604051602401611c44929190613392565b60408051601f198184030181529181526020820180516001600160e01b0316638dd7712f60e01b1790525190915030906242dc5390611c8b9084908f908d9060240161345d565b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050925050611d15565b306001600160a01b03166242dc5385858d8b604051602401611ce5949392919061349c565b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505091505b60205f8351602085015f305af195505f51985084604052505050505080611e79575f3d80602003611d4a5760205f803e5f5191505b5063deaddead60e01b8103611d9d5787604051631101335b60e11b81526004016105d4918152604060208201819052600f908201526e41413935206f7574206f662067617360881b606082015260800190565b63deadaa5160e01b8103611dec575f86608001515a611dbc9087613006565b611dc69190612fdb565b6040880151909150611dd788611fa9565b611de3885f8385611ff8565b9550611e779050565b855180516020808901519201516001600160a01b0390911691907ff62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f479290611e33610800611616565b604051611e41929190612faf565b60405180910390a35f86608001515a611e5a9087613006565b611e649190612fdb565b9050611e736002888684611641565b9550505b505b5050509392505050565b6001600160a01b038216611ed95760405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e6566696369617279000000000000000060448201526064016105d4565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611f22576040519150601f19603f3d011682016040523d82523d5f602084013e611f27565b606091505b5050905080610d475760405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e65666963696172790060448201526064016105d4565b6101008101516101208201515f9190808203611f95575092915050565b611fa182488301612617565b949350505050565b80518051602080840151928101516040519081526001600160a01b0390921692917f67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e910160405180910390a350565b835160e081015181516020808801519301516040516001600160a01b039384169492909316927f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f916120659189908990899093845291151560208401526040830152606082015260800190565b60405180910390a450505050565b6060813560208301355f61209261208d604087018761314a565b61262e565b90505f6120a561208d606088018861314a565b9050608086013560a087013560c08801355f6120c761208d60e08c018c61314a565b604080516001600160a01b039a909a1660208b015289810198909852606089019690965250608087019390935260a086019190915260c085015260e08401526101008084019190915281518084039091018152610120909201905292915050565b6121356020830183612e13565b6001600160a01b03168152602082810135908201526001600160801b036080808401358281166060850152811c604084015260a084013560c0808501919091528401359182166101008401521c610120820152365f61219760e085018561314a565b9092509050801561221a5760348110156121f35760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064016105d4565b6121fd8282612640565b60a086015260808501526001600160a01b031660e0840152610b90565b5f60e084018190526080840181905260a084015250505050565b825180515f9190612252888761224d60408b018b61314a565b6126a7565b60e08201515f6001600160a01b038216612293576001600160a01b0383165f9081526020819052604090205487811161228d5780880361228f565b5f5b9150505b60208801516040516306608bdf60e21b81526001600160a01b038516916319822f7c9189916122c9918e919087906004016134d2565b6020604051808303815f8887f193505050508015612304575060408051601f3d908101601f19168201909252612301918101906134f6565b60015b61232f5789612314610800611616565b6040516365c8fd4d60e01b81526004016105d492919061350d565b94506001600160a01b0382166123b8576001600160a01b0383165f9081526020819052604090208054808911156123b2578b604051631101335b60e11b81526004016105d49181526040602082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000606082015260800190565b88900390555b5050505095945050505050565b6001600160a01b0382165f90815260016020908152604080832084821c80855292528220805484916001600160401b03831691908561240383612fee565b909155501495945050505050565b60605f805a855160e08101516001600160a01b0381165f9081526020819052604090208054939450919290919087811015612498578a604051631101335b60e11b81526004016105d4918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b878103825f01819055505f84608001519050836001600160a01b03166352b7512c828d8d602001518d6040518563ffffffff1660e01b81526004016124df939291906134d2565b5f604051808303815f8887f19350505050801561251d57506040513d5f823e601f3d908101601f1916820160405261251a9190810190613549565b60015b612548578b61252d610800611616565b6040516365c8fd4d60e01b81526004016105d49291906135c4565b9098509650805a870311156125b9578b604051631101335b60e11b81526004016105d49181526040602082018190526027908201527f41413336206f766572207061796d6173746572566572696669636174696f6e47606082015266185cd31a5b5a5d60ca1b608082015260a00190565b50505050505094509492505050565b5f80825f036125db57505f928392509050565b5f6125e584612961565b9050806040015165ffffffffffff1642118061260c5750806020015165ffffffffffff1642105b905194909350915050565b5f8183106126255781612627565b825b9392505050565b5f604051828085833790209392505050565b5f80806126506014828688613600565b61265991613627565b60601c61266a602460148789613600565b6126739161365c565b60801c61268460346024888a613600565b61268d9161365c565b9194506001600160801b0316925060801c90509250925092565b8015610b90578251516001600160a01b0381163b156127125784604051631101335b60e11b81526004016105d4918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663570e1a36865f01516040015186866040518463ffffffff1660e01b815260040161276992919061309d565b6020604051808303815f8887f1158015612785573d5f803e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906127aa91906130b0565b90506001600160a01b03811661280c5785604051631101335b60e11b81526004016105d4918152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b816001600160a01b0316816001600160a01b0316146128765785604051631101335b60e11b81526004016105d491815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b806001600160a01b03163b5f036128d85785604051631101335b60e11b81526004016105d491815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b5f6128e66014828688613600565b6128ef91613627565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83895f015160e001516040516129509291906001600160a01b0392831681529116602082015260400190565b60405180910390a350505050505050565b604080516060810182525f80825260208201819052918101919091528160a081901c65ffffffffffff81165f0361299b575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6040518060a00160405280612a396040518061014001604052805f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681526020015f81526020015f81525090565b81526020015f80191681526020015f81526020015f81526020015f81525090565b634e487b7160e01b5f52604160045260245ffd5b60405160a081016001600160401b0381118282101715612a9057612a90612a5a565b60405290565b60405161014081016001600160401b0381118282101715612a9057612a90612a5a565b604051601f8201601f191681016001600160401b0381118282101715612ae157612ae1612a5a565b604052919050565b5f6001600160401b03821115612b0157612b01612a5a565b50601f01601f191660200190565b6001600160a01b0381168114612b23575f80fd5b50565b8035612b3181612b0f565b919050565b5f8183036101c0811215612b48575f80fd5b612b50612a6e565b915061014080821215612b61575f80fd5b612b69612a96565b9150612b7484612b26565b82526020840135602083015260408401356040830152606084013560608301526080840135608083015260a084013560a083015260c084013560c0830152612bbe60e08501612b26565b60e0830152610100848101359083015261012080850135908301529082528201356020820152610160820135604082015261018082013560608201526101a0909101356080820152919050565b5f8083601f840112612c1b575f80fd5b5081356001600160401b03811115612c31575f80fd5b602083019150836020828501011115612c48575f80fd5b9250929050565b5f805f806102008587031215612c63575f80fd5b84356001600160401b0380821115612c79575f80fd5b818701915087601f830112612c8c575f80fd5b8135612c9f612c9a82612ae9565b612ab9565b818152896020838601011115612cb3575f80fd5b816020850160208301375f602083830101528097505050612cd78860208901612b36565b94506101e0870135915080821115612ced575f80fd5b50612cfa87828801612c0b565b95989497509550505050565b5f60208284031215612d16575f80fd5b81356001600160e01b031981168114612627575f80fd5b5f60208284031215612d3d575f80fd5b813563ffffffff81168114612627575f80fd5b80356001600160c01b0381168114612b31575f80fd5b5f60208284031215612d76575f80fd5b61262782612d50565b5f8060408385031215612d90575f80fd5b8235612d9b81612b0f565b9150612da960208401612d50565b90509250929050565b5f8060408385031215612dc3575f80fd5b8235612dce81612b0f565b946020939093013593505050565b5f60208284031215612dec575f80fd5b81356001600160401b03811115612e01575f80fd5b82016101208185031215612627575f80fd5b5f60208284031215612e23575f80fd5b813561262781612b0f565b5f8083601f840112612e3e575f80fd5b5081356001600160401b03811115612e54575f80fd5b6020830191508360208260051b8501011115612c48575f80fd5b5f805f60408486031215612e80575f80fd5b83356001600160401b03811115612e95575f80fd5b612ea186828701612e2e565b9094509250506020840135612eb581612b0f565b809150509250925092565b5f805f60408486031215612ed2575f80fd5b8335612edd81612b0f565b925060208401356001600160401b03811115612ef7575f80fd5b612f0386828701612c0b565b9497909650939450505050565b5f8060208385031215612f21575f80fd5b82356001600160401b03811115612f36575f80fd5b612f4285828601612c0b565b90969095509350505050565b634e487b7160e01b5f52601260045260245ffd5b5f5b83811015612f7c578181015183820152602001612f64565b50505f910152565b5f8151808452612f9b816020860160208601612f62565b601f01601f19169290920160200192915050565b828152604060208201525f611fa16040830184612f84565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561078357610783612fc7565b5f60018201612fff57612fff612fc7565b5060010190565b8181038181111561078357610783612fc7565b634e487b7160e01b5f52603260045260245ffd5b5f823561011e19833603018112613042575f80fd5b9190910192915050565b818382375f9101908152919050565b8215158152604060208201525f611fa16040830184612f84565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b602081525f611fa1602083018486613075565b5f602082840312156130c0575f80fd5b815161262781612b0f565b65ffffffffffff8181168382160190808211156130ea576130ea612fc7565b5092915050565b5f8235605e19833603018112613042575f80fd5b5f808335601e1984360301811261311a575f80fd5b8301803591506001600160401b03821115613133575f80fd5b6020019150600581901b3603821315612c48575f80fd5b5f808335601e1984360301811261315f575f80fd5b8301803591506001600160401b03821115613178575f80fd5b602001915036819003821315612c48575f80fd5b5f808335601e198436030181126131a1575f80fd5b83016020810192503590506001600160401b038111156131bf575f80fd5b803603821315612c48575f80fd5b5f6101206131eb846131de85612b26565b6001600160a01b03169052565b60208301356020850152613202604084018461318c565b8260408701526132158387018284613075565b92505050613226606084018461318c565b8583036060870152613239838284613075565b925050506080830135608085015260a083013560a085015260c083013560c085015261326860e084018461318c565b85830360e087015261327b838284613075565b9250505061010061328e8185018561318c565b868403838801526132a0848284613075565b979650505050505050565b604080825281018490525f6060600586901b8301810190830187835b8881101561330f57858403605f190183528135368b900361011e190181126132ed575f80fd5b6132f9858c83016131cd565b94505060209283019291909101906001016132c7565b50505082810360208401526132a0818587613075565b634e487b7160e01b5f52602160045260245ffd5b5f6003861061335657634e487b7160e01b5f52602160045260245ffd5b8582526080602083015261336d6080830186612f84565b6040830194909452506060015292915050565b602081525f6126276020830184612f84565b604081525f6133a460408301856131cd565b90508260208301529392505050565b805180516001600160a01b031683526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e081015161341860e08501826001600160a01b03169052565b5061010081810151908401526101209081015190830152602081015161014083015260408101516101608301526060810151610180830152608001516101a090910152565b5f61020080835261347081840187612f84565b905061347f60208401866133b3565b8281036101e08401526134928185612f84565b9695505050505050565b5f6102008083526134b08184018789613075565b90506134bf60208401866133b3565b8281036101e08401526132a08185612f84565b606081525f6134e460608301866131cd565b60208301949094525060400152919050565b5f60208284031215613506575f80fd5b5051919050565b82815260606020820152600d60608201526c10504c8cc81c995d995c9d1959609a1b608082015260a060408201525f611fa160a0830184612f84565b5f806040838503121561355a575f80fd5b82516001600160401b0381111561356f575f80fd5b8301601f8101851361357f575f80fd5b805161358d612c9a82612ae9565b8181528660208385010111156135a1575f80fd5b6135b2826020830160208601612f62565b60209590950151949694955050505050565b82815260606020820152600d60608201526c10504cccc81c995d995c9d1959609a1b608082015260a060408201525f611fa160a0830184612f84565b5f808585111561360e575f80fd5b8386111561361a575f80fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156136545780818660140360031b1b83161692505b505092915050565b6fffffffffffffffffffffffffffffffff1981358181169160108510156136545760109490940360031b84901b169092169291505056fea2646970667358221220397996f36f516bad9951ba1f23ade372bdd0ef7639623362f57652a7762031c164736f6c63430008170033608060405234801561000f575f80fd5b506101e28061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063570e1a361461002d575b5f80fd5b61004061003b3660046100e4565b61005c565b6040516001600160a01b03909116815260200160405180910390f35b5f8061006b6014828587610150565b61007491610177565b60601c90505f6100878460148188610150565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92018290525084519495509360209350849250905082850182875af190505f519350806100db575f93505b50505092915050565b5f80602083850312156100f5575f80fd5b823567ffffffffffffffff8082111561010c575f80fd5b818501915085601f83011261011f575f80fd5b81358181111561012d575f80fd5b86602082850101111561013e575f80fd5b60209290920196919550909350505050565b5f808585111561015e575f80fd5b8386111561016a575f80fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156101a45780818660140360031b1b83161692505b50509291505056fea264697066735822122078c1aaa9f040f8c523cf2b642dd06415593eec30d2e75021458af7e0c704e6fb64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"executeUserOp\",\n    \"inputs\": [\n      {\n        \"name\": \"userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155BatchReceived\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"values\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155Received\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"id\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"id\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOfBatch\",\n    \"inputs\": [\n      {\n        \"name\": \"accounts\",\n        \"type\": \"address[]\",\n        \"internalType\": \"address[]\"\n      },\n      {\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isApprovedForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"safeBatchTransferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"values\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"safeTransferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"id\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"setApprovalForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ApprovalForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TransferBatch\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\",\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"values\",\n        \"type\": \"uint256[]\",\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TransferSingle\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"id\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"URI\",\n    \"inputs\": [\n      {\n        \"name\": \"value\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"id\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"allowance\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"approve\",\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"approveAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"approveAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"totalSupply\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transfer\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferFromAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferFromAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Approval\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Transfer\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"_newOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"executions_\",\n        \"type\": \"tuple[]\",\n        \"internalType\": \"struct Execution[]\",\n        \"components\": [\n          {\n            \"name\": \"target\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b5061083a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a366004610417565b50505050505050505050565b005b610076610086366004610417565b6100b4565b61009e6100993660046104e4565b6102fd565b6040516100ab9190610526565b60405180910390f35b85600160f81b6001600160f81b03198216146101175760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6001600160f81b03198116156101835760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b606482015260840161010e565b503660006101918989610319565b9150915060006101a18f8f6102fd565b8051909150821461020a5760405162461bcd60e51b815260206004820152602d60248201527f457861637443616c6c646174614261746368456e666f726365723a696e76616c60448201526c69642d62617463682d73697a6560981b606482015260840161010e565b60005b828110156102eb57838382818110610227576102276105e8565b905060200281019061023991906105fe565b61024790604081019061061e565b604051610255929190610665565b604051809103902082828151811061026f5761026f6105e8565b60200260200101516040015180519060200120146102e35760405162461bcd60e51b815260206004820152602b60248201527f457861637443616c6c646174614261746368456e666f726365723a696e76616c60448201526a69642d63616c6c6461746160a81b606482015260840161010e565b60010161020d565b50505050505050505050505050505050565b60606103098383610319565b610312916106e5565b9392505050565b366000833580850160208587010360208201945081359350808460051b8301118360401c17156103515763ba597e7e6000526004601cfd5b83156103a8578392505b6001830392508260051b850135915081850160408101358082018381358201118460408501111782861782351760401c171561039f5763ba597e7e6000526004601cfd5b5050508261035b575b5050509250929050565b60008083601f8401126103c457600080fd5b50813567ffffffffffffffff8111156103dc57600080fd5b6020830191508360208285010111156103f457600080fd5b9250929050565b80356001600160a01b038116811461041257600080fd5b919050565b60008060008060008060008060008060e08b8d03121561043657600080fd5b8a3567ffffffffffffffff8082111561044e57600080fd5b61045a8e838f016103b2565b909c509a5060208d013591508082111561047357600080fd5b61047f8e838f016103b2565b909a50985060408d0135975060608d013591508082111561049f57600080fd5b506104ac8d828e016103b2565b90965094505060808b013592506104c560a08c016103fb565b91506104d360c08c016103fb565b90509295989b9194979a5092959850565b600080602083850312156104f757600080fd5b823567ffffffffffffffff81111561050e57600080fd5b61051a858286016103b2565b90969095509350505050565b600060208083018184528085518083526040925060408601915060408160051b8701018488016000805b848110156105d957898403603f19018652825180516001600160a01b0316855288810151898601528701516060888601819052815190860181905283905b808210156105ac578282018b015187830160800152908a019061058e565b8681016080908101869052988b0198601f909101601f191690960190950194505091870191600101610550565b50919998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e1983360301811261061457600080fd5b9190910192915050565b6000808335601e1984360301811261063557600080fd5b83018035915067ffffffffffffffff82111561065057600080fd5b6020019150368190038213156103f457600080fd5b8183823760009101908152919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156106ae576106ae610675565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156106dd576106dd610675565b604052919050565b600067ffffffffffffffff8084111561070057610700610675565b8360051b60206107118183016106b4565b86815291850191818101903684111561072957600080fd5b865b848110156107f8578035868111156107435760008081fd5b880160603682900312156107575760008081fd5b61075f61068b565b610768826103fb565b81528582013586820152604080830135898111156107865760008081fd5b9290920191601f368185011261079c5760008081fd5b83358a8111156107ae576107ae610675565b6107bf818301601f19168a016106b4565b915080825236898287010111156107d65760008081fd5b808986018a84013760009082018901529082015284525091830191830161072b565b5097965050505050505056fea26469706673582212208d28ccd8e989ae016d34ead1b420bc19b8be9eaa747049c2602c587d0a44891264736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"isValidSignature\",\n    \"inputs\": [\n      {\n        \"name\": \"hash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"signature\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"magicValue\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"executeFromExecutor\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"returnData\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isValidSignature\",\n    \"inputs\": [\n      {\n        \"name\": \"hash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"signature\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"magicValue\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"executions_\",\n        \"type\": \"tuple[]\",\n        \"internalType\": \"struct Execution[]\",\n        \"components\": [\n          {\n            \"name\": \"target\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610870806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a3660046103e9565b50505050505050505050565b005b6100766100863660046103e9565b6100b4565b61009e6100993660046104b6565b6102cf565b6040516100ab91906104f8565b60405180910390f35b85600160f81b6001600160f81b03198216146101175760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6001600160f81b03198116156101835760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b606482015260840161010e565b5036600061019189896102eb565b9150915060006101a18f8f6102cf565b8051909150821461020b5760405162461bcd60e51b815260206004820152602e60248201527f4578616374457865637574696f6e4261746368456e666f726365723a696e766160448201526d6c69642d62617463682d73697a6560901b606482015260840161010e565b8060405160200161021c91906104f8565b6040516020818303038152906040528051906020012083836040516020016102459291906105ba565b60405160208183030381529060405280519060200120146102be5760405162461bcd60e51b815260206004820152602d60248201527f4578616374457865637574696f6e4261746368456e666f726365723a696e766160448201526c3634b216b2bc32b1baba34b7b760991b606482015260840161010e565b505050505050505050505050505050565b60606102db83836102eb565b6102e49161071b565b9392505050565b366000833580850160208587010360208201945081359350808460051b8301118360401c17156103235763ba597e7e6000526004601cfd5b831561037a578392505b6001830392508260051b850135915081850160408101358082018381358201118460408501111782861782351760401c17156103715763ba597e7e6000526004601cfd5b5050508261032d575b5050509250929050565b60008083601f84011261039657600080fd5b50813567ffffffffffffffff8111156103ae57600080fd5b6020830191508360208285010111156103c657600080fd5b9250929050565b80356001600160a01b03811681146103e457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561040857600080fd5b8a3567ffffffffffffffff8082111561042057600080fd5b61042c8e838f01610384565b909c509a5060208d013591508082111561044557600080fd5b6104518e838f01610384565b909a50985060408d0135975060608d013591508082111561047157600080fd5b5061047e8d828e01610384565b90965094505060808b0135925061049760a08c016103cd565b91506104a560c08c016103cd565b90509295989b9194979a5092959850565b600080602083850312156104c957600080fd5b823567ffffffffffffffff8111156104e057600080fd5b6104ec85828601610384565b90969095509350505050565b600060208083018184528085518083526040925060408601915060408160051b8701018488016000805b848110156105ab57898403603f19018652825180516001600160a01b0316855288810151898601528701516060888601819052815190860181905283905b8082101561057e578282018b015187830160800152908a0190610560565b8681016080908101869052988b0198601f909101601f191690960190950194505091870191600101610522565b50919998505050505050505050565b60208082528181018390526000906040808401600586901b8501820187855b8881101561069d57878303603f190184528135368b9003605e190181126105ff57600080fd5b8a0160606001600160a01b03610614836103cd565b168552878201358886015286820135601e1983360301811261063557600080fd5b90910187810191903567ffffffffffffffff81111561065357600080fd5b80360383131561066257600080fd5b8188870152808287015260809150808383880137600086820183015295880195601f01601f19169094019093019250908501906001016105d9565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156106e4576106e46106ab565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610713576107136106ab565b604052919050565b600067ffffffffffffffff80841115610736576107366106ab565b8360051b60206107478183016106ea565b86815291850191818101903684111561075f57600080fd5b865b8481101561082e578035868111156107795760008081fd5b8801606036829003121561078d5760008081fd5b6107956106c1565b61079e826103cd565b81528582013586820152604080830135898111156107bc5760008081fd5b9290920191601f36818501126107d25760008081fd5b83358a8111156107e4576107e46106ab565b6107f5818301601f19168a016106ea565b9150808252368982870101111561080c5760008081fd5b808986018a840137600090820189015290820152845250918301918301610761565b5097965050505050505056fea26469706673582212205e0b91ba43666d3d9ebd5eb11438023697fc7df67dea03687ac126f13d8d464564736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"event\",\n    \"name\": \"TryExecuteUnsuccessful\",\n    \"inputs\": [\n      {\n        \"name\": \"batchExecutionindex\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"result\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ExecutionFailed\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122070e8319b78da08f58cb6bf69f50e33c8c919ae6c2113f3ef3b34f1da6bf44c5f64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"eip712Domain\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"fields\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"bytes1\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"version\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"verifyingContract\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"extensions\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EIP712DomainChanged\",\n    \"inputs\": [],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"allowance\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"approve\",\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"totalSupply\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transfer\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Approval\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Transfer\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"approve\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"balance\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getApproved\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isApprovedForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"ownerOf\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"safeTransferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"safeTransferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"setApprovalForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Approval\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ApprovalForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Transfer\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"accountId\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"accountImplementationId\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"executeFromExecutor\",\n    \"inputs\": [\n      {\n        \"name\": \"mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"returnData\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"installModule\",\n    \"inputs\": [\n      {\n        \"name\": \"moduleTypeId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"module\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"initData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isModuleInstalled\",\n    \"inputs\": [\n      {\n        \"name\": \"moduleTypeId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"module\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"additionalContext\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isValidSignature\",\n    \"inputs\": [\n      {\n        \"name\": \"hash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsExecutionMode\",\n    \"inputs\": [\n      {\n        \"name\": \"encodedMode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsModule\",\n    \"inputs\": [\n      {\n        \"name\": \"moduleTypeId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"uninstallModule\",\n    \"inputs\": [\n      {\n        \"name\": \"moduleTypeId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"module\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"deInitData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ModuleInstalled\",\n    \"inputs\": [\n      {\n        \"name\": \"moduleTypeId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"module\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ModuleUninstalled\",\n    \"inputs\": [\n      {\n        \"name\": \"moduleTypeId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"module\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"postOp\",\n    \"inputs\": [\n      {\n        \"name\": \"mode\",\n        \"type\": \"uint8\",\n        \"internalType\": \"enum IPaymaster.PostOpMode\"\n      },\n      {\n        \"name\": \"context\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"actualGasCost\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"actualUserOpFeePerGas\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"validatePaymasterUserOp\",\n    \"inputs\": [\n      {\n        \"name\": \"userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"maxCost\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"context\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"validationData\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"addStake\",\n    \"inputs\": [\n      {\n        \"name\": \"_unstakeDelaySec\",\n        \"type\": \"uint32\",\n        \"internalType\": \"uint32\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"depositTo\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDepositInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"info\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct IStakeManager.DepositInfo\",\n        \"components\": [\n          {\n            \"name\": \"deposit\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"staked\",\n            \"type\": \"bool\",\n            \"internalType\": \"bool\"\n          },\n          {\n            \"name\": \"stake\",\n            \"type\": \"uint112\",\n            \"internalType\": \"uint112\"\n          },\n          {\n            \"name\": \"unstakeDelaySec\",\n            \"type\": \"uint32\",\n            \"internalType\": \"uint32\"\n          },\n          {\n            \"name\": \"withdrawTime\",\n            \"type\": \"uint48\",\n            \"internalType\": \"uint48\"\n          }\n        ]\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"unlockStake\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawStake\",\n    \"inputs\": [\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawTo\",\n    \"inputs\": [\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      },\n      {\n        \"name\": \"withdrawAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Deposited\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"totalDeposit\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeLocked\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"totalStaked\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"unstakeDelaySec\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeUnlocked\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawTime\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeWithdrawn\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Withdrawn\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"addStake\",\n    \"inputs\": [\n      {\n        \"name\": \"_unstakeDelaySec\",\n        \"type\": \"uint32\",\n        \"internalType\": \"uint32\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegateAndRevert\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"depositTo\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDepositInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"info\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct IStakeManager.DepositInfo\",\n        \"components\": [\n          {\n            \"name\": \"deposit\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"staked\",\n            \"type\": \"bool\",\n            \"internalType\": \"bool\"\n          },\n          {\n            \"name\": \"stake\",\n            \"type\": \"uint112\",\n            \"internalType\": \"uint112\"\n          },\n          {\n            \"name\": \"unstakeDelaySec\",\n            \"type\": \"uint32\",\n            \"internalType\": \"uint32\"\n          },\n          {\n            \"name\": \"withdrawTime\",\n            \"type\": \"uint48\",\n            \"internalType\": \"uint48\"\n          }\n        ]\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getSenderAddress\",\n    \"inputs\": [\n      {\n        \"name\": \"initCode\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getUserOpHash\",\n    \"inputs\": [\n      {\n        \"name\": \"userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"handleAggregatedOps\",\n    \"inputs\": [\n      {\n        \"name\": \"opsPerAggregator\",\n        \"type\": \"tuple[]\",\n        \"internalType\": \"struct IEntryPoint.UserOpsPerAggregator[]\",\n        \"components\": [\n          {\n            \"name\": \"userOps\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct PackedUserOperation[]\",\n            \"components\": [\n              {\n                \"name\": \"sender\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"nonce\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"initCode\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"callData\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"accountGasLimits\",\n                \"type\": \"bytes32\",\n                \"internalType\": \"bytes32\"\n              },\n              {\n                \"name\": \"preVerificationGas\",\n                \"type\": \"uint256\",\n                \"internalType\": \"uint256\"\n              },\n              {\n                \"name\": \"gasFees\",\n                \"type\": \"bytes32\",\n                \"internalType\": \"bytes32\"\n              },\n              {\n                \"name\": \"paymasterAndData\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"signature\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"aggregator\",\n            \"type\": \"address\",\n            \"internalType\": \"contract IAggregator\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"beneficiary\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"handleOps\",\n    \"inputs\": [\n      {\n        \"name\": \"ops\",\n        \"type\": \"tuple[]\",\n        \"internalType\": \"struct PackedUserOperation[]\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"beneficiary\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"incrementNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"unlockStake\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawStake\",\n    \"inputs\": [\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawTo\",\n    \"inputs\": [\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      },\n      {\n        \"name\": \"withdrawAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"AccountDeployed\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"factory\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"paymaster\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"BeforeExecution\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Deposited\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"totalDeposit\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"PostOpRevertReason\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"revertReason\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SignatureAggregatorChanged\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeLocked\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"totalStaked\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"unstakeDelaySec\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeUnlocked\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawTime\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeWithdrawn\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"UserOperationEvent\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"paymaster\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"success\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"actualGasCost\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"actualGasUsed\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"UserOperationPrefundTooLow\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"UserOperationRevertReason\",\n    \"inputs\": [\n      {\n        \"name\": \"userOpHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"revertReason\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Withdrawn\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"DelegateAndRevert\",\n    \"inputs\": [\n      {\n        \"name\": \"success\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"ret\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedOp\",\n    \"inputs\": [\n      {\n        \"name\": \"opIndex\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"reason\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedOpWithRevert\",\n    \"inputs\": [\n      {\n        \"name\": \"opIndex\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"reason\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"inner\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"PostOpReverted\",\n    \"inputs\": [\n      {\n        \"name\": \"returnData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SenderAddressResult\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SignatureValidationFailed\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"adapters\",\n    \"inputs\": [\n      {\n        \"name\": \"id\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct IMetaSwap.Adapter\",\n        \"components\": [\n          {\n            \"name\": \"addr\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"selector\",\n            \"type\": \"bytes4\",\n            \"internalType\": \"bytes4\"\n          },\n          {\n            \"name\": \"data\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"removeAdapter\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregatorId\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"setAdapter\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregatorId\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"addr\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"selector\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"swap\",\n    \"inputs\": [\n      {\n        \"name\": \"aggregatorId\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"tokenFrom\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IERC20\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      },\n      {\n        \"name\": \"_entryPoint\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"receive\",\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"DOMAIN_VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"NAME\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"PACKED_USER_OP_TYPEHASH\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"UPGRADE_INTERFACE_VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addDeposit\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addKey\",\n    \"inputs\": [\n      {\n        \"name\": \"_keyId\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"_x\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"_y\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegationManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"disableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"eip712Domain\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"fields\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"bytes1\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"version\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"verifyingContract\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"extensions\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"enableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"entryPoint\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_execution\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Execution\",\n        \"components\": [\n          {\n            \"name\": \"target\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"executeFromExecutor\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"returnData_\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDeposit\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDomainHash\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getImplementation\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getInitializedVersion\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint64\",\n        \"internalType\": \"uint64\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getKey\",\n    \"inputs\": [\n      {\n        \"name\": \"_keyId\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"x_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"y_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getKeyIdHashes\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32[]\",\n        \"internalType\": \"bytes32[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getKeyIdHashesCount\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"_key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationTypedDataHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"initialize\",\n    \"inputs\": [\n      {\n        \"name\": \"_owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_keyIds\",\n        \"type\": \"string[]\",\n        \"internalType\": \"string[]\"\n      },\n      {\n        \"name\": \"_xValues\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"_yValues\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isDelegationDisabled\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isValidSignature\",\n    \"inputs\": [\n      {\n        \"name\": \"_hash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_signature\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"magicValue_\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155BatchReceived\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC721Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"proxiableUUID\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"redeemDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"_permissionContexts\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      },\n      {\n        \"name\": \"_modes\",\n        \"type\": \"bytes32[]\",\n        \"internalType\": \"ModeCode[]\"\n      },\n      {\n        \"name\": \"_executionCallDatas\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"reinitialize\",\n    \"inputs\": [\n      {\n        \"name\": \"_version\",\n        \"type\": \"uint8\",\n        \"internalType\": \"uint8\"\n      },\n      {\n        \"name\": \"_owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_keyIds\",\n        \"type\": \"string[]\",\n        \"internalType\": \"string[]\"\n      },\n      {\n        \"name\": \"_xValues\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"_yValues\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"_deleteP256Keys\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"removeKey\",\n    \"inputs\": [\n      {\n        \"name\": \"_keyId\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"renounceOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"_interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"_newOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"updateSigners\",\n    \"inputs\": [\n      {\n        \"name\": \"_owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_keyIds\",\n        \"type\": \"string[]\",\n        \"internalType\": \"string[]\"\n      },\n      {\n        \"name\": \"_xValues\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"_yValues\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"upgradeToAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"_newImplementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"upgradeToAndCallAndRetainStorage\",\n    \"inputs\": [\n      {\n        \"name\": \"_newImplementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"validateUserOp\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_missingAccountFunds\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"validationData_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawDeposit\",\n    \"inputs\": [\n      {\n        \"name\": \"_withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      },\n      {\n        \"name\": \"_withdrawAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"AddedP256Key\",\n    \"inputs\": [\n      {\n        \"name\": \"keyIdHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"keyId\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"x\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"y\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ClearedStorage\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EIP712DomainChanged\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Initialized\",\n    \"inputs\": [\n      {\n        \"name\": \"version\",\n        \"type\": \"uint64\",\n        \"indexed\": false,\n        \"internalType\": \"uint64\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"RemovedP256Key\",\n    \"inputs\": [\n      {\n        \"name\": \"keyIdHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"x\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"y\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SentPrefund\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"success\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetDelegationManager\",\n    \"inputs\": [\n      {\n        \"name\": \"newDelegationManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetEntryPoint\",\n    \"inputs\": [\n      {\n        \"name\": \"entryPoint\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TryExecuteUnsuccessful\",\n    \"inputs\": [\n      {\n        \"name\": \"batchExecutionindex\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"result\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Upgraded\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressEmptyCode\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"CannotRemoveLastSigner\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureLength\",\n    \"inputs\": [\n      {\n        \"name\": \"length\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureS\",\n    \"inputs\": [\n      {\n        \"name\": \"s\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967InvalidImplementation\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967NonPayable\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ExecutionFailed\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedInnerCall\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InputLengthsMismatch\",\n    \"inputs\": [\n      {\n        \"name\": \"keyIdsLength\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"xValuesLength\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"yValuesLength\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidEmptyKey\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidInitialization\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidShortString\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"KeyAlreadyExists\",\n    \"inputs\": [\n      {\n        \"name\": \"keyIdHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"KeyDoesNotExist\",\n    \"inputs\": [\n      {\n        \"name\": \"keyIdHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"KeyNotOnCurve\",\n    \"inputs\": [\n      {\n        \"name\": \"x\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"y\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotDelegationManager\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPoint\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPointOrSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotInitializing\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SignersCannotBeEmpty\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"StringTooLong\",\n    \"inputs\": [\n      {\n        \"name\": \"str\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UUPSUnauthorizedCallContext\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UUPSUnsupportedProxiableUUID\",\n    \"inputs\": [\n      {\n        \"name\": \"slot\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedCallType\",\n    \"inputs\": [\n      {\n        \"name\": \"callType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"CallType\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedExecType\",\n    \"inputs\": [\n      {\n        \"name\": \"execType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"ExecType\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x6101c0604052306080523480156200001657600080fd5b506040516200556538038062005565833981016040819052620000399162000319565b81816040518060400160405280600f81526020016e243cb13934b22232b632a3b0ba37b960891b815250604051806040016040528060018152602001603160f81b815250818162000095600083620001ca60201b90919060201c565b61014052620000a6816001620001ca565b61016052815160208084019190912061010052815190820120610120524660c052620001366101005161012051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60a05250503060e0526200014962000203565b6001600160a01b038085166101808190529084166101a0526040517fb2e8eb88b584ae71ef4e854c10847f4d39bd93e52599f147bfb4dcc8de52014d90600090a26040516001600160a01b038416907fee8699dc0e27105da2653bdba54be0edcaadc3e33890a3ad705517ffe9bf0a9990600090a250505050505062000541565b6000602083511015620001ea57620001e283620002b7565b9050620001fd565b81620001f78482620003ff565b5060ff90505b92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620002545760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620002b45780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b600080829050601f81511115620002ee578260405163305a27a960e01b8152600401620002e59190620004cb565b60405180910390fd5b8051620002fb826200051c565b179392505050565b6001600160a01b0381168114620002b457600080fd5b600080604083850312156200032d57600080fd5b82516200033a8162000303565b60208401519092506200034d8162000303565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200038357607f821691505b602082108103620003a457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003fa576000816000526020600020601f850160051c81016020861015620003d55750805b601f850160051c820191505b81811015620003f657828155600101620003e1565b5050505b505050565b81516001600160401b038111156200041b576200041b62000358565b62000433816200042c84546200036e565b84620003aa565b602080601f8311600181146200046b5760008415620004525750858301515b600019600386901b1c1916600185901b178555620003f6565b600085815260208120601f198616915b828110156200049c578886015182559484019460019091019084016200047b565b5085821015620004bb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b81811015620004fb57858101830151858201604001528201620004dd565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620003a45760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a051614eeb6200067a6000396000818161068c0152818161091e015281816109cb01528181610abe01528181610b3c01528181610ca001528181610d5501528181610de001528181610e5001528181610f3c01528181610ff701528181611069015281816112c301528181611342015281816113ab015281816114a60152818161156501528181611a1b01528181611d0e01528181611d7c0152612d4e0152600081816107ff01528181610b9f01528181610c2201528181610d030152818161140e01526117ac0152600061275a0152600061272d01526000611f3e01526000611f1601526000611e7101526000611e9b01526000611ec5015260008181612190015281816121b901526126100152614eeb6000f3fe6080604052600436106102765760003560e01c80638da5cb5b1161014f578063c8561e73116100c1578063e9ae5c531161007a578063e9ae5c53146107da578063ea4d3c9b146107ed578063ed8101b514610821578063f23a6e6114610841578063f2fde38b14610861578063ffa1ad741461088157600080fd5b8063c8561e7314610710578063cef6d20914610730578063d087d28814610750578063d37aec9214610765578063d5d33b551461079a578063d691c964146107ba57600080fd5b8063acb8cc4911610113578063acb8cc491461061c578063ad3cb1cc14610649578063b0d691fe1461067a578063b3c65015146106ae578063bc197c81146106db578063c399ec88146106fb57600080fd5b80638da5cb5b1461054d5780638ebf95331461058c578063a24c8f32146105ac578063a3f4df7e146105bf578063aaf10f421461060757600080fd5b8063445140b8116101e85780635c1c6dcd116101ac5780635c1c6dcd146104a8578063715018a6146104bb57806378a68ecf146104d05780637f07bfdc146104f057806383ebb7711461051057806384b0196e1461052557600080fd5b8063445140b81461043857806349934047146104585780634a58db19146104785780634f1ef2861461048057806352d1902d1461049357600080fd5b806319822f7c1161023a57806319822f7c146103605780631c03010a146103805780632b3afd99146103a25780632ffeaad6146103d65780633e1b0812146103f85780633ed010151461041857600080fd5b806301ffc9a71461028257806306394d67146102b7578063074feff3146102e5578063150b7a02146103075780631626ba7e1461034057600080fd5b3661027d57005b600080fd5b34801561028e57600080fd5b506102a261029d366004613d03565b6108b2565b60405190151581526020015b60405180910390f35b3480156102c357600080fd5b506102d76102d2366004613d46565b6108de565b6040519081526020016102ae565b3480156102f157600080fd5b50610305610300366004613ded565b610913565b005b34801561031357600080fd5b50610327610322366004613f5c565b610984565b6040516001600160e01b031990911681526020016102ae565b34801561034c57600080fd5b5061032761035b366004614008565b61099f565b34801561036c57600080fd5b506102d761037b366004614053565b6109be565b34801561038c57600080fd5b50600080516020614e36833981519152546102d7565b3480156103ae57600080fd5b506102d77fbc37962d8bd1d319c95199bdfda6d3f92baa8903a61b32d5f4ec1f4b36a3bc1881565b3480156103e257600080fd5b506103eb610a2e565b6040516102ae91906140a0565b34801561040457600080fd5b506102d76104133660046140d8565b610a97565b34801561042457600080fd5b50610305610433366004614101565b610b31565b34801561044457600080fd5b506102a261045336600461413b565b610c09565b34801561046457600080fd5b50610305610473366004614101565b610c95565b610305610d38565b61030561048e366004614154565b610da2565b34801561049f57600080fd5b506102d7610db8565b6103056104b63660046141a3565b610dd5565b3480156104c757600080fd5b50610305610e45565b3480156104dc57600080fd5b506103056104eb3660046141f6565b610ea8565b3480156104fc57600080fd5b5061030561050b3660046142c8565b610fec565b34801561051c57600080fd5b506102d76110c9565b34801561053157600080fd5b5061053a6110d8565b6040516102ae9796959493929190614344565b34801561055957600080fd5b50600080516020614e16833981519152546001600160a01b03165b6040516001600160a01b0390911681526020016102ae565b34801561059857600080fd5b506103056105a7366004613ded565b61111e565b6103056105ba366004614154565b610daa565b3480156105cb57600080fd5b506105fa6040518060400160405280600f81526020016e243cb13934b22232b632a3b0ba37b960891b81525081565b6040516102ae91906143dd565b34801561061357600080fd5b5061057461123a565b34801561062857600080fd5b506105fa604051806040016040528060018152602001603160f81b81525081565b34801561065557600080fd5b506105fa604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561068657600080fd5b506105747f000000000000000000000000000000000000000000000000000000000000000081565b3480156106ba57600080fd5b506106c361125b565b6040516001600160401b0390911681526020016102ae565b3480156106e757600080fd5b506103276106f636600461446f565b61128e565b34801561070757600080fd5b506102d76112ab565b34801561071c57600080fd5b5061030561072b36600461451c565b611337565b34801561073c57600080fd5b5061030561074b36600461456c565b6113a0565b34801561075c57600080fd5b506102d7611487565b34801561077157600080fd5b50610785610780366004614605565b6114dd565b604080519283526020830191909152016102ae565b3480156107a657600080fd5b506103056107b5366004614605565b61155a565b6107cd6107c8366004614008565b61179f565b6040516102ae9190614646565b6103056107e8366004614008565b611a10565b3480156107f957600080fd5b506105747f000000000000000000000000000000000000000000000000000000000000000081565b34801561082d57600080fd5b506102d761083c366004613d46565b611c13565b34801561084d57600080fd5b5061032761085c3660046146aa565b611d55565b34801561086d57600080fd5b5061030561087c366004614712565b611d71565b34801561088d57600080fd5b506105fa604051806040016040528060058152602001640312e332e360dc1b81525081565b60006108bd82611dd4565b806108d857506001600160e01b031982166307f5828d60e41b145b92915050565b60006108d86108eb611e64565b6108f484611c13565b60405161190160f01b8152600281019290925260228201526042902090565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480159061094c5750333014155b1561096a57604051630796d94560e01b815260040160405180910390fd5b61097b878787878787876001611f8f565b50505050505050565b600061098e612185565b50630a85bd0160e11b949350505050565b60006109a9612185565b6109b484848461222a565b90505b9392505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a0957604051636b31ba1560e11b815260040160405180910390fd5b610a11612185565b610a2384610a1e866108de565b61244e565b90506109b782612496565b60606000600080516020614e1683398151915260028101805460408051602080840282018101909252828152939450830182828015610a8c57602002820191906000526020600020905b815481526020019060010190808311610a78575b505050505091505090565b604051631aab3f0d60e11b81523060048201526001600160c01b03821660248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a90604401602060405180830381865afa158015610b0d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d8919061472f565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590610b6a5750333014155b15610b8857604051630796d94560e01b815260040160405180910390fd5b604051633ed0101560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ed0101590610bd4908490600401614877565b600060405180830381600087803b158015610bee57600080fd5b505af1158015610c02573d6000803e3d6000fd5b5050505050565b6040516316a0682960e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d40d05290602401602060405180830381865afa158015610c71573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190614953565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590610cce5750333014155b15610cec57604051630796d94560e01b815260040160405180910390fd5b604051634993404760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634993404790610bd4908490600401614877565b610d40612185565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b158015610bee57600080fd5b610daa61252d565b610db482826125ea565b5050565b6000610dc2612605565b50600080516020614e5683398151915290565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e1e57604051636b31ba1560e11b815260040160405180910390fd5b610db4610e2e6020830183614712565b6020830135610e406040850185614970565b61264e565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590610e7e5750333014155b15610e9c57604051630796d94560e01b815260040160405180910390fd5b610ea66000612684565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805460ff8b81169291600160401b90041680610ef2575080546001600160401b03808416911610155b15610f105760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b03831617600160401b178155336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590610f6a5750333014155b15610f8857604051630796d94560e01b815260040160405180910390fd5b610f988a8a8a8a8a8a8a8a611f8f565b805460ff60401b191681556040516001600160401b03831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015906110255750333014155b1561104357604051630796d94560e01b815260040160405180910390fd5b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156110ad57600080fd5b505af11580156110c1573d6000803e3d6000fd5b505050505050565b60006110d3611e64565b905090565b6000606080600080600060606110ec612726565b6110f4612753565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156111635750825b90506000826001600160401b0316600114801561117f5750303b155b90508115801561118d575080155b156111ab5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156111d557845460ff60401b1916600160401b1785555b6111e68c8c8c8c8c8c8c6000611f8f565b831561122c57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050505050565b60006110d3600080516020614e56833981519152546001600160a01b031690565b60006110d37ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00546001600160401b031690565b6000611298612185565b5063bc197c8160e01b5b95945050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a08231906024015b602060405180830381865afa158015611313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d3919061472f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015906113705750333014155b1561138e57604051630796d94560e01b815260040160405180910390fd5b61139a84848484612780565b50505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015906113d95750333014155b156113f757604051630796d94560e01b815260040160405180910390fd5b60405163cef6d20960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cef6d2099061144d90899089908990899089908990600401614a17565b600060405180830381600087803b15801561146757600080fd5b505af115801561147b573d6000803e3d6000fd5b50505050505050505050565b604051631aab3f0d60e11b8152306004820152600060248201819052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a906044016112f6565b60008080600080516020614e1683398151915290506000816001016000878760405160200161150d929190614a80565b60408051601f198184030181529181528151602092830120835282820193909352908201600020825180840190935280548084526001909101549290910182905297909650945050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015906115935750333014155b156115b157604051630796d94560e01b815260040160405180910390fd5b604051600080516020614e16833981519152906000906115d79085908590602001614a80565b60408051601f198184030181528282528051602091820120600081815260018088018452908490208585019094528354808652930154918401829052935081158015611621575080155b1561164757604051631a36430d60e31b8152600481018590526024015b60405180910390fd5b6002850154600181148015611664575085546001600160a01b0316155b156116825760405163c4c8547360e01b815260040160405180910390fd5b60005b611690600183614aa6565b81101561171557858760020182815481106116ad576116ad614ab9565b90600052602060002001540361170d57600287016116cc600184614aa6565b815481106116dc576116dc614ab9565b90600052602060002001548760020182815481106116fc576116fc614ab9565b600091825260209091200155611715565b600101611685565b508560020180548061172957611729614acf565b60008281526020808220830160001990810183905590920190925586825260018881018252604080842084815590910192909255815185815290810184905286917facf0e8088062f44f734bbcb5223794fd8bb6f6db1c199cb6a72df119d002a71b910160405180910390a25050505050505050565b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117ea57604051630692ce8160e21b815260040160405180910390fd5b83600881901b6117fe82600160f81b6128fd565b1561187f57366000611810878761290f565b90925090506118208360006128fd565b156118365761182f82826129a8565b9450611878565b61184483600160f81b6128fd565b156118535761182f8282612a69565b6040516308c3ee0360e11b81526001600160f81b03198416600482015260240161163e565b5050611a07565b61188a8260006128fd565b156119e25760008036600061189f8989612b96565b6040805160018082528183019092529498509296509094509250816020015b60608152602001906001900390816118be57905050965060006118e186826128fd565b15611915576118f28585858561264e565b8860008151811061190557611905614ab9565b60200260200101819052506119d8565b61192386600160f81b6128fd565b156119b35761193485858585612be7565b8960008151811061194757611947614ab9565b60209081029190910101529050806119ae577fe723f28f104e46b47fd3531f3608374ac226bcf3ddda334a23a266453e0efdb760008960008151811061198f5761198f614ab9565b60200260200101516040516119a5929190614ae5565b60405180910390a15b6119d8565b6040516308c3ee0360e11b81526001600160f81b03198716600482015260240161163e565b5050505050611a07565b604051632e5bf3f960e21b81526001600160f81b03198316600482015260240161163e565b50509392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611a5957604051636b31ba1560e11b815260040160405180910390fd5b82600881901b611a6d82600160f81b6128fd565b15611ac857366000611a7f868661290f565b9092509050611a8f8360006128fd565b15611aa457611a9e82826129a8565b50611ac1565b611ab283600160f81b6128fd565b1561185357611a9e8282612a69565b5050610c02565b611ad38260006128fd565b156119e257600080366000611ae88888612b96565b9350935093509350611afe85600060f81b6128fd565b15611b1557611b0f8484848461264e565b50611c0a565b611b2385600160f81b6128fd565b15611be557604080516001808252818301909252600091816020015b6060815260200190600190039081611b3f5790505090506000611b6486868686612be7565b83600081518110611b7757611b77614ab9565b6020908102919091010152905080611bde577fe723f28f104e46b47fd3531f3608374ac226bcf3ddda334a23a266453e0efdb7600083600081518110611bbf57611bbf614ab9565b6020026020010151604051611bd5929190614ae5565b60405180910390a15b5050611c0a565b6040516308c3ee0360e11b81526001600160f81b03198616600482015260240161163e565b50505050610c02565b60007fbc37962d8bd1d319c95199bdfda6d3f92baa8903a61b32d5f4ec1f4b36a3bc18611c436020840184614712565b6020840135611c556040860186614970565b604051611c63929190614a80565b604051908190039020611c796060870187614970565b604051611c87929190614a80565b604051908190039020608087013560a088013560c0890135611cac60e08b018b614970565b604051611cba929190614a80565b60408051918290038220602083019a909a526001600160a01b03988916908201526060810196909652608086019490945260a085019290925260c084015260e08301526101008201526101208101929092527f00000000000000000000000000000000000000000000000000000000000000001661014082015261016001604051602081830303815290604052805190602001209050919050565b6000611d5f612185565b5063f23a6e6160e01b95945050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590611daa5750333014155b15611dc857604051630796d94560e01b815260040160405180910390fd5b611dd181612684565b50565b6000611dde612185565b6001600160e01b031982166335a4725960e21b1480611e0d57506001600160e01b03198216630a85bd0160e11b145b80611e2857506001600160e01b03198216630271189760e51b145b80611e4357506001600160e01b031982166301ffc9a760e01b145b806108d8575050630b135d3f60e11b6001600160e01b03198216145b919050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611ebd57507f000000000000000000000000000000000000000000000000000000000000000046145b15611ee757507f000000000000000000000000000000000000000000000000000000000000000090565b6110d3604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b856001600160a01b038916158015611fa5575080155b8015611fae5750815b15611fcc576040516312da594d60e11b815260040160405180910390fd5b8085141580611fdb5750808314155b1561200a5760405163a297991b60e01b815260048101829052602481018690526044810184905260640161163e565b81156120ff57600080516020614e3683398151915254600080516020614e168339815191529080156120fc5760005b818110156120ed57600083600201828154811061205857612058614ab9565b6000918252602080832090910154808352600180880180845260408086208151808301835281548152938101805485880190815286895293909652869055949093558051925193519194509284927facf0e8088062f44f734bbcb5223794fd8bb6f6db1c199cb6a72df119d002a71b926120db9290918252602082015260400190565b60405180910390a25050600101612039565b506120fc600283016000613cd1565b50505b60005b818110156121705761216889898381811061211f5761211f614ab9565b90506020028101906121319190614970565b89898581811061214357612143614ab9565b9050602002013588888681811061215c5761215c614ab9565b90506020020135612780565b600101612102565b5061217a89612684565b505050505050505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061220c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316612200600080516020614e56833981519152546001600160a01b031690565b6001600160a01b031614155b15610ea65760405163703e46dd60e11b815260040160405180910390fd5b60008160418190036122c757600080516020614e16833981519152546001600160a01b03166001600160a01b03166122988686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612c1892505050565b6001600160a01b0316036122b65750630b135d3f60e11b90506109b7565b506001600160e01b031990506109b7565b60608110156122e157506001600160e01b031990506109b7565b600080516020614e1683398151915260006122ff6020828789614afe565b61230891614b28565b60008181526001808501602090815260409283902083518085019094528054808552920154908301529192509015801561234457506020810151155b1561235e57506001600160e01b031993506109b792505050565b8360601480156123b257506123b28888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050855160208701519092509050612c42565b156123cb5750630b135d3f60e11b93506109b792505050565b8360601415801561242057506124208888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050855160208701519092509050612ce0565b156124395750630b135d3f60e11b93506109b792505050565b506001600160e01b031993506109b792505050565b60008061246883612463610100870187614970565b61222a565b90506374eca2c160e11b6001600160e01b031982160161248c5760009150506108d8565b5060019392505050565b8015611dd157604051600090339060001990849084818181858888f193505050503d80600081146124e3576040519150601f19603f3d011682016040523d82523d6000602084013e6124e8565b606091505b505060408051848152821515602082015291925033917fa427c7d47f24d01b170779a7600b1d4c0d7cdbabaa0f19c4f0e6182053ffc931910160405180910390a25050565b600080516020614e3683398151915254600080516020614e168339815191529060005b818110156125a05782600101600084600201838154811061257357612573614ab9565b60009182526020808320909101548352820192909252604001812081815560019081019190915501612550565b506125af600283016000613cd1565b81546001600160a01b03191682556040517feb09d532980c3cc73dcad99b80e264204a667a54cbb7b63ec8d68dcb1c7096be90600090a15050565b6125f2612185565b6125fb82612d43565b610db48282612d9a565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ea65760405163703e46dd60e11b815260040160405180910390fd5b60405181838237600038838387895af161266b573d6000823e3d81fd5b3d8152602081013d6000823e3d01604052949350505050565b600080516020614e3683398151915254600080516020614e16833981519152901580156126b857506001600160a01b038216155b156126d65760405163c4c8547360e01b815260040160405180910390fd5b80546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60606110d37f00000000000000000000000000000000000000000000000000000000000000006000612e5c565b60606110d37f00000000000000000000000000000000000000000000000000000000000000006001612e5c565b61278a8282612f07565b6127b1576040516313c3d61f60e01b8152600481018390526024810182905260440161163e565b600084846040516020016127c6929190614a80565b6040516020818303038152906040528051906020012090508484905060000361280257604051637e25658160e11b815260040160405180910390fd5b60008181527fa2b1bcb5e16cee2a8898b49cb0c3605e70c16f429f6002ed8b1bc5612a694901602052604090208054600080516020614e1683398151915291901515806128525750600181015415155b15612873576040516361db108160e01b81526004810184905260240161163e565b604080518082018252868152602080820187815260008781526001808801845285822094518555915193820193909355600286018054918201815583529120018490555183907fd00539cb08a7c24166308150d64d603150c01baf89d3d3e4c6063d6db7c6983d906128ec908a908a908a908a90614b46565b60405180910390a250505050505050565b6001600160f81b031990811691161490565b366000833580850160208587010360208201945081359350808460051b8301118360401c17156129475763ba597e7e6000526004601cfd5b831561299e578392505b6001830392508260051b850135915081850160408101358082018381358201118460408501111782861782351760401c17156129955763ba597e7e6000526004601cfd5b50505082612951575b5050509250929050565b606081806001600160401b038111156129c3576129c3613e99565b6040519080825280602002602001820160405280156129f657816020015b60608152602001906001900390816129e15790505b50915060005b81811015612a615736858583818110612a1757612a17614ab9565b9050602002810190612a299190614b6d565b9050612a3b610e2e6020830183614712565b848381518110612a4d57612a4d614ab9565b6020908102919091010152506001016129fc565b505092915050565b606081806001600160401b03811115612a8457612a84613e99565b604051908082528060200260200182016040528015612ab757816020015b6060815260200190600190039081612aa25790505b50915060005b81811015612a615736858583818110612ad857612ad8614ab9565b9050602002810190612aea9190614b6d565b90506000612b15612afe6020840184614712565b6020840135612b106040860186614970565b612be7565b868581518110612b2757612b27614ab9565b6020908102919091010152905080612b8c577fe723f28f104e46b47fd3531f3608374ac226bcf3ddda334a23a266453e0efdb783868581518110612b6d57612b6d614ab9565b6020026020010151604051612b83929190614ae5565b60405180910390a15b5050600101612abd565b6000803681612ba86014828789614afe565b612bb191614b8d565b60601c9350612bc4603460148789614afe565b612bcd91614b28565b9250612bdc8560348189614afe565b949793965094505050565b604051600090828482376000388483888a5af191503d8152602081013d6000823e3d81016040525094509492505050565b600080600080612c288686612f6a565b925092509250612c388282612fb7565b5090949350505050565b6000806000612c5086613070565b915091506000600288604051602001612c6b91815260200190565b60408051601f1981840301815290829052612c8591614bc0565b602060405180830381855afa158015612ca2573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612cc5919061472f565b9050612cd48184848989613092565b98975050505050505050565b600080612cec85613241565b9050612d3986604051602001612d0491815260200190565b60408051601f198184030181529181528301516060840151608085015160a086015160c0870151875160208901518c8c6132bf565b9695505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801590612d7c5750333014155b15611dd157604051630796d94560e01b815260040160405180910390fd5b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612df4575060408051601f3d908101601f19168201909252612df19181019061472f565b60015b612e1c57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161163e565b600080516020614e568339815191528114612e4d57604051632a87526960e21b81526004810182905260240161163e565b612e57838361345d565b505050565b606060ff8314612e7657612e6f836134b3565b90506108d8565b818054612e8290614bd2565b80601f0160208091040260200160405190810160405280929190818152602001828054612eae90614bd2565b8015612efb5780601f10612ed057610100808354040283529160200191612efb565b820191906000526020600020905b815481529060010190602001808311612ede57829003601f168201915b505050505090506108d8565b60006109b76ffffffffeffffffffffffffffffffffff60601b197fffffffff00000001000000000000000000000000fffffffffffffffffffffffc7f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b86866134f2565b60008060008351604103612fa45760208401516040850151606086015160001a612f968882858561359d565b955095509550505050612fb0565b50508151600091506002905b9250925092565b6000826003811115612fcb57612fcb614c06565b03612fd4575050565b6001826003811115612fe857612fe8614c06565b036130065760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561301a5761301a614c06565b0361303b5760405163fce698f760e01b81526004810182905260240161163e565b600382600381111561304f5761304f614c06565b03610db4576040516335e2f38360e21b81526004810182905260240161163e565b600080828060200190518101906130879190614c1c565b909590945092505050565b60006130bf60027fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551614c60565b8411156130ce575060006112a2565b6040805160208101889052908101869052606081018590526080810184905260a0810183905260009060c00160405160208183030381529060405290506000806101006001600160a01b0316836040516131289190614bc0565b600060405180830381855afa9150503d8060008114613163576040519150601f19603f3d011682016040523d82523d6000602084013e613168565b606091505b5080519193509150151582801561317c5750805b156131a35781806020019051810190613195919061472f565b6001149450505050506112a2565b60405163a1f3128160e01b8152600481018b9052602481018a905260448101899052606481018890526084810187905273__$b8f96b288d4d0429e38b8ed50fd423070f$__9063a1f312819060a401602060405180830381865af415801561320f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132339190614953565b9a9950505050505050505050565b6132836040518060e001604052806000815260200160008152602001606081526020016000151581526020016060815260200160608152602001600081525090565b818060200190518101906132979190614cc7565b60c089015260a088015260808701521515606086015260408501526020840152825250919050565b600060258a5110806132f957506132f78a6020815181106132e2576132e2614ab9565b01602001516001600160f81b0319168a61366c565b155b1561330657506000613233565b6000886133128d6136d2565b8960405160200161332593929190614d86565b60408051601f198184030181528282019091526015825274113a3cb832911d113bb2b130baba34371733b2ba1160591b6020830152915061336781838a6138df565b61337657600092505050613233565b60006002836040516133889190614bc0565b602060405180830381855afa1580156133a5573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906133c8919061472f565b9050600060028e836040516020016133e1929190614dc9565b60408051601f19818403018152908290526133fb91614bc0565b602060405180830381855afa158015613418573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061343b919061472f565b905061344a818a8a8a8a613092565b9f9e505050505050505050505050505050565b6134668261398e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156134ab57612e5782826139f3565b610db4613a60565b606060006134c083613a7f565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600082158015613500575081155b8061350b5750858310155b806135165750858210155b15613523575060006112a2565b6000868061353357613533614c4a565b83840990506000878061354857613548614c4a565b888061355657613556614c4a565b888709898061356757613567614c4a565b878b8061357657613576614c4a565b898a0909089050878061358b5761358b614c4a565b86820891909114979650505050505050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156135d85750600091506003905082613662565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561362c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661365857506000925060019150829050613662565b9250600091508190505b9450945094915050565b6000600160f81b83811614613683575060006108d8565b8180156136965750600160fa1b83811614155b156136a3575060006108d8565b600160fb1b838116146136c957600f60fc1b600160fc1b8416016136c9575060006108d8565b50600192915050565b606060006136df83613aa7565b9050600081905060006002825111801561372a575081600283516137039190614aa6565b8151811061371357613713614ab9565b6020910101516001600160f81b031916603d60f81b145b1561373757506002613782565b60018251118015613779575081600183516137529190614aa6565b8151811061376257613762614ab9565b6020910101516001600160f81b031916603d60f81b145b15613782575060015b60008183516137919190614aa6565b90506000816001600160401b038111156137ad576137ad613e99565b6040519080825280601f01601f1916602001820160405280156137d7576020820181803683370190505b50905060005b828110156138d4578481815181106137f7576137f7614ab9565b01602001516001600160f81b031916602b60f81b0361384357602d60f81b82828151811061382757613827614ab9565b60200101906001600160f81b031916908160001a9053506138cc565b84818151811061385557613855614ab9565b01602001516001600160f81b031916602f60f81b0361388557605f60f81b82828151811061382757613827614ab9565b84818151811061389757613897614ab9565b602001015160f81c60f81b8282815181106138b4576138b4614ab9565b60200101906001600160f81b031916908160001a9053505b6001016137dd565b509695505050505050565b825182516000918591859190845b8281101561397f57816139008289614deb565b10613913576000955050505050506109b7565b8361391e8289614deb565b8151811061392e5761392e614ab9565b602001015160f81c60f81b6001600160f81b03191685828151811061395557613955614ab9565b01602001516001600160f81b03191614613977576000955050505050506109b7565b6001016138ed565b50600198975050505050505050565b806001600160a01b03163b6000036139c457604051634c9c8ce360e01b81526001600160a01b038216600482015260240161163e565b600080516020614e5683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051613a109190614bc0565b600060405180830381855af49150503d8060008114613a4b576040519150601f19603f3d011682016040523d82523d6000602084013e613a50565b606091505b50915091506112a2858383613acd565b3415610ea65760405163b398979f60e01b815260040160405180910390fd5b600060ff8216601f8111156108d857604051632cd44ac360e21b815260040160405180910390fd5b60606108d882604051806060016040528060408152602001614e76604091396001613b29565b606082613ae257613add82613ca8565b6109b7565b8151158015613af957506001600160a01b0384163b155b15613b2257604051639996b31560e01b81526001600160a01b038516600482015260240161163e565b50806109b7565b60608351600003613b4957506040805160208101909152600081526109b7565b600082613b7a57600385516004613b609190614dfe565b613b6b906002614deb565b613b759190614c60565b613b9f565b600385516002613b8a9190614deb565b613b949190614c60565b613b9f906004614dfe565b90506000816001600160401b03811115613bbb57613bbb613e99565b6040519080825280601f01601f191660200182016040528015613be5576020820181803683370190505b50905060018501602082018788518901602081018051600082525b82841015613c5b576003840193508351603f8160121c168701518653600186019550603f81600c1c168701518653600186019550603f8160061c168701518653600186019550603f8116870151865350600185019450613c00565b905250508515613c9c57600388510660018114613c7f5760028114613c9257613c9a565b603d6001830353603d6002830353613c9a565b603d60018303535b505b50909695505050505050565b805115613cb85780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5080546000825590600052602060002090810190611dd191905b80821115613cff5760008155600101613ceb565b5090565b600060208284031215613d1557600080fd5b81356001600160e01b0319811681146109b757600080fd5b60006101208284031215613d4057600080fd5b50919050565b600060208284031215613d5857600080fd5b81356001600160401b03811115613d6e57600080fd5b613d7a84828501613d2d565b949350505050565b6001600160a01b0381168114611dd157600080fd5b8035611e5f81613d82565b60008083601f840112613db457600080fd5b5081356001600160401b03811115613dcb57600080fd5b6020830191508360208260051b8501011115613de657600080fd5b9250929050565b60008060008060008060006080888a031215613e0857600080fd5b8735613e1381613d82565b965060208801356001600160401b0380821115613e2f57600080fd5b613e3b8b838c01613da2565b909850965060408a0135915080821115613e5457600080fd5b613e608b838c01613da2565b909650945060608a0135915080821115613e7957600080fd5b50613e868a828b01613da2565b989b979a50959850939692959293505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613ed757613ed7613e99565b604052919050565b60006001600160401b03821115613ef857613ef8613e99565b50601f01601f191660200190565b600082601f830112613f1757600080fd5b8135613f2a613f2582613edf565b613eaf565b818152846020838601011115613f3f57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215613f7257600080fd5b8435613f7d81613d82565b93506020850135613f8d81613d82565b92506040850135915060608501356001600160401b03811115613faf57600080fd5b613fbb87828801613f06565b91505092959194509250565b60008083601f840112613fd957600080fd5b5081356001600160401b03811115613ff057600080fd5b602083019150836020828501011115613de657600080fd5b60008060006040848603121561401d57600080fd5b8335925060208401356001600160401b0381111561403a57600080fd5b61404686828701613fc7565b9497909650939450505050565b60008060006060848603121561406857600080fd5b83356001600160401b0381111561407e57600080fd5b61408a86828701613d2d565b9660208601359650604090950135949350505050565b6020808252825182820181905260009190848201906040850190845b81811015613c9c578351835292840192918401916001016140bc565b6000602082840312156140ea57600080fd5b81356001600160c01b03811681146109b757600080fd5b60006020828403121561411357600080fd5b81356001600160401b0381111561412957600080fd5b820160c081850312156109b757600080fd5b60006020828403121561414d57600080fd5b5035919050565b6000806040838503121561416757600080fd5b823561417281613d82565b915060208301356001600160401b0381111561418d57600080fd5b61419985828601613f06565b9150509250929050565b6000602082840312156141b557600080fd5b81356001600160401b038111156141cb57600080fd5b8201606081850312156109b757600080fd5b8015158114611dd157600080fd5b8035611e5f816141dd565b600080600080600080600080600060c08a8c03121561421457600080fd5b893560ff8116811461422557600080fd5b985061423360208b01613d97565b975060408a01356001600160401b038082111561424f57600080fd5b61425b8d838e01613da2565b909950975060608c013591508082111561427457600080fd5b6142808d838e01613da2565b909750955060808c013591508082111561429957600080fd5b506142a68c828d01613da2565b90945092506142b9905060a08b016141eb565b90509295985092959850929598565b600080604083850312156142db57600080fd5b82356142e681613d82565b946020939093013593505050565b60005b8381101561430f5781810151838201526020016142f7565b50506000910152565b600081518084526143308160208601602086016142f4565b601f01601f19169290920160200192915050565b60ff60f81b881681526000602060e0602084015261436560e084018a614318565b8381036040850152614377818a614318565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b818110156143cb578351835292840192918401916001016143af565b50909c9b505050505050505050505050565b6020815260006109b76020830184614318565b600082601f83011261440157600080fd5b813560206001600160401b0382111561441c5761441c613e99565b8160051b61442b828201613eaf565b928352848101820192828101908785111561444557600080fd5b83870192505b848310156144645782358252918301919083019061444b565b979650505050505050565b600080600080600060a0868803121561448757600080fd5b853561449281613d82565b945060208601356144a281613d82565b935060408601356001600160401b03808211156144be57600080fd5b6144ca89838a016143f0565b945060608801359150808211156144e057600080fd5b6144ec89838a016143f0565b9350608088013591508082111561450257600080fd5b5061450f88828901613f06565b9150509295509295909350565b6000806000806060858703121561453257600080fd5b84356001600160401b0381111561454857600080fd5b61455487828801613fc7565b90989097506020870135966040013595509350505050565b6000806000806000806060878903121561458557600080fd5b86356001600160401b038082111561459c57600080fd5b6145a88a838b01613da2565b909850965060208901359150808211156145c157600080fd5b6145cd8a838b01613da2565b909650945060408901359150808211156145e657600080fd5b506145f389828a01613da2565b979a9699509497509295939492505050565b6000806020838503121561461857600080fd5b82356001600160401b0381111561462e57600080fd5b61463a85828601613fc7565b90969095509350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561469d57603f1988860301845261468b858351614318565b9450928501929085019060010161466f565b5092979650505050505050565b600080600080600060a086880312156146c257600080fd5b85356146cd81613d82565b945060208601356146dd81613d82565b9350604086013592506060860135915060808601356001600160401b0381111561470657600080fd5b61450f88828901613f06565b60006020828403121561472457600080fd5b81356109b781613d82565b60006020828403121561474157600080fd5b5051919050565b6000808335601e1984360301811261475f57600080fd5b83016020810192503590506001600160401b0381111561477e57600080fd5b803603821315613de657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008383855260208086019550808560051b830101846000805b8881101561486957858403601f19018a52823536899003605e190181126147f5578283fd5b88016060813561480481613d82565b6001600160a01b0316865261481b82880183614748565b828989015261482d838901828461478d565b92505050604061483f81840184614748565b93508783038289015261485383858361478d565b9d89019d975050509386019350506001016147d0565b509198975050505050505050565b602081526000823561488881613d82565b6001600160a01b03908116602084810191909152840135906148a982613d82565b80821660408501525050604083013560608301526060830135601e198436030181126148d457600080fd5b83016020810190356001600160401b038111156148f057600080fd5b8060051b360382131561490257600080fd5b60c0608085015261491760e0850182846147b6565b915050608084013560a084015261493160a0850185614748565b848303601f190160c0860152612d3983828461478d565b8051611e5f816141dd565b60006020828403121561496557600080fd5b81516109b7816141dd565b6000808335601e1984360301811261498757600080fd5b8301803591506001600160401b038211156149a157600080fd5b602001915036819003821315613de657600080fd5b6000838385526020808601955060208560051b8301018460005b87811015614a0a57848303601f190189526149eb8288614748565b6149f685828461478d565b9a86019a94505050908301906001016149d0565b5090979650505050505050565b606081526000614a2b60608301888a6149b6565b8281036020848101919091528682528791810160005b88811015614a5d57833582529282019290820190600101614a41565b508481036040860152614a718187896149b6565b9b9a5050505050505050505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156108d8576108d8614a90565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b8281526040602082015260006109b46040830184614318565b60008085851115614b0e57600080fd5b83861115614b1b57600080fd5b5050820193919092039150565b803560208310156108d857600019602084900360031b1b1692915050565b606081526000614b5a60608301868861478d565b6020830194909452506040015292915050565b60008235605e19833603018112614b8357600080fd5b9190910192915050565b6bffffffffffffffffffffffff198135818116916014851015612a615760149490940360031b84901b1690921692915050565b60008251614b838184602087016142f4565b600181811c90821680614be657607f821691505b602082108103613d4057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600080600060608486031215614c3157600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052601260045260246000fd5b600082614c7d57634e487b7160e01b600052601260045260246000fd5b500490565b600082601f830112614c9357600080fd5b8151614ca1613f2582613edf565b818152846020838601011115614cb657600080fd5b613d7a8260208301602087016142f4565b600080600080600080600080610100898b031215614ce457600080fd5b88519750602089015196506040890151955060608901516001600160401b0380821115614d1057600080fd5b614d1c8c838d01614c82565b9650614d2a60808c01614948565b955060a08b0151915080821115614d4057600080fd5b614d4c8c838d01614c82565b945060c08b0151915080821115614d6257600080fd5b50614d6f8b828c01614c82565b92505060e089015190509295985092959890939650565b60008451614d988184602089016142f4565b845190830190614dac8183602089016142f4565b8451910190614dbf8183602088016142f4565b0195945050505050565b60008351614ddb8184602088016142f4565b9190910191825250602001919050565b808201808211156108d8576108d8614a90565b80820281158282048414176108d8576108d8614a9056fea2b1bcb5e16cee2a8898b49cb0c3605e70c16f429f6002ed8b1bc5612a694900a2b1bcb5e16cee2a8898b49cb0c3605e70c16f429f6002ed8b1bc5612a694902360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220d641f685fbc825f5c1c752f10b46c0f81d9143a8b41e10871b92196f03c53fe864736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d81846f7dee1e1b6ac5ec7facf37349f677e4fb70664eb5852e6414aa31b93064736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getIsUsed\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_id\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"id_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"UsedId\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"id\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610518806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063414c3e3314610067578063595dce4814610083578063a145832a146100ab578063b99deb0e146100be578063d3eddcc514610067578063ed46336714610067575b600080fd5b610081610075366004610379565b50505050505050505050565b005b610096610091366004610446565b6100df565b60405190151581526020015b60405180910390f35b6100816100b9366004610379565b610116565b6100d16100cc366004610482565b61028c565b6040519081526020016100a2565b6001600160a01b03808416600090815260208181526040808320938616835292905290812061010e90836102ef565b949350505050565b85600881901b6001600160f81b03198116156101875760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b5060006101948c8c61028c565b90506101a13385836100df565b156101ee5760405162461bcd60e51b815260206004820152601a60248201527f4964456e666f726365723a69642d616c72656164792d75736564000000000000604482015260640161017e565b336000908152602081815260408083206001600160a01b03881684528252808320600885901c845290915290208054600160ff84161b179055826001600160a01b0316846001600160a01b0316336001600160a01b03167f6286af1aaf28b34723a53056e5608eabb40c823d1ce093ff371cf08c502431d68460405161027691815260200190565b60405180910390a4505050505050505050505050565b6000602082146102de5760405162461bcd60e51b815260206004820152601f60248201527f4964456e666f726365723a696e76616c69642d7465726d732d6c656e67746800604482015260640161017e565b6102e882846104c4565b9392505050565b600881901c600090815260208390526040902054600160ff83161b1615155b92915050565b60008083601f84011261032657600080fd5b50813567ffffffffffffffff81111561033e57600080fd5b60208301915083602082850101111561035657600080fd5b9250929050565b80356001600160a01b038116811461037457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561039857600080fd5b8a3567ffffffffffffffff808211156103b057600080fd5b6103bc8e838f01610314565b909c509a5060208d01359150808211156103d557600080fd5b6103e18e838f01610314565b909a50985060408d0135975060608d013591508082111561040157600080fd5b5061040e8d828e01610314565b90965094505060808b0135925061042760a08c0161035d565b915061043560c08c0161035d565b90509295989b9194979a5092959850565b60008060006060848603121561045b57600080fd5b6104648461035d565b92506104726020850161035d565b9150604084013590509250925092565b6000806020838503121561049557600080fd5b823567ffffffffffffffff8111156104ac57600080fd5b6104b885828601610314565b90969095509350505050565b8035602083101561030e57600019602084900360031b1b169291505056fea26469706673582212204a96dd3b9054d6055c3a36da342d1ecb848915fb596c41cf0571e73299243bf864736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"callCounts\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"count\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"limit_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"IncreasedCount\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"limit\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"callCount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506104e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806319054d8914610067578063414c3e33146100a1578063a145832a146100bd578063b99deb0e146100d0578063d3eddcc5146100a1578063ed463367146100a1575b600080fd5b61008f6100753660046102ec565b600060208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b6100bb6100af36600461035f565b50505050505050505050565b005b6100bb6100cb36600461035f565b6100e3565b61008f6100de36600461042c565b610244565b85600881901b6100f48160006102b9565b6101535760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b5060006101608c8c610244565b33600090815260208181526040808320898452909152812080549293509091829061018a9061046e565b91829055509050818111156101ed5760405162461bcd60e51b815260206004820152602360248201527f4c696d6974656443616c6c73456e666f726365723a6c696d69742d657863656560448201526219195960ea1b606482015260840161014a565b604080518381526020810183905287916001600160a01b0387169133917f449da07f2c06c9d1a6b19d2454ffe749e8cf991d22f686e076a1a4844c5ff370910160405180910390a450505050505050505050505050565b6000602082146102a85760405162461bcd60e51b815260206004820152602960248201527f4c696d6974656443616c6c73456e666f726365723a696e76616c69642d7465726044820152680dae65ad8cadccee8d60bb1b606482015260840161014a565b6102b28284610495565b9392505050565b6001600160f81b0319828116908216145b92915050565b80356001600160a01b03811681146102e757600080fd5b919050565b600080604083850312156102ff57600080fd5b610308836102d0565b946020939093013593505050565b60008083601f84011261032857600080fd5b50813567ffffffffffffffff81111561034057600080fd5b60208301915083602082850101111561035857600080fd5b9250929050565b60008060008060008060008060008060e08b8d03121561037e57600080fd5b8a3567ffffffffffffffff8082111561039657600080fd5b6103a28e838f01610316565b909c509a5060208d01359150808211156103bb57600080fd5b6103c78e838f01610316565b909a50985060408d0135975060608d01359150808211156103e757600080fd5b506103f48d828e01610316565b90965094505060808b0135925061040d60a08c016102d0565b915061041b60c08c016102d0565b90509295989b9194979a5092959850565b6000806020838503121561043f57600080fd5b823567ffffffffffffffff81111561045657600080fd5b61046285828601610316565b90969095509350505050565b60006001820161048e57634e487b7160e01b600052601160045260246000fd5b5060010190565b803560208310156102ca57600019602084900360031b1b169291505056fea264697066735822122058fb87f0b8e8aa4745b9ef395d8bd725c313f876828d7be4c479f4049d6644ac64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"incrementNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3b6a0af2d4dff4702805c39f40ed768201654e38f4d05a5ef7ae0498666b77964736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getAvailableAmount\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"availableAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"initialAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"maxAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"amountPerSecond_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startTime_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"streamingAllowances\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"initialAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"maxAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"amountPerSecond\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startTime\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"spent\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"IncreasedSpentMap\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"initialAmount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"maxAmount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"amountPerSecond\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startTime\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"spent\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"lastUpdateTimestamp\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506109a4806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063d3eddcc51161005b578063d3eddcc514610082578063ed46336714610082578063ee73d772146100e9578063fb7d2c5b1461010a57600080fd5b8063414c3e3314610082578063a145832a1461009e578063b99deb0e146100b1575b600080fd5b61009c610090366004610765565b50505050505050505050565b005b61009c6100ac366004610765565b610177565b6100c46100bf366004610832565b61025c565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6100fc6100f7366004610874565b610338565b6040519081526020016100e0565b61014f610118366004610874565b6000602081815292815260408082209093529081522080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100e0565b856101838160006103a3565b6101d45760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6101e58160006103a3565b61023f5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084016101cb565b5061024e8c8c898989886103ba565b505050505050505050505050565b6000808080608085146102cb5760405162461bcd60e51b815260206004820152603160248201527f4e6174697665546f6b656e53747265616d696e67456e666f726365723a696e766044820152700c2d8d2c85ae8cae4dae65ad8cadccee8d607b1b60648201526084016101cb565b6102d960206000878961089e565b6102e2916108c8565b93506102f260406020878961089e565b6102fb916108c8565b925061030b60606040878961089e565b610314916108c8565b915061032460806060878961089e565b61032d916108c8565b939692955090935050565b6001600160a01b0382166000908152602081815260408083208484528252808320815160a0810183528154815260018201549381019390935260028101549183019190915260038101546060830152600481015460808301529061039b9061062e565b949350505050565b6001600160f81b0319828116908216145b92915050565b60006103c685856106af565b50509150506000806000806103db8b8b61025c565b93509350935093508383101561044b5760405162461bcd60e51b815260206004820152602f60248201527f4e6174697665546f6b656e53747265616d696e67456e666f726365723a696e7660448201526e185b1a590b5b585e0b585b5bdd5b9d608a1b60648201526084016101cb565b600081116104b85760405162461bcd60e51b815260206004820152603460248201527f4e6174697665546f6b656e53747265616d696e67456e666f726365723a696e76604482015273616c69642d7a65726f2d73746172742d74696d6560601b60648201526084016101cb565b336000908152602081815260408083208a8452909152812060048101549091036104f5578481556001810184905560028101839055600381018290555b6040805160a081018252825481526001830154602082015260028301549181019190915260038201546060820152600482015460808201526105369061062e565b86111561059d5760405162461bcd60e51b815260206004820152602f60248201527f4e6174697665546f6b656e53747265616d696e67456e666f726365723a616c6c60448201526e1bddd85b98d94b595e18d959591959608a1b60648201526084016101cb565b858160040160008282546105b191906108fc565b9091555050600481015460408051878152602081018790529081018590526060810184905260808101919091524260a082015288906001600160a01b0389169033907fa4d5df1d290378aabb8f054b2f3100faf35e2266bb7fbe661f947dfc686704ae9060c00160405180910390a4505050505050505050505050565b6000816060015142101561064457506000919050565b6000826060015142610656919061090f565b9050600081846040015161066a9190610922565b845161067691906108fc565b9050836020015181111561068b575060208301515b808460800151106106a0575060009392505050565b608084015161039b908261090f565b60008036816106c1601482878961089e565b6106ca91610939565b60601c93506106dd60346014878961089e565b6106e6916108c8565b92506106f5856034818961089e565b949793965094505050565b60008083601f84011261071257600080fd5b50813567ffffffffffffffff81111561072a57600080fd5b60208301915083602082850101111561074257600080fd5b9250929050565b80356001600160a01b038116811461076057600080fd5b919050565b60008060008060008060008060008060e08b8d03121561078457600080fd5b8a3567ffffffffffffffff8082111561079c57600080fd5b6107a88e838f01610700565b909c509a5060208d01359150808211156107c157600080fd5b6107cd8e838f01610700565b909a50985060408d0135975060608d01359150808211156107ed57600080fd5b506107fa8d828e01610700565b90965094505060808b0135925061081360a08c01610749565b915061082160c08c01610749565b90509295989b9194979a5092959850565b6000806020838503121561084557600080fd5b823567ffffffffffffffff81111561085c57600080fd5b61086885828601610700565b90969095509350505050565b6000806040838503121561088757600080fd5b61089083610749565b946020939093013593505050565b600080858511156108ae57600080fd5b838611156108bb57600080fd5b5050820193919092039150565b803560208310156103b457600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103b4576103b46108e6565b818103818111156103b4576103b46108e6565b80820281158282048414176103b4576103b46108e6565b6bffffffffffffffffffffffff1981358181169160148510156109665780818660140360031b1b83161692505b50509291505056fea264697066735822122052704058a3717c34d4c81be20ba9801f9b76f6f0c65ef9abba014d246806f21f64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHookCallCount\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610263806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063d3eddcc51461008b578063e38ad59014610099578063ed4633671461005c575b600080fd5b61007661006a366004610139565b50505050505050505050565b005b610076610086366004610139565b6100b4565b610076610057366004610139565b6100a260005481565b60405190815260200160405180910390f35b6000805490806100c383610206565b919050555050505050505050505050565b60008083601f8401126100e657600080fd5b50813567ffffffffffffffff8111156100fe57600080fd5b60208301915083602082850101111561011657600080fd5b9250929050565b80356001600160a01b038116811461013457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561015857600080fd5b8a3567ffffffffffffffff8082111561017057600080fd5b61017c8e838f016100d4565b909c509a5060208d013591508082111561019557600080fd5b6101a18e838f016100d4565b909a50985060408d0135975060608d01359150808211156101c157600080fd5b506101ce8d828e016100d4565b90965094505060808b013592506101e760a08c0161011d565b91506101f560c08c0161011d565b90509295989b9194979a5092959850565b60006001820161022657634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220bcf0049f14343021d3eb32b64d949a39aec074b673cc386de61163856ad518a964736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122074ec8ae00f245173ca026cab4a450417e87849694c5e94ec4fdf9b92eee9682e64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegationManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressEmptyCode\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressInsufficientBalance\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedInnerCall\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x60a060405234801561001057600080fd5b50604051610fa1380380610fa183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610efc6100a560003960008181609c0152818160f8015281816102010152818161030201526103f60152610efc6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610071578063d3eddcc514610084578063ea4d3c9b14610097578063ed463367146100da575b600080fd5b61006f61006a36600461084c565b6100ed565b005b61006f61007f36600461084c565b6101c7565b61006f61009236600461084c565b6102c8565b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006f6100e836600461084c565b6103bc565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461013e5760405162461bcd60e51b815260040161013590610918565b60405180910390fd5b6101bb8a8a8a8a6040518060a001604052808c81526020018b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602081018a90526001600160a01b03808a166040830152881660609091015263414c3e3360e01b6104ac565b50505050505050505050565b85600881901b6001600160f81b03198116156101f55760405162461bcd60e51b815260040161013590610968565b50336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461023e5760405162461bcd60e51b815260040161013590610918565b6102bb8b8b8b8b6040518060a001604052808d81526020018c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602081018b90526001600160a01b03808b16604083015289166060909101526350a2c19560e11b6104ac565b5050505050505050505050565b85600881901b6001600160f81b03198116156102f65760405162461bcd60e51b815260040161013590610968565b50336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461033f5760405162461bcd60e51b815260040161013590610918565b6102bb8b8b8b8b6040518060a001604052808d81526020018c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602081018b90526001600160a01b03808b166040830152891660609091015263d3eddcc560e01b6104ac565b85600881901b6001600160f81b03198116156103ea5760405162461bcd60e51b815260040161013590610968565b50336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104335760405162461bcd60e51b815260040161013590610918565b6102bb8b8b8b8b6040518060a001604052808d81526020018c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602081018b90526001600160a01b03808b166040830152891660609091015263ed46336760e01b5b60006104ba86880188610af1565b905060006104ca85870187610cf3565b905081518160000151106105355760405162461bcd60e51b815260206004820152602c60248201527f4c6f676963616c4f7257726170706572456e666f726365723a696e76616c696460448201526b05acee4deeae05ad2dcc8caf60a31b6064820152608401610135565b60008282600001518151811061054d5761054d610ddb565b602002602001015190506000816000015151905080836020015151146105d15760405162461bcd60e51b815260206004820152603360248201527f4c6f676963616c4f7257726170706572456e666f726365723a696e76616c696460448201527205ac6c2eccac2e85ac2e4cee65ad8cadccee8d606b1b6064820152608401610135565b60005b818110156102bb576106a8836000015182815181106105f5576105f5610ddb565b602002602001015160000151878560000151848151811061061857610618610ddb565b6020026020010151602001518760200151858151811061063a5761063a610ddb565b60200260200101518b600001518c602001518d604001518e606001518f608001516040516024016106719796959493929190610e41565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526106b1565b506001016105d4565b60606106bf838360006106c6565b9392505050565b6060814710156106eb5760405163cd78605960e01b8152306004820152602401610135565b600080856001600160a01b031684866040516107079190610eaa565b60006040518083038185875af1925050503d8060008114610744576040519150601f19603f3d011682016040523d82523d6000602084013e610749565b606091505b5091509150610759868383610763565b9695505050505050565b60608261077857610773826107bf565b6106bf565b815115801561078f57506001600160a01b0384163b155b156107b857604051639996b31560e01b81526001600160a01b0385166004820152602401610135565b50806106bf565b8051156107cf5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60008083601f8401126107fa57600080fd5b5081356001600160401b0381111561081157600080fd5b60208301915083602082850101111561082957600080fd5b9250929050565b80356001600160a01b038116811461084757600080fd5b919050565b60008060008060008060008060008060e08b8d03121561086b57600080fd5b8a356001600160401b038082111561088257600080fd5b61088e8e838f016107e8565b909c509a5060208d01359150808211156108a757600080fd5b6108b38e838f016107e8565b909a50985060408d0135975060608d01359150808211156108d357600080fd5b506108e08d828e016107e8565b90965094505060808b013592506108f960a08c01610830565b915061090760c08c01610830565b90509295989b9194979a5092959850565b60208082526030908201527f4c6f676963616c4f7257726170706572456e666f726365723a6f6e6c792d646560408201526f3632b3b0ba34b7b716b6b0b730b3b2b960811b606082015260800190565b60208082526025908201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6040820152642d7479706560d81b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b604051602081016001600160401b03811182821017156109e5576109e56109ad565b60405290565b604051606081016001600160401b03811182821017156109e5576109e56109ad565b604080519081016001600160401b03811182821017156109e5576109e56109ad565b604051601f8201601f191681016001600160401b0381118282101715610a5757610a576109ad565b604052919050565b60006001600160401b03821115610a7857610a786109ad565b5060051b60200190565b600082601f830112610a9357600080fd5b81356001600160401b03811115610aac57610aac6109ad565b610abf601f8201601f1916602001610a2f565b818152846020838601011115610ad457600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610b0357600080fd5b6001600160401b0382351115610b1857600080fd5b8135820183601f820112610b2b57600080fd5b610b3d610b388235610a5f565b610a2f565b81358082526020808301929160051b840101861015610b5b57600080fd5b602083015b6020843560051b850101811015610ce9576001600160401b0381351115610b8657600080fd5b6020813585018803601f19011215610b9d57600080fd5b610ba56109c3565b6001600160401b0360208335870101351115610bc057600080fd5b81358501602081013501603f81018913610bd957600080fd5b610be9610b386020830135610a5f565b602082810135808352908201919060051b83016040018b1015610c0b57600080fd5b604083015b6040602085013560051b850101811015610cd6576001600160401b0381351115610c3957600080fd5b803584016060818e03603f19011215610c5157600080fd5b610c596109eb565b610c6560408301610830565b81526001600160401b0360608301351115610c7f57600080fd5b610c928e60406060850135850101610a82565b60208201526001600160401b0360808301351115610caf57600080fd5b610cc28e60406080850135850101610a82565b604082015284525060209283019201610c10565b5083525050835260209283019201610b60565b5095945050505050565b60006020808385031215610d0657600080fd5b82356001600160401b0380821115610d1d57600080fd5b9084019060408287031215610d3157600080fd5b610d39610a0d565b823581528383013582811115610d4e57600080fd5b80840193505086601f840112610d6357600080fd5b8235610d71610b3882610a5f565b81815260059190911b84018501908581019089831115610d9057600080fd5b8686015b83811015610dc857803586811115610dac5760008081fd5b610dba8c8a838b0101610a82565b845250918701918701610d94565b5095830195909552509695505050505050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015610e0c578181015183820152602001610df4565b50506000910152565b60008151808452610e2d816020860160208601610df1565b601f01601f19169290920160200192915050565b60e081526000610e5460e083018a610e15565b8281036020840152610e66818a610e15565b90508760408401528281036060840152610e808188610e15565b608084019690965250506001600160a01b0392831660a0820152911660c090910152949350505050565b60008251610ebc818460208701610df1565b919091019291505056fea2646970667358221220849f3e028a14dd0caba34e88e124f67834a95e85298a8ec49d35e542d61e676b64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHookCallCount\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHookCallCount\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b5061028c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063414c3e33146100675780637c46d3c814610083578063a145832a1461009e578063d3eddcc5146100b1578063e38ad590146100c4578063ed46336714610067575b600080fd5b610081610075366004610162565b50505050505050505050565b005b61008c60015481565b60405190815260200160405180910390f35b6100816100ac366004610162565b6100cd565b6100816100bf366004610162565b6100ed565b61008c60005481565b6000805490806100dc8361022f565b919050555050505050505050505050565b600180549060006100dc8361022f565b60008083601f84011261010f57600080fd5b50813567ffffffffffffffff81111561012757600080fd5b60208301915083602082850101111561013f57600080fd5b9250929050565b80356001600160a01b038116811461015d57600080fd5b919050565b60008060008060008060008060008060e08b8d03121561018157600080fd5b8a3567ffffffffffffffff8082111561019957600080fd5b6101a58e838f016100fd565b909c509a5060208d01359150808211156101be57600080fd5b6101ca8e838f016100fd565b909a50985060408d0135975060608d01359150808211156101ea57600080fd5b506101f78d828e016100fd565b90965094505060808b0135925061021060a08c01610146565b915061021e60c08c01610146565b90509295989b9194979a5092959850565b60006001820161024f57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220fbb59fec9ec7bf6cdda251d9d498ff456d0623f22ca1f4ef5f02ab03744fc44c64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      },\n      {\n        \"name\": \"_argsEqualityCheckEnforcer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"argsEqualityCheckEnforcer\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegationManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"recipient_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ValidatedPayment\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"recipient\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegator\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x60c060405234801561001057600080fd5b506040516111b73803806111b783398101604081905261002f9161005e565b6001600160a01b039182166080521660a052610098565b6001600160a01b038116811461005b57600080fd5b50565b6000806040838503121561007157600080fd5b825161007c81610046565b602084015190925061008d81610046565b809150509250929050565b60805160a0516110e66100d16000396000818160a301526103c001526000818161011901528181610273015261065a01526110e66000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b99deb0e1161005b578063b99deb0e146100e2578063d3eddcc514610082578063ea4d3c9b14610114578063ed4633671461013b57600080fd5b8063414c3e3314610082578063a145832a14610082578063a42ff9311461009e575b600080fd5b61009c6100903660046108d5565b50505050505050505050565b005b6100c57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f56100f03660046109a2565b61014e565b604080516001600160a01b0390931683526020830191909152016100d9565b6100c57f000000000000000000000000000000000000000000000000000000000000000081565b61009c6101493660046108d5565b6101fc565b600080603483146101be5760405162461bcd60e51b815260206004820152602f60248201527f4e6174697665546f6b656e5061796d656e74456e666f726365723a696e76616c60448201526e0d2c85ae8cae4dae65ad8cadccee8d608b1b60648201526084015b60405180910390fd5b6101cc6014600085876109e4565b6101d591610a0e565b60601c91506101e783601481876109e4565b6101f091610a43565b60001c90509250929050565b85600881901b61020d8160006107ac565b6102675760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084016101b5565b50336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102fb5760405162461bcd60e51b815260206004820152603260248201527f4e6174697665546f6b656e5061796d656e74456e666f726365723a6f6e6c792d6044820152713232b632b3b0ba34b7b716b6b0b730b3b2b960711b60648201526084016101b5565b6000806103088d8d61014e565b9092509050600061031b8b8d018d610c88565b905060008151116103945760405162461bcd60e51b815260206004820152603f60248201527f4e6174697665546f6b656e5061796d656e74456e666f726365723a696e76616c60448201527f69642d616c6c6f77616e63652d64656c65676174696f6e732d6c656e6774680060648201526084016101b5565b6000816000815181106103a9576103a9610dcd565b6020026020010151606001515111801561043057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816000815181106103fb576103fb610dcd565b60200260200101516060015160008151811061041957610419610dcd565b6020026020010151600001516001600160a01b0316145b6104a25760405162461bcd60e51b815260206004820152603c60248201527f4e6174697665546f6b656e5061796d656e74456e666f726365723a6d6973736960448201527f6e672d61726773457175616c697479436865636b456e666f726365720000000060648201526084016101b5565b86856040516020016104d092919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604051602081830303815290604052816000815181106104f2576104f2610dcd565b60200260200101516060015160008151811061051057610510610dcd565b602090810291909101015160409081019190915280516001808252818301909252600091816020015b6060815260200190600190039081610539579050509050816040516020016105619190610e33565b6040516020818303038152906040528160008151811061058357610583610dcd565b6020908102919091010152604080516001808252818301909252600091816020015b60608152602001906001900390816105a55790505090506105d68585604051806020016040528060008152506107c3565b816000815181106105e9576105e9610dcd565b60209081029190910101526040805160018082528183019092526000918160200160208202803683370190505090506106206107f2565b8160008151811061063357610633610dcd565b602090810291909101015260405163cef6d20960e01b81526001600160a01b0380881631917f00000000000000000000000000000000000000000000000000000000000000009091169063cef6d2099061069590879086908890600401610fbf565b600060405180830381600087803b1580156106af57600080fd5b505af11580156106c3573d6000803e3d6000fd5b505050506001600160a01b038716316106dc8783611029565b8110156107435760405162461bcd60e51b815260206004820152602f60248201527f4e6174697665546f6b656e5061796d656e74456e666f726365723a7061796d6560448201526e1b9d0b5b9bdd0b5c9958d95a5d9959608a1b60648201526084016101b5565b604080516001600160a01b038d811682528c81166020830152918101899052908916908d9033907fac266e0d9b66169d0dc4479d531985bcec62dfd9d7992d0f6865afdbb7baa5e29060600160405180910390a450505050505050505050505050505050505050565b6001600160f81b0319828116908216145b92915050565b60608383836040516020016107da9392919061104a565b60405160208183030381529060405290509392505050565b600061080081808080610805565b905090565b604080516001600160f81b03198087166020830152851660218201526000602282018190526001600160e01b03198516602683015269ffffffffffffffffffff198416602a830152910160405160208183030381529060405261086790611089565b95945050505050565b60008083601f84011261088257600080fd5b50813567ffffffffffffffff81111561089a57600080fd5b6020830191508360208285010111156108b257600080fd5b9250929050565b80356001600160a01b03811681146108d057600080fd5b919050565b60008060008060008060008060008060e08b8d0312156108f457600080fd5b8a3567ffffffffffffffff8082111561090c57600080fd5b6109188e838f01610870565b909c509a5060208d013591508082111561093157600080fd5b61093d8e838f01610870565b909a50985060408d0135975060608d013591508082111561095d57600080fd5b5061096a8d828e01610870565b90965094505060808b0135925061098360a08c016108b9565b915061099160c08c016108b9565b90509295989b9194979a5092959850565b600080602083850312156109b557600080fd5b823567ffffffffffffffff8111156109cc57600080fd5b6109d885828601610870565b90969095509350505050565b600080858511156109f457600080fd5b83861115610a0157600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015610a3b5780818660140360031b1b83161692505b505092915050565b803560208310156107bd57600019602084900360031b1b1692915050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610a9a57610a9a610a61565b60405290565b60405160c0810167ffffffffffffffff81118282101715610a9a57610a9a610a61565b604051601f8201601f1916810167ffffffffffffffff81118282101715610aec57610aec610a61565b604052919050565b600067ffffffffffffffff821115610b0e57610b0e610a61565b5060051b60200190565b600082601f830112610b2957600080fd5b813567ffffffffffffffff811115610b4357610b43610a61565b610b56601f8201601f1916602001610ac3565b818152846020838601011115610b6b57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112610b9957600080fd5b81356020610bae610ba983610af4565b610ac3565b82815260059290921b84018101918181019086841115610bcd57600080fd5b8286015b84811015610c7d57803567ffffffffffffffff80821115610bf25760008081fd5b908801906060828b03601f1901811315610c0c5760008081fd5b610c14610a77565b610c1f8885016108b9565b815260408085013584811115610c355760008081fd5b610c438e8b83890101610b18565b838b015250918401359183831115610c5b5760008081fd5b610c698d8a85880101610b18565b908201528652505050918301918301610bd1565b509695505050505050565b60006020808385031215610c9b57600080fd5b823567ffffffffffffffff80821115610cb357600080fd5b818501915085601f830112610cc757600080fd5b8135610cd5610ba982610af4565b81815260059190911b83018401908481019088831115610cf457600080fd5b8585015b83811015610dc057803585811115610d0f57600080fd5b860160c0818c03601f19011215610d265760008081fd5b610d2e610aa0565b610d398983016108b9565b81526040610d488184016108b9565b8a83015260608084013582840152608091508184013589811115610d6c5760008081fd5b610d7a8f8d83880101610b88565b82850152505060a0808401358284015260c0840135915088821115610d9f5760008081fd5b610dad8e8c84870101610b18565b9083015250845250918601918601610cf8565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015610dfe578181015183820152602001610de6565b50506000910152565b60008151808452610e1f816020860160208601610de3565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610f5857603f19888603018452815160c0860160018060a01b038083511688528089840151168989015260408301516040890152606083015160c060608a015282815180855260e08b01915060e08160051b8c010194508b8301925060005b81811015610f1c5760df198c870301835283518581511687528d81015160608f890152610eed6060890182610e07565b9050604082015191508781036040890152610f088183610e07565b97505050928c0192918c0191600101610ebd565b50505050506080820151608088015260a0820151915086810360a0880152610f448183610e07565b965050509285019290850190600101610e5a565b5092979650505050505050565b60008282518085526020808601955060208260051b8401016020860160005b84811015610fb257601f19868403018952610fa0838351610e07565b98840198925090830190600101610f84565b5090979650505050505050565b606081526000610fd26060830186610f65565b82810360208481019190915285518083528682019282019060005b8181101561100957845183529383019391830191600101610fed565b5050848103604086015261101d8187610f65565b98975050505050505050565b808201808211156107bd57634e487b7160e01b600052601160045260246000fd5b6bffffffffffffffffffffffff198460601b1681528260148201526000825161107a816034850160208701610de3565b91909101603401949350505050565b805160208083015191908110156110aa576000198160200360031b1b821691505b5091905056fea264697066735822122085080b51672c95cef1f0b772853b91117f909ad9d873a40d2cad7c2b29f5117c64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getAvailableAmount\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"availableAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"isNewPeriod_\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"currentPeriod_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"periodAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"periodDuration_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startDate_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"periodicAllowances\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"periodAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"periodDuration\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startDate\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"lastTransferPeriod\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"transferredInCurrentPeriod\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TransferredInPeriod\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"periodAmount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"periodDuration\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startDate\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"transferredInCurrentPeriod\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"transferTimestamp\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610b57806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a145832a1161005b578063a145832a1461013e578063b99deb0e14610151578063d3eddcc514610082578063ed4633671461008257600080fd5b8063414c3e33146100825780636a9843f61461009e5780637b91dc78146100d1575b600080fd5b61009c610090366004610893565b50505050505050505050565b005b6100b16100ac366004610960565b61017f565b604080519384529115156020840152908201526060015b60405180910390f35b6101166100df3660046109ba565b6000602081815292815260408082209093529081522080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016100c8565b61009c61014c366004610893565b610255565b61016461015f3660046109e4565b61033a565b604080519384526020840192909252908201526060016100c8565b6001600160a01b0383166000908152602081815260408083208784528252808320815160a0810183528154815260018201549381019390935260028101549183018290526003810154606084015260040154608083015282918291156101f4576101e8816103f0565b9350935093505061024b565b6000806000610203898961033a565b92509250925060006040518060a00160405280858152602001848152602001838152602001600081526020016000815250905061023f816103f0565b97509750975050505050505b9450945094915050565b85610261816000610484565b6102b25760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6102c3816000610484565b61031d5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084016102a9565b5061032c8c8c8989898861049b565b505050505050505050505050565b600080806060841461039b5760405162461bcd60e51b81526020600482015260366024820152600080516020610b028339815191526044820152750e474d2dcecc2d8d2c85ae8cae4dae65ad8cadccee8d60531b60648201526084016102a9565b6103a9602060008688610a26565b6103b291610a50565b92506103c2604060208688610a26565b6103cb91610a50565b91506103db606060408688610a26565b6103e491610a50565b60001c90509250925092565b6000806000836040015142101561040f5750600091508190508061047d565b602084015160408501516104239042610a84565b61042d9190610a97565b610438906001610ab9565b905080846060015114159150600082610455578460800151610458565b60005b90508085600001511161046c576000610479565b8451610479908290610a84565b9350505b9193909250565b6001600160f81b0319828116908216145b92915050565b60006104a785856107dd565b505091505060008060006104bb8a8a61033a565b336000908152602081815260408083208c84529091528120600281015494975092955090935090919003610684576000821161054d5760405162461bcd60e51b81526020600482015260396024820152600080516020610b0283398151915260448201527f723a696e76616c69642d7a65726f2d73746172742d646174650000000000000060648201526084016102a9565b600084116105b15760405162461bcd60e51b815260206004820152603c6024820152600080516020610b0283398151915260448201527f723a696e76616c69642d7a65726f2d706572696f642d616d6f756e740000000060648201526084016102a9565b600083116106155760405162461bcd60e51b815260206004820152603e6024820152600080516020610b0283398151915260448201527f723a696e76616c69642d7a65726f2d706572696f642d6475726174696f6e000060648201526084016102a9565b814210156106725760405162461bcd60e51b81526020600482015260366024820152600080516020610b028339815191526044820152751c8e9d1c985b9cd9995c8b5b9bdd0b5cdd185c9d195960521b60648201526084016102a9565b83815560018101839055600281018290555b60008060006106cf846040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250506103f0565b925092509250828811156107395760405162461bcd60e51b815260206004820152603a6024820152600080516020610b0283398151915260448201527f723a7472616e736665722d616d6f756e742d657863656564656400000000000060648201526084016102a9565b811561074e5760038401819055600060048501555b878460040160008282546107629190610ab9565b909155505060028401546004850154604080518a8152602081018a90529081019290925260608201524260808201528a906001600160a01b038b169033907f22e1bbd8bc0380d336958afc37cd8cb128d6c43891ed276162c30e8df467734d9060a00160405180910390a45050505050505050505050505050565b60008036816107ef6014828789610a26565b6107f891610acc565b60601c935061080b603460148789610a26565b61081491610a50565b92506108238560348189610a26565b949793965094505050565b60008083601f84011261084057600080fd5b50813567ffffffffffffffff81111561085857600080fd5b60208301915083602082850101111561087057600080fd5b9250929050565b80356001600160a01b038116811461088e57600080fd5b919050565b60008060008060008060008060008060e08b8d0312156108b257600080fd5b8a3567ffffffffffffffff808211156108ca57600080fd5b6108d68e838f0161082e565b909c509a5060208d01359150808211156108ef57600080fd5b6108fb8e838f0161082e565b909a50985060408d0135975060608d013591508082111561091b57600080fd5b506109288d828e0161082e565b90965094505060808b0135925061094160a08c01610877565b915061094f60c08c01610877565b90509295989b9194979a5092959850565b6000806000806060858703121561097657600080fd5b8435935061098660208601610877565b9250604085013567ffffffffffffffff8111156109a257600080fd5b6109ae8782880161082e565b95989497509550505050565b600080604083850312156109cd57600080fd5b6109d683610877565b946020939093013593505050565b600080602083850312156109f757600080fd5b823567ffffffffffffffff811115610a0e57600080fd5b610a1a8582860161082e565b90969095509350505050565b60008085851115610a3657600080fd5b83861115610a4357600080fd5b5050820193919092039150565b8035602083101561049557600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561049557610495610a6e565b600082610ab457634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561049557610495610a6e565b6bffffffffffffffffffffffff198135818116916014851015610af95780818660140360031b1b83161692505b50509291505056fe4e6174697665546f6b656e506572696f645472616e73666572456e666f726365a2646970667358221220ddbfb33bfc3119eae666e9c14c2e492d38eed690114f0ed176d6eb49d0bc21a364736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"incrementNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"nonceSequenceNumber\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"currentNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"nonce_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"incrementNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"UsedNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"nonce\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b5061050e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b99deb0e1161005b578063b99deb0e146100eb578063d3eddcc5146100bc578063ed463367146100bc578063f5743c4c146100fe57600080fd5b80632bd4ed2114610082578063414c3e33146100bc578063a145832a146100d8575b600080fd5b6100aa610090366004610314565b600060208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b6100d66100ca366004610390565b50505050505050505050565b005b6100d66100e6366004610390565b610111565b6100aa6100f936600461045d565b61020f565b6100d661010c36600461049f565b61027d565b85600881901b6101228160006102e1565b6101815760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b50600061018e8c8c61020f565b336000908152602081815260408083206001600160a01b038916845290915290205490915081146102015760405162461bcd60e51b815260206004820152601b60248201527f4e6f6e6365456e666f726365723a696e76616c69642d6e6f6e636500000000006044820152606401610178565b505050505050505050505050565b60006020821461026c5760405162461bcd60e51b815260206004820152602260248201527f4e6f6e6365456e666f726365723a696e76616c69642d7465726d732d6c656e676044820152610e8d60f31b6064820152608401610178565b61027682846104ba565b9392505050565b6001600160a01b038116600081815260208181526040808320338085529083529281902080546001810190915590518181529093917fe02d340254c92bc3ad96f0fceb790db939e11c669c1f4c8a549d248f17130b33910160405180910390a35050565b6001600160f81b0319828116908216145b92915050565b80356001600160a01b038116811461030f57600080fd5b919050565b6000806040838503121561032757600080fd5b610330836102f8565b915061033e602084016102f8565b90509250929050565b60008083601f84011261035957600080fd5b50813567ffffffffffffffff81111561037157600080fd5b60208301915083602082850101111561038957600080fd5b9250929050565b60008060008060008060008060008060e08b8d0312156103af57600080fd5b8a3567ffffffffffffffff808211156103c757600080fd5b6103d38e838f01610347565b909c509a5060208d01359150808211156103ec57600080fd5b6103f88e838f01610347565b909a50985060408d0135975060608d013591508082111561041857600080fd5b506104258d828e01610347565b90965094505060808b0135925061043e60a08c016102f8565b915061044c60c08c016102f8565b90509295989b9194979a5092959850565b6000806020838503121561047057600080fd5b823567ffffffffffffffff81111561048757600080fd5b61049385828601610347565b90969095509350505050565b6000602082840312156104b157600080fd5b610276826102f8565b803560208310156102f257600019602084900360031b1b169291505056fea26469706673582212205626dd2329dbdfa25ba379781a5be6c8fc6ae0eb3a22e9122f5d8207bb7de74564736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getAllTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"tokens_\",\n        \"type\": \"address[]\",\n        \"internalType\": \"address[]\"\n      },\n      {\n        \"name\": \"periodAmounts_\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"periodDurations_\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"startDates_\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getAvailableAmount\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_args\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"availableAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"isNewPeriod_\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"currentPeriod_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getHashKey\",\n    \"inputs\": [\n      {\n        \"name\": \"_caller\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_token\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_index\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_tokenIndex\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"token_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"periodAmount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"periodDuration_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startDate_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"periodicAllowances\",\n    \"inputs\": [\n      {\n        \"name\": \"hashKey\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"periodAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"periodDuration\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startDate\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"lastTransferPeriod\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"transferredInCurrentPeriod\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TransferredInPeriod\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"periodAmount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"periodDuration\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"startDate\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"transferredInCurrentPeriod\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"transferTimestamp\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceCache\",\n    \"inputs\": [\n      {\n        \"name\": \"hashKey\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"balance\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getHashKey\",\n    \"inputs\": [\n      {\n        \"name\": \"_caller\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"enforceDecrease_\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"recipient_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isLocked\",\n    \"inputs\": [\n      {\n        \"name\": \"hashKey\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"lock\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610824806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5e544921161005b578063b5e5449214610115578063b99deb0e14610135578063d3eddcc51461016d578063ed463367146100c557600080fd5b806332a16f4e1461008d578063414c3e33146100c5578063a145832a146100e1578063a79a0db5146100f4575b600080fd5b6100b061009b366004610568565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100df6100d33660046105e6565b50505050505050505050565b005b6100df6100ef3660046105e6565b610180565b6101076101023660046106b3565b6102c6565b6040519081526020016100bc565b610107610123366004610568565b60006020819052908152604090205481565b6101486101433660046106dd565b6102db565b6040805193151584526001600160a01b039092166020840152908201526060016100bc565b6100df61017b3660046105e6565b6103ad565b85600881901b6001600160f81b03198116156101f15760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b5060006101fe338661052b565b9050600061020c8d8d6102db565b5060008481526001602052604090205490925060ff161590506102885760405162461bcd60e51b815260206004820152602e60248201527f4e617469766542616c616e63654368616e6765456e666f726365723a656e666f60448201526d1c98d95c8b5a5ccb5b1bd8dad95960921b60648201526084016101e8565b6000918252600160208181526040808520805460ff19169093179092558390529091206001600160a01b039091163190555050505050505050505050565b60006102d2838361052b565b90505b92915050565b60008080603584146103485760405162461bcd60e51b815260206004820152603060248201527f4e617469766542616c616e63654368616e6765456e666f726365723a696e766160448201526f0d8d2c85ae8cae4dae65ad8cadccee8d60831b60648201526084016101e8565b8484600081811061035b5761035b61071f565b909101356001600160f81b0319161515935061037d9050601560018688610735565b6103869161075f565b60601c91506103988460158188610735565b6103a191610794565b60001c90509250925092565b60008060006103bc8d8d6102db565b92509250925060006103ce338861052b565b6000818152600160205260409020805460ff1916905590508315610482576000818152602081905260409020546104069083906107c8565b836001600160a01b031631101561047d5760405162461bcd60e51b815260206004820152603560248201527f4e617469766542616c616e63654368616e6765456e666f726365723a65786365604482015274656465642d62616c616e63652d646563726561736560581b60648201526084016101e8565b61051b565b60008181526020819052604090205461049c9083906107db565b836001600160a01b031631101561051b5760405162461bcd60e51b815260206004820152603960248201527f4e617469766542616c616e63654368616e6765456e666f726365723a696e737560448201527f6666696369656e742d62616c616e63652d696e6372656173650000000000000060648201526084016101e8565b5050505050505050505050505050565b604080516001600160a01b038416602082015290810182905260009060600160405160208183030381529060405280519060200120905092915050565b60006020828403121561057a57600080fd5b5035919050565b60008083601f84011261059357600080fd5b50813567ffffffffffffffff8111156105ab57600080fd5b6020830191508360208285010111156105c357600080fd5b9250929050565b80356001600160a01b03811681146105e157600080fd5b919050565b60008060008060008060008060008060e08b8d03121561060557600080fd5b8a3567ffffffffffffffff8082111561061d57600080fd5b6106298e838f01610581565b909c509a5060208d013591508082111561064257600080fd5b61064e8e838f01610581565b909a50985060408d0135975060608d013591508082111561066e57600080fd5b5061067b8d828e01610581565b90965094505060808b0135925061069460a08c016105ca565b91506106a260c08c016105ca565b90509295989b9194979a5092959850565b600080604083850312156106c657600080fd5b6106cf836105ca565b946020939093013593505050565b600080602083850312156106f057600080fd5b823567ffffffffffffffff81111561070757600080fd5b61071385828601610581565b90969095509350505050565b634e487b7160e01b600052603260045260246000fd5b6000808585111561074557600080fd5b8386111561075257600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff19813581811691601485101561078c5780818660140360031b1b83161692505b505092915050565b803560208310156102d557600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102d5576102d56107b2565b808201808211156102d5576102d56107b256fea2646970667358221220b33a5c188759ed62e28774f4ab95ff422856e7b7a36f7de87da5f14ed435ece964736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"renounceOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableInvalidOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableUnauthorizedAccount\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220709bae2a6201f60c7dd916d94e8aed6e76d68870a93207bbf209cbf2ce9581c664736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC721Received\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"event\",\n    \"name\": \"Initialized\",\n    \"inputs\": [\n      {\n        \"name\": \"version\",\n        \"type\": \"uint64\",\n        \"indexed\": false,\n        \"internalType\": \"uint64\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidInitialization\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotInitializing\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"acceptOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"pendingOwner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"renounceOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferStarted\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableInvalidOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableUnauthorizedAccount\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"executionData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsExecutionMode\",\n    \"inputs\": [\n      {\n        \"name\": \"mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"paused\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Paused\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Unpaused\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"EnforcedPause\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ExpectedPause\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"allowance_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"spentMap\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"IncreasedSpentMap\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"limit\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"spent\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506105cd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063414c3e33146100675780639dd5d9ab14610083578063a145832a146100bd578063b99deb0e146100d0578063d3eddcc514610067578063ed46336714610067575b600080fd5b6100816100753660046103a7565b50505050505050505050565b005b6100ab610091366004610474565b600060208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b6100816100cb3660046103a7565b6100e3565b6100ab6100de36600461049e565b6102c5565b856100ef8160006102da565b6101405760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b6101518160006102da565b6101ab5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610137565b5060006101b88d8d6102c5565b905060006101c689896102f1565b5050336000908152602081815260408083208c845290915281208054929450909250839183906101f79084906104e0565b92505081905590508281111561026c5760405162461bcd60e51b815260206004820152603460248201527f4e6174697665546f6b656e5472616e73666572416d6f756e74456e666f7263656044820152731c8e985b1b1bddd85b98d94b595e18d95959195960621b6064820152608401610137565b604080518481526020810183905289916001600160a01b0389169133917fc026e493323d526061a052b5dd562495120e2f648797a48be61966d3a6beec8d910160405180910390a4505050505050505050505050505050565b60006102d382840184610501565b9392505050565b6001600160f81b0319828116908216145b92915050565b6000803681610303601482878961051a565b61030c91610544565b60601c935061031f60346014878961051a565b61032891610579565b9250610337856034818961051a565b949793965094505050565b60008083601f84011261035457600080fd5b50813567ffffffffffffffff81111561036c57600080fd5b60208301915083602082850101111561038457600080fd5b9250929050565b80356001600160a01b03811681146103a257600080fd5b919050565b60008060008060008060008060008060e08b8d0312156103c657600080fd5b8a3567ffffffffffffffff808211156103de57600080fd5b6103ea8e838f01610342565b909c509a5060208d013591508082111561040357600080fd5b61040f8e838f01610342565b909a50985060408d0135975060608d013591508082111561042f57600080fd5b5061043c8d828e01610342565b90965094505060808b0135925061045560a08c0161038b565b915061046360c08c0161038b565b90509295989b9194979a5092959850565b6000806040838503121561048757600080fd5b6104908361038b565b946020939093013593505050565b600080602083850312156104b157600080fd5b823567ffffffffffffffff8111156104c857600080fd5b6104d485828601610342565b90969095509350505050565b808201808211156102eb57634e487b7160e01b600052601160045260246000fd5b60006020828403121561051357600080fd5b5035919050565b6000808585111561052a57600080fd5b8386111561053757600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156105715780818660140360031b1b83161692505b505092915050565b803560208310156102eb57600019602084900360031b1b169291505056fea2646970667358221220242bcbb545bdb30c0cc3054c27d7e861e0e03c97037d12e0a3a635b723f4c96064736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d7aca7990ce9da4d7914667722de1ec02253803fb163d86029328ca9bb504b0164736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"fallback\",\n    \"stateMutability\": \"nonpayable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b5061022e806100206000396000f3fe608060405234801561001057600080fd5b50600036606060a0821461004057604080516000602082015201604051602081830303815290604052905061017b565b600061004f6020828587610186565b610058916101b0565b9050600061006a604060208688610186565b610073916101b0565b90506000610085606060408789610186565b61008e916101b0565b905060006100a060806060888a610186565b6100a9916101b0565b905060006100bb60a06080898b610186565b6100c4916101b0565b60405163a1f3128160e01b8152600481018790526024810186905260448101859052606481018490526084810182905290915073__$b8f96b288d4d0429e38b8ed50fd423070f$__9063a1f312819060a401602060405180830381865af4158015610133573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015791906101cf565b60408051911515602083015201604051602081830303815290604052955050505050505b915050805190602001f35b6000808585111561019657600080fd5b838611156101a357600080fd5b5050820193919092039150565b803560208310156101c957600019602084900360031b1b165b92915050565b6000602082840312156101e157600080fd5b815180151581146101f157600080fd5b939250505056fea26469706673582212203dafaa4c8f34ad767d36775120cdf65742956a98b33a9913f2e11f858baf2d9e64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"targetContract_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferEnforced\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"redeemer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506106af806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a36600461049f565b50505050505050505050565b005b61007661008636600461049f565b6100ba565b61009e61009936600461056c565b6101e7565b6040516001600160a01b03909116815260200160405180910390f35b856100c6816000610252565b6101175760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b610128816000610252565b6101825760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b606482015260840161010e565b5060006101918d8d8a8a610269565b6040516001600160a01b038083168252919250879186169033907f0f026cada0b544ae1cc47ac006f1f4c3d7e94832af22aa0065351de49f9284d79060200160405180910390a450505050505050505050505050565b60006014821461023e5760405162461bcd60e51b815260206004820152602e602482015260008051602061065a83398151915260448201526d0c85ae8cae4dae65ad8cadccee8d60931b606482015260840161010e565b61024882846105ae565b60601c9392505050565b6001600160f81b0319828116908216145b92915050565b60008036600061027986866103e9565b929550935090915050602481146102db5760405162461bcd60e51b8152602060048201526032602482015260008051602061065a8339815191526044820152710c85acaf0cac6eae8d2dedc5ad8cadccee8d60731b606482015260840161010e565b60006102ea60048284866105e3565b6102f39161060d565b90506001600160e01b0319811663f2fde38b60e01b146103545760405162461bcd60e51b8152602060048201526028602482015260008051602061065a833981519152604482015267190b5b595d1a1bd960c21b606482015260840161010e565b60006103608a8a6101e7565b9050846001600160a01b0316816001600160a01b0316146103c45760405162461bcd60e51b815260206004820152602a602482015260008051602061065a833981519152604482015269190b58dbdb9d1c9858dd60b21b606482015260840161010e565b6103d26024600485876105e3565b6103db9161063b565b9a9950505050505050505050565b60008036816103fb60148287896105e3565b610404916105ae565b60601c93506104176034601487896105e3565b6104209161063b565b925061042f85603481896105e3565b949793965094505050565b60008083601f84011261044c57600080fd5b50813567ffffffffffffffff81111561046457600080fd5b60208301915083602082850101111561047c57600080fd5b9250929050565b80356001600160a01b038116811461049a57600080fd5b919050565b60008060008060008060008060008060e08b8d0312156104be57600080fd5b8a3567ffffffffffffffff808211156104d657600080fd5b6104e28e838f0161043a565b909c509a5060208d01359150808211156104fb57600080fd5b6105078e838f0161043a565b909a50985060408d0135975060608d013591508082111561052757600080fd5b506105348d828e0161043a565b90965094505060808b0135925061054d60a08c01610483565b915061055b60c08c01610483565b90509295989b9194979a5092959850565b6000806020838503121561057f57600080fd5b823567ffffffffffffffff81111561059657600080fd5b6105a28582860161043a565b90969095509350505050565b6bffffffffffffffffffffffff1981358181169160148510156105db5780818660140360031b1b83161692505b505092915050565b600080858511156105f357600080fd5b8386111561060057600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156105db5760049490940360031b84901b1690921692915050565b8035602083101561026357600019602084900360031b1b169291505056fe4f776e6572736869705472616e73666572456e666f726365723a696e76616c69a2646970667358221220ca5ae6d7f1b90ba5d22d1aa6d07431cba5451fcdcfda2c53ba5014e9bf6c30cc64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"error\",\n    \"name\": \"SafeERC20FailedDecreaseAllowance\",\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"currentAllowance\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"requestedDecrease\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SafeERC20FailedOperation\",\n    \"inputs\": [\n      {\n        \"name\": \"token\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088a0aa059cfc49869da70b79266115a887b85b6bf4a5e84a430f64ac0e13ee7c64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"createSender\",\n    \"inputs\": [\n      {\n        \"name\": \"initCode\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561000f575f80fd5b506101e28061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063570e1a361461002d575b5f80fd5b61004061003b3660046100e4565b61005c565b6040516001600160a01b03909116815260200160405180910390f35b5f8061006b6014828587610150565b61007491610177565b60601c90505f6100878460148188610150565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92018290525084519495509360209350849250905082850182875af190505f519350806100db575f93505b50505092915050565b5f80602083850312156100f5575f80fd5b823567ffffffffffffffff8082111561010c575f80fd5b818501915085601f83011261011f575f80fd5b81358181111561012d575f80fd5b86602082850101111561013e575f80fd5b60209290920196919550909350505050565b5f808585111561015e575f80fd5b8386111561016a575f80fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156101a45780818660140360031b1b83161692505b50509291505056fea264697066735822122078c1aaa9f040f8c523cf2b642dd06415593eec30d2e75021458af7e0c704e6fb64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"error\",\n    \"name\": \"ReentrancyGuardReentrantCall\",\n    \"inputs\": []\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"error\",\n    \"name\": \"SafeCastOverflowedIntDowncast\",\n    \"inputs\": [\n      {\n        \"name\": \"bits\",\n        \"type\": \"uint8\",\n        \"internalType\": \"uint8\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"int256\",\n        \"internalType\": \"int256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SafeCastOverflowedIntToUint\",\n    \"inputs\": [\n      {\n        \"name\": \"value\",\n        \"type\": \"int256\",\n        \"internalType\": \"int256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SafeCastOverflowedUintDowncast\",\n    \"inputs\": [\n      {\n        \"name\": \"bits\",\n        \"type\": \"uint8\",\n        \"internalType\": \"uint8\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SafeCastOverflowedUintToInt\",\n    \"inputs\": [\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061ebdeb3510df44a7d9170525bd3fc61f93c656e67274c3f3b4aa33ec92dc13864736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d65f4321e18e96a0e0a3e6a8d19e56735de368638fd48b184c923bf46a5170f64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidShortString\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"StringTooLong\",\n    \"inputs\": [\n      {\n        \"name\": \"str\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088910c5f67a05f7b05fc7425f62972b57385080dd0be1e4dea1ea74435bca86f64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"computeAddress\",\n    \"inputs\": [\n      {\n        \"name\": \"_bytecodeHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"addr_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"deploy\",\n    \"inputs\": [\n      {\n        \"name\": \"_bytecode\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"addr_\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Deployed\",\n    \"inputs\": [\n      {\n        \"name\": \"addr\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"Create2EmptyBytecode\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"Create2FailedDeployment\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"Create2InsufficientBalance\",\n    \"inputs\": [\n      {\n        \"name\": \"balance\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"needed\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"SimpleFactoryEmptyContract\",\n    \"inputs\": [\n      {\n        \"name\": \"deployed\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506102ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063481286e61461003b5780634af63f021461006a575b600080fd5b61004e6100493660046101cc565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e610078366004610204565b610090565b60006100898284610115565b9392505050565b600061009e60008385610122565b9050806001600160a01b03163b6000036100db576040516301e3495560e61b81526001600160a01b03821660048201526024015b60405180910390fd5b6040516001600160a01b038216907ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e90600090a292915050565b60006100898383306101a2565b60008347101561014e5760405163392efb2b60e21b8152476004820152602481018590526044016100d2565b815160000361017057604051631328927760e21b815260040160405180910390fd5b8282516020840186f590506001600160a01b03811661008957604051633a0ba96160e11b815260040160405180910390fd5b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b600080604083850312156101df57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561021757600080fd5b823567ffffffffffffffff8082111561022f57600080fd5b818501915085601f83011261024357600080fd5b813581811115610255576102556101ee565b604051601f8201601f19908116603f0116810190838211818310171561027d5761027d6101ee565b8160405282815288602084870101111561029657600080fd5b82602086016020830137600060209382018401529896909101359650505050505056fea264697066735822122060b446de0182f6cf23546703f0e9eb0c1da6c4f00138f5d151474f865157cd3164736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_redeemer\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"allowedRedeemers_\",\n        \"type\": \"address[]\",\n        \"internalType\": \"address[]\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b5061064b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a3660046103ae565b50505050505050505050565b005b6100766100863660046103ae565b6100b4565b61009e61009936600461047b565b6101e8565b6040516100ab91906104bd565b60405180910390f35b85600881901b6100c5816000610332565b6101245760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b5060006101318c8c6101e8565b805190915060005b81811015610183578281815181106101535761015361050a565b60200260200101516001600160a01b0316856001600160a01b03160361017b575050506101db565b600101610139565b5060405162461bcd60e51b815260206004820152602660248201527f52656465656d6572456e666f726365723a756e617574686f72697a65642d72656044820152653232b2b6b2b960d11b606482015260840161011b565b5050505050505050505050565b606060008280158015906102045750610202601482610536565b155b61025e5760405162461bcd60e51b815260206004820152602560248201527f52656465656d6572456e666f726365723a696e76616c69642d7465726d732d6c6044820152640cadccee8d60db1b606482015260840161011b565b610269601482610560565b67ffffffffffffffff81111561028157610281610574565b6040519080825280602002602001820160405280156102aa578160200160208202803683370190505b50925060005b81811015610329578581866102c682601461058a565b926102d39392919061059d565b6102dc916105c7565b60601c8484815181106102f1576102f161050a565b6001600160a01b039092166020928302919091019091015282610313816105fc565b9350610322905060148261058a565b90506102b0565b50505092915050565b6001600160f81b0319828116908216145b92915050565b60008083601f84011261035b57600080fd5b50813567ffffffffffffffff81111561037357600080fd5b60208301915083602082850101111561038b57600080fd5b9250929050565b80356001600160a01b03811681146103a957600080fd5b919050565b60008060008060008060008060008060e08b8d0312156103cd57600080fd5b8a3567ffffffffffffffff808211156103e557600080fd5b6103f18e838f01610349565b909c509a5060208d013591508082111561040a57600080fd5b6104168e838f01610349565b909a50985060408d0135975060608d013591508082111561043657600080fd5b506104438d828e01610349565b90965094505060808b0135925061045c60a08c01610392565b915061046a60c08c01610392565b90509295989b9194979a5092959850565b6000806020838503121561048e57600080fd5b823567ffffffffffffffff8111156104a557600080fd5b6104b185828601610349565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156104fe5783516001600160a01b0316835292840192918401916001016104d9565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261054557610545610520565b500690565b634e487b7160e01b600052601160045260246000fd5b60008261056f5761056f610520565b500490565b634e487b7160e01b600052604160045260246000fd5b808201808211156103435761034361054a565b600080858511156105ad57600080fd5b838611156105ba57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156105f45780818660140360031b1b83161692505b505092915050565b60006001820161060e5761060e61054a565b506001019056fea264697066735822122021c89a0ebcdb2523c453552212243b747d81b7c16f2f3e22d20bb9692240f3a364736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bac814741dd376ccf59547680acabccb0310545d980db81a1b4c6c7f17cdbc164736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_delegator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"termsData_\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct SpecificActionERC20TransferBatchEnforcer.TermsData\",\n        \"components\": [\n          {\n            \"name\": \"tokenAddress\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"recipient\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"amount\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"firstTarget\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"firstCalldata\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"usedDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"used\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"DelegationExecuted\",\n    \"inputs\": [\n      {\n        \"name\": \"delegationManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"delegationHash\",\n        \"type\": \"bytes32\",\n        \"indexed\": true,\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"delegator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b50610ccf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063414c3e3314610067578063a145832a14610083578063b99deb0e14610096578063b9cf5249146100bf578063d3eddcc514610067578063ed46336714610067575b600080fd5b610081610075366004610958565b50505050505050505050565b005b610081610091366004610958565b6100fa565b6100a96100a4366004610a25565b6106ce565b6040516100b69190610a67565b60405180910390f35b6100ea6100cd366004610af5565b600060208181529281526040808220909352908152205460ff1681565b60405190151581526020016100b6565b8561010981600160f81b610843565b61015a5760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b61016b816000610843565b6101c55760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610151565b503360009081526020818152604080832088845290915290205460ff1615610245576040805162461bcd60e51b8152602060048201526024810191909152600080516020610c7a83398151915260448201527f456e666f726365723a64656c65676174696f6e2d616c72656164792d757365646064820152608401610151565b336000908152602081815260408083208884529091528120805460ff191660011790553690610274898961085a565b9092509050600281146102dd5760405162461bcd60e51b815260206004820152603b6024820152600080516020610c7a83398151915260448201527f456e666f726365723a696e76616c69642d62617463682d73697a6500000000006064820152608401610151565b60006102e98f8f6106ce565b905080606001516001600160a01b03168383600081811061030c5761030c610b1f565b905060200281019061031e9190610b35565b61032c906020810190610b55565b6001600160a01b031614158061036957508282600081811061035057610350610b1f565b90506020028101906103629190610b35565b6020013515155b806103c757508060800151805190602001208383600081811061038e5761038e610b1f565b90506020028101906103a09190610b35565b6103ae906040810190610b77565b6040516103bc929190610bbe565b604051809103902014155b156104335760405162461bcd60e51b81526020600482015260426024820152600080516020610c7a83398151915260448201527f456e666f726365723a696e76616c69642d66697273742d7472616e736163746960648201526137b760f11b608482015260a401610151565b80516001600160a01b03168383600181811061045157610451610b1f565b90506020028101906104639190610b35565b610471906020810190610b55565b6001600160a01b03161415806104ae57508282600181811061049557610495610b1f565b90506020028101906104a79190610b35565b6020013515155b806104ee5750828260018181106104c7576104c7610b1f565b90506020028101906104d99190610b35565b6104e7906040810190610b77565b9050604414155b80610554575063a9059cbb60e01b8383600181811061050f5761050f610b1f565b90506020028101906105219190610b35565b61052f906040810190610b77565b61053e91600491600091610bce565b61054791610bf8565b6001600160e01b03191614155b806105bf575080602001516001600160a01b03168383600181811061057b5761057b610b1f565b905060200281019061058d9190610b35565b61059b906040810190610b77565b6105aa91602491600491610bce565b6105b391610c28565b6001600160a01b031614155b8061061857508060400151838360018181106105dd576105dd610b1f565b90506020028101906105ef9190610b35565b6105fd906040810190610b77565b61060c91604491602491610bce565b61061591610c28565b14155b156106855760405162461bcd60e51b81526020600482015260436024820152600080516020610c7a83398151915260448201527f456e666f726365723a696e76616c69642d7365636f6e642d7472616e7361637460648201526234b7b760e91b608482015260a401610151565b6040516001600160a01b03881690899033907f76f83a16f9924b51c0c3ad67a44af3e517fbdec68ffa3729776df2ac0f03144090600090a4505050505050505050505050505050565b61071b6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160006001600160a01b03168152602001606081525090565b605c8210156107805760405162461bcd60e51b815260206004820152603d6024820152600080516020610c7a83398151915260448201527f456e666f726365723a696e76616c69642d7465726d732d6c656e6774680000006064820152608401610151565b61078e601460008486610bce565b61079791610c46565b60601c81526107aa602860148486610bce565b6107b391610c46565b60601c60208201526107c9604860288486610bce565b6107d291610c28565b60408201526107e5605c60488486610bce565b6107ee91610c46565b606090811c9082015261080482605c8186610bce565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505050608082015292915050565b6001600160f81b0319828116908216145b92915050565b366000833580850160208587010360208201945081359350808460051b8301118360401c17156108925763ba597e7e6000526004601cfd5b83156108e9578392505b6001830392508260051b850135915081850160408101358082018381358201118460408501111782861782351760401c17156108e05763ba597e7e6000526004601cfd5b5050508261089c575b5050509250929050565b60008083601f84011261090557600080fd5b50813567ffffffffffffffff81111561091d57600080fd5b60208301915083602082850101111561093557600080fd5b9250929050565b80356001600160a01b038116811461095357600080fd5b919050565b60008060008060008060008060008060e08b8d03121561097757600080fd5b8a3567ffffffffffffffff8082111561098f57600080fd5b61099b8e838f016108f3565b909c509a5060208d01359150808211156109b457600080fd5b6109c08e838f016108f3565b909a50985060408d0135975060608d01359150808211156109e057600080fd5b506109ed8d828e016108f3565b90965094505060808b01359250610a0660a08c0161093c565b9150610a1460c08c0161093c565b90509295989b9194979a5092959850565b60008060208385031215610a3857600080fd5b823567ffffffffffffffff811115610a4f57600080fd5b610a5b858286016108f3565b90969095509350505050565b6000602080835260018060a01b038085511660208501528060208601511660408501526040850151606085015280606086015116608085015250608084015160a08085015280518060c086015260005b81811015610ad35782810184015186820160e001528301610ab7565b50600060e0828701015260e0601f19601f830116860101935050505092915050565b60008060408385031215610b0857600080fd5b610b118361093c565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e19833603018112610b4b57600080fd5b9190910192915050565b600060208284031215610b6757600080fd5b610b708261093c565b9392505050565b6000808335601e19843603018112610b8e57600080fd5b83018035915067ffffffffffffffff821115610ba957600080fd5b60200191503681900382131561093557600080fd5b8183823760009101908152919050565b60008085851115610bde57600080fd5b83861115610beb57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015610c205780818660040360031b1b83161692505b505092915050565b8035602083101561085457600019602084900360031b1b1692915050565b6bffffffffffffffffffffffff198135818116916014851015610c205760149490940360031b84901b169092169291505056fe5370656369666963416374696f6e45524332305472616e736665724261746368a2646970667358221220e8d1de6d5cca88243b7e7a1d3b3a1ae6b1a75dad78f305486212fafaf9e3ca5264736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"receive\",\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addStake\",\n    \"inputs\": [\n      {\n        \"name\": \"unstakeDelaySec\",\n        \"type\": \"uint32\",\n        \"internalType\": \"uint32\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"depositTo\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"deposits\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"deposit\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"staked\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      },\n      {\n        \"name\": \"stake\",\n        \"type\": \"uint112\",\n        \"internalType\": \"uint112\"\n      },\n      {\n        \"name\": \"unstakeDelaySec\",\n        \"type\": \"uint32\",\n        \"internalType\": \"uint32\"\n      },\n      {\n        \"name\": \"withdrawTime\",\n        \"type\": \"uint48\",\n        \"internalType\": \"uint48\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDepositInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"info\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct IStakeManager.DepositInfo\",\n        \"components\": [\n          {\n            \"name\": \"deposit\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"staked\",\n            \"type\": \"bool\",\n            \"internalType\": \"bool\"\n          },\n          {\n            \"name\": \"stake\",\n            \"type\": \"uint112\",\n            \"internalType\": \"uint112\"\n          },\n          {\n            \"name\": \"unstakeDelaySec\",\n            \"type\": \"uint32\",\n            \"internalType\": \"uint32\"\n          },\n          {\n            \"name\": \"withdrawTime\",\n            \"type\": \"uint48\",\n            \"internalType\": \"uint48\"\n          }\n        ]\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"unlockStake\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawStake\",\n    \"inputs\": [\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawTo\",\n    \"inputs\": [\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      },\n      {\n        \"name\": \"withdrawAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Deposited\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"totalDeposit\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeLocked\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"totalStaked\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"unstakeDelaySec\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeUnlocked\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawTime\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"StakeWithdrawn\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Withdrawn\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"withdrawAddress\",\n        \"type\": \"address\",\n        \"indexed\": false,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"error\",\n    \"name\": \"StringsInsufficientHexLength\",\n    \"inputs\": [\n      {\n        \"name\": \"value\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"length\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ce1bfc0cd5aac1e748b751339a93cc065f5fd20fd73be10a7844adf26543eb8164736f6c63430008170033\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122089188054053227534294662d666312081d2f72553264bdfc0ce4a353c15e0f6364736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"proxiableUUID\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCallData\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"pure\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"value_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506104f8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a366004610336565b50505050505050505050565b005b610076610086366004610336565b6100b0565b61009e610099366004610403565b6101f8565b60405190815260200160405180910390f35b856100bc816000610269565b61010d5760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b61011e816000610269565b6101785760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610104565b5060006101858888610280565b505091505060006101968e8e6101f8565b9050808211156101e85760405162461bcd60e51b815260206004820152601f60248201527f56616c75654c7465456e666f726365723a76616c75652d746f6f2d68696768006044820152606401610104565b5050505050505050505050505050565b6000602082146102585760405162461bcd60e51b815260206004820152602560248201527f56616c75654c7465456e666f726365723a696e76616c69642d7465726d732d6c6044820152640cadccee8d60db1b6064820152608401610104565b6102628284610445565b9392505050565b6001600160f81b0319828116908216145b92915050565b60008036816102926014828789610463565b61029b9161048d565b60601c93506102ae603460148789610463565b6102b791610445565b92506102c68560348189610463565b949793965094505050565b60008083601f8401126102e357600080fd5b50813567ffffffffffffffff8111156102fb57600080fd5b60208301915083602082850101111561031357600080fd5b9250929050565b80356001600160a01b038116811461033157600080fd5b919050565b60008060008060008060008060008060e08b8d03121561035557600080fd5b8a3567ffffffffffffffff8082111561036d57600080fd5b6103798e838f016102d1565b909c509a5060208d013591508082111561039257600080fd5b61039e8e838f016102d1565b909a50985060408d0135975060608d01359150808211156103be57600080fd5b506103cb8d828e016102d1565b90965094505060808b013592506103e460a08c0161031a565b91506103f260c08c0161031a565b90509295989b9194979a5092959850565b6000806020838503121561041657600080fd5b823567ffffffffffffffff81111561042d57600080fd5b610439858286016102d1565b90969095509350505050565b8035602083101561027a57600019602084900360031b1b1692915050565b6000808585111561047357600080fd5b8386111561048057600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156104ba5780818660140360031b1b83161692505b50509291505056fea26469706673582212201b32f956e1bfeecade9436bbfc83066c0610b5679c49ae7d06d58eaeb4e24ff564736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"PAYMASTER_DATA_OFFSET\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"PAYMASTER_POSTOP_GAS_OFFSET\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"PAYMASTER_VALIDATION_GAS_OFFSET\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x60a7610034600b8282823980515f1a60731461002857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106046575f3560e01c806325093e1b14604a578063b29a8ff4146063578063ede3150214606a575b5f80fd5b6051602481565b60405190815260200160405180910390f35b6051601481565b605160348156fea2646970667358221220e3e47e9c438ff94c86dca42d7dcd69637923bbba71e55fc90068fd2fbb4991dc64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"UPGRADE_INTERFACE_VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"proxiableUUID\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"upgradeToAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"newImplementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Upgraded\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressEmptyCode\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967InvalidImplementation\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967NonPayable\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedInnerCall\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UUPSUnauthorizedCallContext\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UUPSUnsupportedProxiableUUID\",\n    \"inputs\": [\n      {\n        \"name\": \"slot\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"afterAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"afterHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeAllHook\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"beforeHook\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTermsInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"_terms\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"timestampAfterThreshold_\",\n        \"type\": \"uint128\",\n        \"internalType\": \"uint128\"\n      },\n      {\n        \"name\": \"timestampBeforeThreshold_\",\n        \"type\": \"uint128\",\n        \"internalType\": \"uint128\"\n      }\n    ],\n    \"stateMutability\": \"pure\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x608060405234801561001057600080fd5b506104e7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a36600461033f565b50505050505050505050565b005b61007661008636600461033f565b6100c2565b61009e61009936600461040c565b61023a565b604080516001600160801b0393841681529290911660208301520160405180910390f35b85600881901b6001600160f81b03198116156101335760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b506000806101418d8d61023a565b90925090506001600160801b038216156101b857816001600160801b031642116101b85760405162461bcd60e51b815260206004820152602260248201527f54696d657374616d70456e666f726365723a6561726c792d64656c656761746960448201526137b760f11b606482015260840161012a565b6001600160801b0381161561022b57806001600160801b0316421061022b5760405162461bcd60e51b8152602060048201526024808201527f54696d657374616d70456e666f726365723a657870697265642d64656c6567616044820152633a34b7b760e11b606482015260840161012a565b50505050505050505050505050565b6000806020831461029c5760405162461bcd60e51b815260206004820152602660248201527f54696d657374616d70456e666f726365723a696e76616c69642d7465726d732d6044820152650d8cadccee8d60d31b606482015260840161012a565b6102a9836010818761044e565b6102b291610478565b60801c90506102c560106000858761044e565b6102ce91610478565b60801c91509250929050565b60008083601f8401126102ec57600080fd5b50813567ffffffffffffffff81111561030457600080fd5b60208301915083602082850101111561031c57600080fd5b9250929050565b80356001600160a01b038116811461033a57600080fd5b919050565b60008060008060008060008060008060e08b8d03121561035e57600080fd5b8a3567ffffffffffffffff8082111561037657600080fd5b6103828e838f016102da565b909c509a5060208d013591508082111561039b57600080fd5b6103a78e838f016102da565b909a50985060408d0135975060608d01359150808211156103c757600080fd5b506103d48d828e016102da565b90965094505060808b013592506103ed60a08c01610323565b91506103fb60c08c01610323565b90509295989b9194979a5092959850565b6000806020838503121561041f57600080fd5b823567ffffffffffffffff81111561043657600080fd5b610442858286016102da565b90969095509350505050565b6000808585111561045e57600080fd5b8386111561046b57600080fd5b5050820193919092039150565b6fffffffffffffffffffffffffffffffff1981358181169160108510156104a95780818660100360031b1b83161692505b50509291505056fea2646970667358221220493f1dd46bf21857fc13b6e41e6f29c1c53fbb939ca84fcd1536c7cf1000d18064736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"fallback\",\n    \"stateMutability\": \"payable\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x\" as const;", "export const abi = [] as const;\n\n\nexport const bytecode = \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034801a6b4534dfc9cfe9c8b31e018c344c3329b6bf478762f2158ce5781d2b7a64736f6c63430008170033\" as const;", "export const abi = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationManager\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      },\n      {\n        \"name\": \"_entryPoint\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"receive\",\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"DOMAIN_VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"MAX_NUMBER_OF_SIGNERS\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"NAME\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"PACKED_USER_OP_TYPEHASH\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"UPGRADE_INTERFACE_VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"VERSION\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addDeposit\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addSigner\",\n    \"inputs\": [\n      {\n        \"name\": \"_newSigner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"delegationManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"disableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"eip712Domain\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"fields\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"bytes1\"\n      },\n      {\n        \"name\": \"name\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"version\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"chainId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"verifyingContract\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"salt\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"extensions\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"enableDelegation\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegation\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Delegation\",\n        \"components\": [\n          {\n            \"name\": \"delegate\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"delegator\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"caveats\",\n            \"type\": \"tuple[]\",\n            \"internalType\": \"struct Caveat[]\",\n            \"components\": [\n              {\n                \"name\": \"enforcer\",\n                \"type\": \"address\",\n                \"internalType\": \"address\"\n              },\n              {\n                \"name\": \"terms\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              },\n              {\n                \"name\": \"args\",\n                \"type\": \"bytes\",\n                \"internalType\": \"bytes\"\n              }\n            ]\n          },\n          {\n            \"name\": \"salt\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"entryPoint\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_execution\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct Execution\",\n        \"components\": [\n          {\n            \"name\": \"target\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"value\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"execute\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"executeFromExecutor\",\n    \"inputs\": [\n      {\n        \"name\": \"_mode\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"ModeCode\"\n      },\n      {\n        \"name\": \"_executionCalldata\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"returnData_\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDeposit\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getDomainHash\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getImplementation\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getInitializedVersion\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint64\",\n        \"internalType\": \"uint64\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [\n      {\n        \"name\": \"_key\",\n        \"type\": \"uint192\",\n        \"internalType\": \"uint192\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getNonce\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getPackedUserOperationTypedDataHash\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getSigners\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address[]\",\n        \"internalType\": \"address[]\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getSignersCount\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getThreshold\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"initialize\",\n    \"inputs\": [\n      {\n        \"name\": \"_signers\",\n        \"type\": \"address[]\",\n        \"internalType\": \"address[]\"\n      },\n      {\n        \"name\": \"_threshold\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isDelegationDisabled\",\n    \"inputs\": [\n      {\n        \"name\": \"_delegationHash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isSigner\",\n    \"inputs\": [\n      {\n        \"name\": \"_addr\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isValidSignature\",\n    \"inputs\": [\n      {\n        \"name\": \"_hash\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_signature\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"magicValue_\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155BatchReceived\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256[]\",\n        \"internalType\": \"uint256[]\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC1155Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"onERC721Received\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"proxiableUUID\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"redeemDelegations\",\n    \"inputs\": [\n      {\n        \"name\": \"_permissionContexts\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      },\n      {\n        \"name\": \"_modes\",\n        \"type\": \"bytes32[]\",\n        \"internalType\": \"ModeCode[]\"\n      },\n      {\n        \"name\": \"_executionCallDatas\",\n        \"type\": \"bytes[]\",\n        \"internalType\": \"bytes[]\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"reinitialize\",\n    \"inputs\": [\n      {\n        \"name\": \"_version\",\n        \"type\": \"uint64\",\n        \"internalType\": \"uint64\"\n      },\n      {\n        \"name\": \"_signers\",\n        \"type\": \"address[]\",\n        \"internalType\": \"address[]\"\n      },\n      {\n        \"name\": \"_threshold\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"_clearSigners\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"removeSigner\",\n    \"inputs\": [\n      {\n        \"name\": \"_oldSigner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"replaceSigner\",\n    \"inputs\": [\n      {\n        \"name\": \"_oldSigner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_newSigner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"_interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"updateMultiSigParameters\",\n    \"inputs\": [\n      {\n        \"name\": \"_signers\",\n        \"type\": \"address[]\",\n        \"internalType\": \"address[]\"\n      },\n      {\n        \"name\": \"_threshold\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"_clearSigners\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"updateThreshold\",\n    \"inputs\": [\n      {\n        \"name\": \"_threshold\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"upgradeToAndCall\",\n    \"inputs\": [\n      {\n        \"name\": \"_newImplementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"upgradeToAndCallAndRetainStorage\",\n    \"inputs\": [\n      {\n        \"name\": \"_newImplementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"_data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"validateUserOp\",\n    \"inputs\": [\n      {\n        \"name\": \"_userOp\",\n        \"type\": \"tuple\",\n        \"internalType\": \"struct PackedUserOperation\",\n        \"components\": [\n          {\n            \"name\": \"sender\",\n            \"type\": \"address\",\n            \"internalType\": \"address\"\n          },\n          {\n            \"name\": \"nonce\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"initCode\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"callData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"accountGasLimits\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"preVerificationGas\",\n            \"type\": \"uint256\",\n            \"internalType\": \"uint256\"\n          },\n          {\n            \"name\": \"gasFees\",\n            \"type\": \"bytes32\",\n            \"internalType\": \"bytes32\"\n          },\n          {\n            \"name\": \"paymasterAndData\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          },\n          {\n            \"name\": \"signature\",\n            \"type\": \"bytes\",\n            \"internalType\": \"bytes\"\n          }\n        ]\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"_missingAccountFunds\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"validationData_\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"withdrawDeposit\",\n    \"inputs\": [\n      {\n        \"name\": \"_withdrawAddress\",\n        \"type\": \"address\",\n        \"internalType\": \"address payable\"\n      },\n      {\n        \"name\": \"_withdrawAmount\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"AddedSigner\",\n    \"inputs\": [\n      {\n        \"name\": \"signer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ClearedStorage\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EIP712DomainChanged\",\n    \"inputs\": [],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Initialized\",\n    \"inputs\": [\n      {\n        \"name\": \"version\",\n        \"type\": \"uint64\",\n        \"indexed\": false,\n        \"internalType\": \"uint64\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"RemovedSigner\",\n    \"inputs\": [\n      {\n        \"name\": \"signer\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ReplacedSigner\",\n    \"inputs\": [\n      {\n        \"name\": \"oldSigner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newSigner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SentPrefund\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"success\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetDelegationManager\",\n    \"inputs\": [\n      {\n        \"name\": \"newDelegationManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IDelegationManager\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"SetEntryPoint\",\n    \"inputs\": [\n      {\n        \"name\": \"entryPoint\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"contract IEntryPoint\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TryExecuteUnsuccessful\",\n    \"inputs\": [\n      {\n        \"name\": \"batchExecutionindex\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"result\",\n        \"type\": \"bytes\",\n        \"indexed\": false,\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"UpdatedThreshold\",\n    \"inputs\": [\n      {\n        \"name\": \"threshold\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Upgraded\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AddressEmptyCode\",\n    \"inputs\": [\n      {\n        \"name\": \"target\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"AlreadyASigner\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignature\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureLength\",\n    \"inputs\": [\n      {\n        \"name\": \"length\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ECDSAInvalidSignatureS\",\n    \"inputs\": [\n      {\n        \"name\": \"s\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967InvalidImplementation\",\n    \"inputs\": [\n      {\n        \"name\": \"implementation\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC1967NonPayable\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ExecutionFailed\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"FailedInnerCall\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InsufficientSigners\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidInitialization\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidShortString\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidSignerAddress\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"InvalidThreshold\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotASigner\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotDelegationManager\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPoint\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotEntryPointOrSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotInitializing\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"NotSelf\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"StringTooLong\",\n    \"inputs\": [\n      {\n        \"name\": \"str\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"TooManySigners\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UUPSUnauthorizedCallContext\",\n    \"inputs\": []\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UUPSUnsupportedProxiableUUID\",\n    \"inputs\": [\n      {\n        \"name\": \"slot\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedCallType\",\n    \"inputs\": [\n      {\n        \"name\": \"callType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"CallType\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"UnsupportedExecType\",\n    \"inputs\": [\n      {\n        \"name\": \"execType\",\n        \"type\": \"bytes1\",\n        \"internalType\": \"ExecType\"\n      }\n    ]\n  }\n] as const;\n\n\nexport const bytecode = \"\" as const;", "export const abi = [\n  {\n    \"type\": \"function\",\n    \"name\": \"verify\",\n    \"inputs\": [\n      {\n        \"name\": \"message\",\n        \"type\": \"bytes32\",\n        \"internalType\": \"bytes32\"\n      },\n      {\n        \"name\": \"r\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"s\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"qx\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"qy\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  }\n] as const;\n\n\nexport const bytecode = \"0x610c9761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063a1f312811461003a575b600080fd5b61004d610048366004610bf0565b610061565b604051901515815260200160405180910390f35b600084158061007e5750600080516020610c428339815191528510155b80610087575083155b806100a05750600080516020610c428339815191528410155b156100ad5750600061020a565b6100fe600160601b63ffffffff60c01b03196bfffffffffffffffffffffffd63ffffffff60c01b03197f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b8686610213565b151560000361010f5750600061020a565b600061011a856102be565b90506000600080516020610c4283398151915282890990506000600080516020610c42833981519152838909905060006040518060c00160405280888152602001878152602001600160601b63ffffffff60c01b031981526020016bfffffffffffffffffffffffd63ffffffff60c01b031981526020017f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c29681526020017f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5815250905060006101ea828585610337565b509050600080516020610c428339815191528a8103820815955050505050505b95945050505050565b600082158015610221575081155b8061022c5750858310155b806102375750858210155b156102445750600061020a565b6000868061025457610254610c2b565b83840990506000878061026957610269610c2b565b888061027757610277610c2b565b888709898061028857610288610c2b565b878b8061029757610297610c2b565b898a090908905087806102ac576102ac610c2b565b86820891909114979650505050505050565b600060405160208152602080820152602060408201528260608201527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f6080820152600080516020610c4283398151915260a082015260208160c0836005600019fa610330576107fe60405260206040fd5b5192915050565b600080600160ff1b8415801561034b575083155b1561035d576000809250925050610be8565b60008061080060405101604052604088015161082060405101526108206040510151610466565b6000806000808886600209898182098a8188098b82840992508b8c8d8c8d098f098d8e8b8c096003090895508b8b840993508b8a830994508b8c8260028f03098d8889090896508b8c828e03890887099150508a818c8a8509089450505082890392509650965096509692505050565b9086039086828186890908955086818803888588090894506000806000808a898a0993508a89850992508a84880991508a83890990508a84860996508a8b8860028e03098c858e038e8e8f09080893508a8a8c868e038a080994508a8b84880986089250975097509750979350505050565b60a0898101516080808c01516040519182015291820152600160c0820181905260e0909101526104a760608a01518260018060a08e015160808f0151610384565b95509350955095506104d683838789610100604051019081526020810191909152604081019190915260600152565b6104ed8160a08b015160808c015186868a8c6103f4565b955093509550955061051c83838789610180604051019081526020810191909152604081019190915260600152565b61054c60018060208c015160008d0151610200604051019081526020810191909152604081019190915260600152565b6080890151955060a089015194506105728160208b015160008c01516001808a8c6103f4565b95509350955095506105a183838789610280604051019081526020810191909152604081019190915260600152565b6105b88160a08b015160808c015186868a8c6103f4565b95509350955095506105e783838789610300604051019081526020810191909152604081019190915260600152565b6105fe8160a08b015160808c015186868a8c6103f4565b955093509550955061062d83838789610380604051019081526020810191909152604081019190915260600152565b600089015195506020890151945061064e60608a015182600180898b610384565b955093509550955061067d83838789610400604051019081526020810191909152604081019190915260600152565b6106948160a08b015160808c015186868a8c6103f4565b95509350955095506106c383838789610480604051019081526020810191909152604081019190915260600152565b6106da8160a08b015160808c015186868a8c6103f4565b955093509550955061070983838789610500604051019081526020810191909152604081019190915260600152565b6107208160a08b015160808c015186868a8c6103f4565b955093509550955061074f83838789610580604051019081526020810191909152604081019190915260600152565b6104006040510151955061042060405101519450610440604051015191506104606040510151925061078e8160208b015160008c015186868a8c6103f4565b95509350955095506107bd83838789610600604051019081526020810191909152604081019190915260600152565b6107d48160a08b015160808c015186868a8c6103f4565b955093509550955061080383838789610680604051019081526020810191909152604081019190915260600152565b61081a8160a08b015160808c015186868a8c6103f4565b955093509550955061084983838789610700604051019081526020810191909152604081019190915260600152565b6108608160a08b015160808c015186868a8c6103f4565b95509350955095505061089082828688610780604051019081526020810191909152604081019190915260600152565b600091505b816108d5578286161560010360031b8360011c87161560010360021b018388161560010360011b8460011c891615600103010191508260021c9250610895565b506040805160079290921b82018051602082015192820151606090920151610820850151919750929550919290915b8415610b7d5780866002098181820982818a09838284099250838487880960608f015109848186878e8f09600309089050848885099750848784099650600285039a508485838d0986838409089a5084858387038d088209925050508281848a850908830397508291508790506002098181820982818a09838284099250838487880960608f015109848186878e8f09600309089050848885099750848784099650600285039a508485838d0986838409089a5084858387038d088209925050508281848a850908975050508488161560010360031b8560011c89161560010360021b01858a161560010360011b8660011c8b1615600103010180610a0d575094850394610b72565b60071b828101805160609091015161086085015284610a48579083016020810151604082015160609092015192995097509094509250610b72565b82836108608601518a09848885602001880151090861084085015290830160400151908280838b0984038487840908610840850151610b005780610b005783896002860309925083838409905083818b09610840860152838184099250838487880960608f0151099150838285868d8e09600309089150838784099650838682099550838461084087015160028703098584850908995083848b8603610840880151088309905083848a850982089850505050610b72565b83818209915083818309905083838584890909955083838b0992508361086086015185838a09099650838485846002880309850985838703876108408a01516108408b01510908089950838284099150838482866108608901518d090985610840880151878e89038708090898505050505b8460021c9450610904565b61088060408190526108e085905260208082526108a08190526108c08190526001198301610900526109208390529092508260c0816005600019fa610bc8576107ff60405260206040fd5b808251870995508082518409925080838409925080838809965050505050505b935093915050565b600080600080600060a08688031215610c0857600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b600052601260045260246000fdfeffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551a26469706673582212202032a0a92437c4c7498b5f3dbbeea2851a22a8974a563aed836730aa07e1cdda64736f6c63430008170033\" as const;", "import * as read from './read';\n\nexport { read };\n", "import { read as getAvailableAmount } from './methods/getAvailableAmount';\n\nexport { getAvailableAmount };\n", "import { ERC20PeriodTransferEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetAvailableAmountParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationHash: Hex;\n  delegationManager: Address;\n  terms: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationHash,\n  delegationManager,\n  terms,\n}: ReadGetAvailableAmountParameters) => {\n  const [availableAmount, isNewPeriod, currentPeriod] = await readContract(\n    client,\n    {\n      address: contractAddress,\n      abi: ERC20PeriodTransferEnforcer.abi,\n      functionName: 'getAvailableAmount',\n      args: [delegationHash, delegationManager, terms],\n    },\n  );\n\n  return {\n    availableAmount,\n    isNewPeriod,\n    currentPeriod,\n  };\n};\n", "import * as read from './read';\n\nexport { read };\n", "import { read as getAvailableAmount } from './methods/getAvailableAmount';\n\nexport { getAvailableAmount };\n", "import { ERC20StreamingEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract, getBlock } from 'viem/actions';\n\nexport type ReadGetAvailableAmountParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationManager: Address;\n  delegationHash: Hex;\n  terms: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationManager,\n  delegationHash,\n  terms,\n}: ReadGetAvailableAmountParameters) => {\n  // Get current block timestamp from blockchain\n  const currentBlock = await getBlock(client);\n  const currentTimestamp = currentBlock.timestamp;\n\n  // First, get the current state from the contract\n  const allowanceState = await readContract(client, {\n    address: contractAddress,\n    abi: ERC20StreamingEnforcer.abi,\n    functionName: 'streamingAllowances',\n    args: [delegationManager, delegationHash],\n  });\n\n  const [initialAmount, maxAmount, amountPerSecond, startTime, spent] =\n    allowanceState;\n\n  // Check if state exists (startTime != 0)\n  if (startTime !== 0n) {\n    // State exists, calculate available amount using the stored state\n    const availableAmount = getAvailableAmount({\n      initialAmount,\n      maxAmount,\n      amountPerSecond,\n      startTime,\n      spent,\n      currentTimestamp,\n    });\n\n    return {\n      availableAmount,\n    };\n  }\n\n  // State doesn't exist, decode terms and simulate with spent = 0\n  const decodedTerms = await readContract(client, {\n    address: contractAddress,\n    abi: ERC20StreamingEnforcer.abi,\n    functionName: 'getTermsInfo',\n    args: [terms],\n  });\n\n  const [\n    ,\n    decodedInitialAmount,\n    decodedMaxAmount,\n    decodedAmountPerSecond,\n    decodedStartTime,\n  ] = decodedTerms;\n\n  // Simulate using decoded terms with spent = 0\n  const availableAmount = getAvailableAmount({\n    initialAmount: decodedInitialAmount,\n    maxAmount: decodedMaxAmount,\n    amountPerSecond: decodedAmountPerSecond,\n    startTime: decodedStartTime,\n    spent: 0n,\n    currentTimestamp,\n  });\n\n  return {\n    availableAmount,\n  };\n};\n\n/**\n * Replicates the internal _getAvailableAmount logic from the smart contract.\n *\n * @param allowance - The allowance object containing all parameters.\n * @param allowance.initialAmount - The initial amount available.\n * @param allowance.maxAmount - The maximum amount allowed.\n * @param allowance.amountPerSecond - The amount streamed per second.\n * @param allowance.startTime - The start time of the streaming.\n * @param allowance.spent - The amount already spent.\n * @param allowance.currentTimestamp - The current timestamp.\n * @returns The available amount that can be spent.\n */\nfunction getAvailableAmount(allowance: {\n  initialAmount: bigint;\n  maxAmount: bigint;\n  amountPerSecond: bigint;\n  startTime: bigint;\n  spent: bigint;\n  currentTimestamp: bigint;\n}): bigint {\n  // If current time is before start time, nothing is available\n  if (allowance.currentTimestamp < allowance.startTime) {\n    return 0n;\n  }\n\n  // Calculate elapsed time since start\n  const elapsed = allowance.currentTimestamp - allowance.startTime;\n\n  // Calculate total unlocked amount\n  let unlocked = allowance.initialAmount + allowance.amountPerSecond * elapsed;\n\n  // Cap by max amount\n  if (unlocked > allowance.maxAmount) {\n    unlocked = allowance.maxAmount;\n  }\n\n  // If spent >= unlocked, nothing available\n  if (allowance.spent >= unlocked) {\n    return 0n;\n  }\n\n  // Return available amount\n  return unlocked - allowance.spent;\n}\n", "import * as read from './read';\n\nexport { read };\n", "import { read as getAvailableAmount } from './methods/getAvailableAmount';\n\nexport { getAvailableAmount };\n", "import { MultiTokenPeriodEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetAvailableAmountParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationHash: Hex;\n  delegationManager: Address;\n  terms: Hex;\n  args: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationHash,\n  delegationManager,\n  terms,\n  args,\n}: ReadGetAvailableAmountParameters) => {\n  const [availableAmount, isNewPeriod, currentPeriod] = await readContract(\n    client,\n    {\n      address: contractAddress,\n      abi: MultiTokenPeriodEnforcer.abi,\n      functionName: 'getAvailableAmount',\n      args: [delegationHash, delegationManager, terms, args],\n    },\n  );\n\n  return {\n    availableAmount,\n    isNewPeriod,\n    currentPeriod,\n  };\n};\n", "import * as read from './read';\n\nexport { read };\n", "import { read as getAvailableAmount } from './methods/getAvailableAmount';\n\nexport { getAvailableAmount };\n", "import { NativeTokenPeriodTransferEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetAvailableAmountParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationHash: Hex;\n  delegationManager: Address;\n  terms: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationHash,\n  delegationManager,\n  terms,\n}: ReadGetAvailableAmountParameters) => {\n  const [availableAmount, isNewPeriod, currentPeriod] = await readContract(\n    client,\n    {\n      address: contractAddress,\n      abi: NativeTokenPeriodTransferEnforcer.abi,\n      functionName: 'getAvailableAmount',\n      args: [delegationHash, delegationManager, terms],\n    },\n  );\n\n  return {\n    availableAmount,\n    isNewPeriod,\n    currentPeriod,\n  };\n};\n", "import * as read from './read';\n\nexport { read };\n", "import { read as getAvailableAmount } from './methods/getAvailableAmount';\n\nexport { getAvailableAmount };\n", "import { NativeTokenStreamingEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract, getBlock } from 'viem/actions';\n\nexport type ReadGetAvailableAmountParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationManager: Address;\n  delegationHash: Hex;\n  terms: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationManager,\n  delegationHash,\n  terms,\n}: ReadGetAvailableAmountParameters) => {\n  // Get current block timestamp from blockchain\n  const currentBlock = await getBlock(client);\n  const currentTimestamp = currentBlock.timestamp;\n\n  // First, get the current state from the contract\n  const allowanceState = await readContract(client, {\n    address: contractAddress,\n    abi: NativeTokenStreamingEnforcer.abi,\n    functionName: 'streamingAllowances',\n    args: [delegationManager, delegationHash],\n  });\n\n  const [initialAmount, maxAmount, amountPerSecond, startTime, spent] =\n    allowanceState;\n\n  // Check if state exists (startTime != 0)\n  if (startTime !== 0n) {\n    // State exists, calculate available amount using the stored state\n    const availableAmount = getAvailableAmount({\n      initialAmount,\n      maxAmount,\n      amountPerSecond,\n      startTime,\n      spent,\n      currentTimestamp,\n    });\n\n    return {\n      availableAmount,\n    };\n  }\n\n  // State doesn't exist, decode terms and simulate with spent = 0\n  const decodedTerms = await readContract(client, {\n    address: contractAddress,\n    abi: NativeTokenStreamingEnforcer.abi,\n    functionName: 'getTermsInfo',\n    args: [terms],\n  });\n\n  const [\n    decodedInitialAmount,\n    decodedMaxAmount,\n    decodedAmountPerSecond,\n    decodedStartTime,\n  ] = decodedTerms;\n\n  // Simulate using decoded terms with spent = 0\n  const availableAmount = getAvailableAmount({\n    initialAmount: decodedInitialAmount,\n    maxAmount: decodedMaxAmount,\n    amountPerSecond: decodedAmountPerSecond,\n    startTime: decodedStartTime,\n    spent: 0n,\n    currentTimestamp,\n  });\n\n  return {\n    availableAmount,\n  };\n};\n\n/**\n * Replicates the internal _getAvailableAmount logic from the smart contract.\n *\n * @param allowance - The allowance object containing all parameters.\n * @param allowance.initialAmount - The initial amount available.\n * @param allowance.maxAmount - The maximum amount allowed.\n * @param allowance.amountPerSecond - The amount streamed per second.\n * @param allowance.startTime - The start time of the streaming.\n * @param allowance.spent - The amount already spent.\n * @param allowance.currentTimestamp - The current timestamp.\n * @returns The available amount that can be spent.\n */\nfunction getAvailableAmount(allowance: {\n  initialAmount: bigint;\n  maxAmount: bigint;\n  amountPerSecond: bigint;\n  startTime: bigint;\n  spent: bigint;\n  currentTimestamp: bigint;\n}): bigint {\n  // If current time is before start time, nothing is available\n  if (allowance.currentTimestamp < allowance.startTime) {\n    return 0n;\n  }\n\n  // Calculate elapsed time since start\n  const elapsed = allowance.currentTimestamp - allowance.startTime;\n\n  // Calculate total unlocked amount\n  let unlocked = allowance.initialAmount + allowance.amountPerSecond * elapsed;\n\n  // Cap by max amount\n  if (unlocked > allowance.maxAmount) {\n    unlocked = allowance.maxAmount;\n  }\n\n  // If spent >= unlocked, nothing available\n  if (allowance.spent >= unlocked) {\n    return 0n;\n  }\n\n  // Return available amount\n  return unlocked - allowance.spent;\n}\n", "import {\n  type Address,\n  type Hex,\n  encodeAbiParameters,\n  encodePacked,\n} from 'viem';\n\nexport type ExecutionStruct = {\n  target: Address;\n  value: bigint;\n  callData: Hex;\n};\n\nexport type CreateExecutionArgs = {\n  target: Address;\n  value?: bigint;\n  callData?: Hex;\n};\n\n/**\n * Creates an execution data structure.\n * @param args - The arguments for creating an execution.\n * @param args.target - The address to invoke some calldata on.\n * @param args.value - ETH to send to the address.\n * @param args.callData - The calldata to invoke on the address.\n * @returns The created execution data structure.\n */\nexport const createExecution = ({\n  target,\n  value = 0n,\n  callData = '0x',\n}: CreateExecutionArgs): ExecutionStruct => ({\n  target,\n  value,\n  callData,\n});\n\n// Encoded modes\n// https://github.com/erc7579/erc7579-implementation/blob/main/src/lib/ModeLib.sol\nexport enum ExecutionMode {\n  SingleDefault = '0x0000000000000000000000000000000000000000000000000000000000000000',\n  SingleTry = '0x0001000000000000000000000000000000000000000000000000000000000000',\n  BatchDefault = '0x0100000000000000000000000000000000000000000000000000000000000000',\n  BatchTry = '0x0101000000000000000000000000000000000000000000000000000000000000',\n}\n\n/**\n * The ABI type components of an Execution.\n */\nexport const EXECUTION_ABI_TYPE_COMPONENTS = [\n  { type: 'address', name: 'target' },\n  { type: 'uint256', name: 'value' },\n  { type: 'bytes', name: 'callData' },\n];\n\n/**\n * Encodes a single Execution. Used for executing a single Execution in a DeleGator SCA.\n * @param execution - The execution to encode.\n * @returns The encoded execution.\n */\nexport const encodeSingleExecution = (execution: ExecutionStruct): Hex => {\n  return encodePacked(\n    ['address', 'uint256', 'bytes'],\n    [execution.target, execution.value, execution.callData],\n  );\n};\n\n/**\n * Encodes a batch of Executions. Used for executing a batch of Executions in a DeleGator SCA.\n * @param executions - The executions to encode.\n * @returns The encoded executions.\n */\nexport const encodeBatchExecution = (executions: ExecutionStruct[]): Hex => {\n  return encodeAbiParameters(\n    [\n      {\n        components: EXECUTION_ABI_TYPE_COMPONENTS,\n        name: 'executions',\n        type: 'tuple[]',\n      },\n    ],\n    [executions],\n  );\n};\n\n/**\n * Encodes the calldata for interacting with the advanced `execute` DeleGator method.\n * @param executions - The execution(s) to encode.\n * @returns The encoded execution(s).\n */\nexport const encodeExecutionCalldata = (executions: ExecutionStruct[]): Hex => {\n  if (executions.length === 0) {\n    throw new Error(\n      'Error while getting the execution calldatas, executions is empty',\n    );\n  }\n  if (executions.length === 1) {\n    const execution = executions[0];\n    if (!execution) {\n      throw new Error('Execution not found');\n    }\n    return encodeSingleExecution(execution);\n  }\n\n  return encodeBatchExecution(executions);\n};\n\n/**\n * Encodes the calldata for interacting with `redeemDelegations`.\n * @param executionsBatch - The executions to encode.\n * @returns The encoded executions.\n */\nexport const encodeExecutionCalldatas = (\n  executionsBatch: ExecutionStruct[][],\n): Hex[] => {\n  if (executionsBatch.length === 0) {\n    throw new Error(\n      'Error while getting the execution calldatas, executionsBatch is empty',\n    );\n  }\n  return executionsBatch.map(encodeExecutionCalldata);\n};\n", "import { ERC1967Proxy } from '@metamask/delegation-abis';\nimport type { Abi, Address, Client, Hex } from 'viem';\nimport { encodeDeployData } from 'viem';\nimport { getCode } from 'viem/actions';\n\nimport { getProxyImplementation } from './DeleGatorCore/read';\n\n// Where a function signature is duplicated across contracts, we need to narrow\n// the ABI type passed as the `simulateContract` generic argument. Without this,\n// the `simulate()` return type would not match, despite being functionally\n// identical.\nexport type NarrowAbiToFunction<\n  TAbi extends Abi,\n  FunctionName extends string,\n> = [\n  Extract<\n    TAbi[number],\n    {\n      type: 'function';\n      name: FunctionName;\n    }\n  >[],\n];\n\n/**\n * Checks if a contract is deployed at the given address.\n *\n * @param options - The options for checking contract deployment.\n * @param options.client - The client to use for the query.\n * @param options.contractAddress - The address to check for contract deployment.\n * @returns A boolean indicating whether a contract is deployed at the address.\n * @description This function checks if there is actual bytecode at the provided contract address.\n */\nexport async function isContractDeployed({\n  client,\n  contractAddress,\n}: {\n  client: Client;\n  contractAddress: Address;\n}): Promise<boolean> {\n  const code = await getCode(client, {\n    address: contractAddress,\n  });\n  return Boolean(code) && code !== '0x';\n}\n\n/**\n * Checks if a proxy contract at the given address points to the expected implementation.\n *\n * @param options - The options for checking the implementation.\n * @param options.client - The client to use for the query.\n * @param options.contractAddress - The address of the proxy contract.\n * @param options.expectedImplementationAddress - The address that the implementation should match.\n * @returns A boolean indicating whether the implementation matches the expected one.\n * @description This function verifies both that the contract exists and that its implementation address matches.\n */\nexport async function isImplementationExpected({\n  client,\n  contractAddress,\n  expectedImplementationAddress,\n}: {\n  client: Client;\n  contractAddress: Address;\n  expectedImplementationAddress: Address;\n}): Promise<boolean> {\n  if (!(await isContractDeployed({ client, contractAddress }))) {\n    return false;\n  }\n\n  const implementationAddress = await getProxyImplementation({\n    client,\n    contractAddress,\n  });\n\n  return implementationAddress === expectedImplementationAddress;\n}\n\n/**\n * Encodes the \"creation code\" for an ERC1967Proxy contract that will be deployed via CREATE2 with the given implementation and initialization code.\n *\n * @param options - The options for encoding the proxy creation code.\n * @param options.implementationAddress - The address of the implementation contract for the proxy to use.\n * @param options.initcode - The calldata for the initialization function of the implementation contract.\n * @returns The encoded creation code for the proxy.\n * @description This function prepares the deployment bytecode for an ERC1967 proxy pointing to the given implementation.\n */\nexport const encodeProxyCreationCode = ({\n  implementationAddress,\n  initcode,\n}: {\n  implementationAddress: Address;\n  initcode: Hex;\n}): Hex =>\n  encodeDeployData({\n    abi: ERC1967Proxy.abi,\n    args: [implementationAddress, initcode],\n    bytecode: ERC1967Proxy.bytecode,\n  });\n", "import { read as getDelegationManager } from './methods/getDelegationManager';\nimport { read as getDeposit } from './methods/getDeposit';\nimport { read as getEntryPoint } from './methods/getEntryPoint';\nimport { read as getNonce } from './methods/getNonce';\nimport { read as getProxyImplementation } from './methods/getProxyImplementation';\nimport { read as getProxyVersion } from './methods/getProxyVersion';\nimport { read as isValidSignature } from './methods/isValidSignature';\n\nexport {\n  getDelegationManager,\n  getDeposit,\n  getEntryPoint,\n  getNonce,\n  getProxyImplementation,\n  getProxyVersion,\n  isValidSignature,\n};\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetDelegationManagerParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetDelegationManagerParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'delegationManager',\n  });\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetDepositParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetDepositParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'getDeposit',\n  });\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetEntryPointParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetEntryPointParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'entryPoint',\n  });\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetNonceParameters = {\n  client: Client;\n  contractAddress: Address;\n  key?: bigint;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  key,\n}: ReadGetNonceParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'getNonce',\n    args: key ? [key] : undefined,\n  });\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetProxyImplementationParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetProxyImplementationParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'getImplementation',\n  });\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetProxyVersionParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetProxyVersionParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'getInitializedVersion',\n  });\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport type { Address, Hex, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type IsValidSignatureParameters = {\n  client: Client;\n  contractAddress: Address;\n  hash: Hex;\n  signature: Hex;\n};\n\nexport type EncodeIsValidSignatureParameters = {\n  hash: Hex;\n  signature: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  hash,\n  signature,\n}: IsValidSignatureParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'isValidSignature',\n    args: [hash, signature],\n  });\n\nexport const encode = ({\n  hash,\n  signature,\n}: EncodeIsValidSignatureParameters) => {\n  return encodeFunctionData({\n    abi: DeleGatorCore.abi,\n    functionName: 'isValidSignature',\n    args: [hash, signature],\n  });\n};\n", "import { HybridDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { P256Owner, InitializedClient } from '../../types';\n\nexport type EncodeInitializeParameters = {\n  eoaOwner: Address;\n  p256Owners: P256Owner[];\n};\n\nexport type SimulateInitializeParameters = {\n  client: Client;\n  hybridDeleGatorAddress: Address;\n} & EncodeInitializeParameters;\n\nexport type ExecuteInitializeParameters = {\n  client: InitializedClient;\n  hybridDeleGatorAddress: Address;\n} & EncodeInitializeParameters;\n\nexport const simulate = async ({\n  client,\n  hybridDeleGatorAddress,\n  eoaOwner,\n  p256Owners,\n}: SimulateInitializeParameters) => {\n  return simulateContract(client, {\n    address: hybridDeleGatorAddress,\n    abi: HybridDeleGator.abi,\n    functionName: 'initialize',\n    args: [\n      eoaOwner,\n      p256Owners.map((p256Owner) => p256Owner.keyId),\n      p256Owners.map((p256Owner) => p256Owner.x),\n      p256Owners.map((p256Owner) => p256Owner.y),\n    ],\n  });\n};\n\nexport const execute = async ({\n  client,\n  hybridDeleGatorAddress,\n  eoaOwner,\n  p256Owners,\n}: ExecuteInitializeParameters) => {\n  const { request } = await simulate({\n    client,\n    hybridDeleGatorAddress,\n    eoaOwner,\n    p256Owners,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({\n  eoaOwner,\n  p256Owners,\n}: EncodeInitializeParameters) => {\n  return encodeFunctionData({\n    abi: HybridDeleGator.abi,\n    functionName: 'initialize',\n    args: [\n      eoaOwner,\n      p256Owners.map((p256Owner) => p256Owner.keyId),\n      p256Owners.map((p256Owner) => p256Owner.x),\n      p256Owners.map((p256Owner) => p256Owner.y),\n    ],\n  });\n};\n", "import { encode as addKey } from './methods/addKey';\nimport { encode as initializeHybridDeleGator } from './methods/initialize';\nimport { encode as reinitializeHybridDeleGator } from './methods/reinitialize';\nimport { encode as removeKey } from './methods/removeKey';\nimport { encode as updateSigners } from './methods/updateSigners';\n\nexport {\n  addKey,\n  initializeHybridDeleGator,\n  reinitializeHybridDeleGator,\n  removeKey,\n  updateSigners,\n};\n", "import { HybridDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { P256Owner, InitializedClient } from '../../types';\n\nexport type EncodeAddKeyParameters = {\n  p256Owner: P256Owner;\n};\n\nexport type SimulateAddKeyParameters = {\n  client: Client;\n  hybridDeleGatorAddress: Address;\n} & EncodeAddKeyParameters;\n\nexport type ExecuteAddKeyParameters = {\n  client: InitializedClient;\n  hybridDeleGatorAddress: Address;\n} & EncodeAddKeyParameters;\n\nexport const simulate = async ({\n  client,\n  hybridDeleGatorAddress,\n  p256Owner,\n}: SimulateAddKeyParameters) => {\n  return simulateContract(client, {\n    address: hybridDeleGatorAddress,\n    abi: HybridDeleGator.abi,\n    functionName: 'addKey',\n    args: [p256Owner.keyId, p256Owner.x, p256Owner.y],\n  });\n};\n\nexport const execute = async ({\n  client,\n  hybridDeleGatorAddress,\n  p256Owner,\n}: ExecuteAddKeyParameters) => {\n  const { request } = await simulate({\n    client,\n    hybridDeleGatorAddress,\n    p256Owner,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ p256Owner }: EncodeAddKeyParameters) => {\n  return encodeFunctionData({\n    abi: HybridDeleGator.abi,\n    functionName: 'addKey',\n    args: [p256Owner.keyId, p256Owner.x, p256Owner.y],\n  });\n};\n", "import { HybridDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { P256Owner, InitializedClient } from '../../types';\n\nexport type EncodeReinitializeParameters = {\n  version: number;\n  eoaOwner: Address;\n  p256Owners: P256Owner[];\n  removeExistingP256Owners: boolean;\n};\n\nexport type SimulateReinitializeParameters = {\n  client: Client;\n  hybridDeleGatorAddress: Address;\n} & EncodeReinitializeParameters;\n\nexport type ExecuteReinitializeParameters = {\n  client: InitializedClient;\n  hybridDeleGatorAddress: Address;\n} & EncodeReinitializeParameters;\n\nexport const simulate = async ({\n  client,\n  hybridDeleGatorAddress,\n  version,\n  eoaOwner,\n  p256Owners,\n  removeExistingP256Owners,\n}: SimulateReinitializeParameters) => {\n  return simulateContract(client, {\n    address: hybridDeleGatorAddress,\n    abi: HybridDeleGator.abi,\n    functionName: 'reinitialize',\n    args: [\n      version,\n      eoaOwner,\n      p256Owners.map((p256Owner) => p256Owner.keyId),\n      p256Owners.map((p256Owner) => p256Owner.x),\n      p256Owners.map((p256Owner) => p256Owner.y),\n      removeExistingP256Owners,\n    ],\n  });\n};\n\nexport const execute = async ({\n  client,\n  hybridDeleGatorAddress,\n  version,\n  eoaOwner,\n  p256Owners,\n  removeExistingP256Owners,\n}: ExecuteReinitializeParameters) => {\n  const { request } = await simulate({\n    client,\n    hybridDeleGatorAddress,\n    version,\n    eoaOwner,\n    p256Owners,\n    removeExistingP256Owners,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({\n  version,\n  eoaOwner,\n  p256Owners,\n  removeExistingP256Owners,\n}: EncodeReinitializeParameters) => {\n  return encodeFunctionData({\n    abi: HybridDeleGator.abi,\n    functionName: 'reinitialize',\n    args: [\n      version,\n      eoaOwner,\n      p256Owners.map((p256Owner) => p256Owner.keyId),\n      p256Owners.map((p256Owner) => p256Owner.x),\n      p256Owners.map((p256Owner) => p256Owner.y),\n      removeExistingP256Owners,\n    ],\n  });\n};\n", "import { HybridDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type EncodeRemoveKeyParameters = {\n  keyId: string;\n};\n\nexport type SimulateRemoveKeyParameters = {\n  client: Client;\n  hybridDeleGatorAddress: Address;\n} & EncodeRemoveKeyParameters;\n\nexport type ExecuteRemoveKeyParameters = {\n  client: InitializedClient;\n  hybridDeleGatorAddress: Address;\n} & EncodeRemoveKeyParameters;\n\nexport const simulate = async ({\n  client,\n  hybridDeleGatorAddress,\n  keyId,\n}: SimulateRemoveKeyParameters) => {\n  return simulateContract(client, {\n    address: hybridDeleGatorAddress,\n    abi: HybridDeleGator.abi,\n    functionName: 'removeKey',\n    args: [keyId],\n  });\n};\n\nexport const execute = async ({\n  client,\n  hybridDeleGatorAddress,\n  keyId,\n}: ExecuteRemoveKeyParameters) => {\n  const { request } = await simulate({\n    client,\n    hybridDeleGatorAddress,\n    keyId,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ keyId }: EncodeRemoveKeyParameters) => {\n  return encodeFunctionData({\n    abi: HybridDeleGator.abi,\n    functionName: 'removeKey',\n    args: [keyId],\n  });\n};\n", "import { HybridDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { P256Owner, InitializedClient } from '../../types';\n\nexport type EncodeUpdateSignersParameters = {\n  eoaOwner: Address;\n  p256Owners: P256Owner[];\n};\n\nexport type SimulateUpdateSignersParameters = {\n  client: Client;\n  hybridDeleGatorAddress: Address;\n} & EncodeUpdateSignersParameters;\n\nexport type ExecuteUpdateSignersParameters = {\n  client: InitializedClient;\n  hybridDeleGatorAddress: Address;\n} & EncodeUpdateSignersParameters;\n\nexport const simulate = async ({\n  client,\n  hybridDeleGatorAddress,\n  eoaOwner,\n  p256Owners,\n}: SimulateUpdateSignersParameters) => {\n  return simulateContract(client, {\n    address: hybridDeleGatorAddress,\n    abi: HybridDeleGator.abi,\n    functionName: 'updateSigners',\n    args: [\n      eoaOwner,\n      p256Owners.map((p256Owner) => p256Owner.keyId),\n      p256Owners.map((p256Owner) => p256Owner.x),\n      p256Owners.map((p256Owner) => p256Owner.y),\n    ],\n  });\n};\n\nexport const execute = async ({\n  client,\n  hybridDeleGatorAddress,\n  eoaOwner,\n  p256Owners,\n}: ExecuteUpdateSignersParameters) => {\n  const { request } = await simulate({\n    client,\n    hybridDeleGatorAddress,\n    eoaOwner,\n    p256Owners,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({\n  eoaOwner,\n  p256Owners,\n}: EncodeUpdateSignersParameters) => {\n  return encodeFunctionData({\n    abi: HybridDeleGator.abi,\n    functionName: 'updateSigners',\n    args: [\n      eoaOwner,\n      p256Owners.map((p256Owner) => p256Owner.keyId),\n      p256Owners.map((p256Owner) => p256Owner.x),\n      p256Owners.map((p256Owner) => p256Owner.y),\n    ],\n  });\n};\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type EncodeInitializeParameters = {\n  owners: Address[];\n  threshold: bigint;\n};\n\nexport type SimulateInitializeParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n} & EncodeInitializeParameters;\n\nexport type ExecuteInitializeParameters = {\n  client: InitializedClient;\n  multiSigDeleGatorAddress: Address;\n} & EncodeInitializeParameters;\n\nexport const simulate = async ({\n  client,\n  multiSigDeleGatorAddress,\n  owners,\n  threshold,\n}: SimulateInitializeParameters) => {\n  return simulateContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'initialize',\n    args: [owners, threshold],\n  });\n};\n\nexport const execute = async ({\n  client,\n  multiSigDeleGatorAddress,\n  owners,\n  threshold,\n}: ExecuteInitializeParameters) => {\n  const { request } = await simulate({\n    client,\n    multiSigDeleGatorAddress,\n    owners,\n    threshold,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ owners, threshold }: EncodeInitializeParameters) => {\n  return encodeFunctionData({\n    abi: MultiSigDeleGator.abi,\n    functionName: 'initialize',\n    args: [owners, threshold],\n  });\n};\n", "import { encode as addSigner } from './methods/addSigner';\nimport { encode as initializeMultiSigDeleGator } from './methods/initialize';\nimport { encode as reinitializeMultiSigDeleGator } from './methods/reinitialize';\nimport { encode as removeSigner } from './methods/removeSigner';\nimport { encode as replaceSigner } from './methods/replaceSigner';\nimport { encode as updateMultiSigParameters } from './methods/updateMultiSigParameters';\nimport { encode as updateThreshold } from './methods/updateThreshold';\n\nexport {\n  addSigner,\n  initializeMultiSigDeleGator,\n  reinitializeMultiSigDeleGator,\n  removeSigner,\n  replaceSigner,\n  updateThreshold,\n  updateMultiSigParameters,\n};\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type EncodeAddSignerParameters = {\n  signer: Address;\n};\n\nexport type SimulateAddSignerParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n} & EncodeAddSignerParameters;\n\nexport type ExecuteAddSignerParameters = {\n  client: InitializedClient;\n  multiSigDeleGatorAddress: Address;\n} & EncodeAddSignerParameters;\n\nexport const simulate = async ({\n  client,\n  multiSigDeleGatorAddress,\n  signer,\n}: SimulateAddSignerParameters) => {\n  return simulateContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'addSigner',\n    args: [signer],\n  });\n};\n\nexport const execute = async ({\n  client,\n  multiSigDeleGatorAddress,\n  signer,\n}: ExecuteAddSignerParameters) => {\n  const { request } = await simulate({\n    client,\n    multiSigDeleGatorAddress,\n    signer,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ signer }: EncodeAddSignerParameters) => {\n  return encodeFunctionData({\n    abi: MultiSigDeleGator.abi,\n    functionName: 'addSigner',\n    args: [signer],\n  });\n};\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type EncodeReinitializeParameters = {\n  version: bigint;\n  owners: Address[];\n  threshold: bigint;\n  removeExistingOwners: boolean;\n};\n\nexport type SimulateReinitializeParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n} & EncodeReinitializeParameters;\n\nexport type ExecuteReinitializeParameters = {\n  client: InitializedClient;\n  multiSigDeleGatorAddress: Address;\n} & EncodeReinitializeParameters;\n\nexport const simulate = async ({\n  client,\n  multiSigDeleGatorAddress,\n  version,\n  owners,\n  threshold,\n  removeExistingOwners,\n}: SimulateReinitializeParameters) => {\n  return simulateContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'reinitialize',\n    args: [version, owners, threshold, removeExistingOwners],\n  });\n};\n\nexport const execute = async ({\n  client,\n  multiSigDeleGatorAddress,\n  version,\n  owners,\n  threshold,\n  removeExistingOwners,\n}: ExecuteReinitializeParameters) => {\n  const { request } = await simulate({\n    client,\n    multiSigDeleGatorAddress,\n    version,\n    owners,\n    threshold,\n    removeExistingOwners,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({\n  version,\n  owners,\n  threshold,\n  removeExistingOwners,\n}: EncodeReinitializeParameters) => {\n  return encodeFunctionData({\n    abi: MultiSigDeleGator.abi,\n    functionName: 'reinitialize',\n    args: [version, owners, threshold, removeExistingOwners],\n  });\n};\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type EncodeRemoveSignerParameters = {\n  signer: Address;\n};\n\nexport type SimulateRemoveSignerParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n} & EncodeRemoveSignerParameters;\n\nexport type ExecuteRemoveSignerParameters = {\n  client: InitializedClient;\n  multiSigDeleGatorAddress: Address;\n} & EncodeRemoveSignerParameters;\n\nexport const simulate = async ({\n  client,\n  multiSigDeleGatorAddress,\n  signer,\n}: SimulateRemoveSignerParameters) => {\n  return simulateContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'removeSigner',\n    args: [signer],\n  });\n};\n\nexport const execute = async ({\n  client,\n  multiSigDeleGatorAddress,\n  signer,\n}: ExecuteRemoveSignerParameters) => {\n  const { request } = await simulate({\n    client,\n    multiSigDeleGatorAddress,\n    signer,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ signer }: EncodeRemoveSignerParameters) => {\n  return encodeFunctionData({\n    abi: MultiSigDeleGator.abi,\n    functionName: 'removeSigner',\n    args: [signer],\n  });\n};\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type EncodeReplaceSignerParameters = {\n  oldSigner: Address;\n  newSigner: Address;\n};\n\nexport type SimulateReplaceSignerParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n} & EncodeReplaceSignerParameters;\n\nexport type ExecuteReplaceSignerParameters = {\n  client: InitializedClient;\n  multiSigDeleGatorAddress: Address;\n} & EncodeReplaceSignerParameters;\n\nexport const simulate = async ({\n  client,\n  multiSigDeleGatorAddress,\n  oldSigner,\n  newSigner,\n}: SimulateReplaceSignerParameters) => {\n  return simulateContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'replaceSigner',\n    args: [oldSigner, newSigner],\n  });\n};\n\nexport const execute = async ({\n  client,\n  multiSigDeleGatorAddress,\n  oldSigner,\n  newSigner,\n}: ExecuteReplaceSignerParameters) => {\n  const { request } = await simulate({\n    client,\n    multiSigDeleGatorAddress,\n    oldSigner,\n    newSigner,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({\n  oldSigner,\n  newSigner,\n}: EncodeReplaceSignerParameters) => {\n  return encodeFunctionData({\n    abi: MultiSigDeleGator.abi,\n    functionName: 'replaceSigner',\n    args: [oldSigner, newSigner],\n  });\n};\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type EncodeUpdateMultiSigParametersParameters = {\n  owners: Address[];\n  threshold: bigint;\n  removeExistingOwners: boolean;\n};\n\nexport type SimulateUpdateMultiSigParametersParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n} & EncodeUpdateMultiSigParametersParameters;\n\nexport type ExecuteUpdateMultiSigParametersParameters = {\n  client: InitializedClient;\n  multiSigDeleGatorAddress: Address;\n} & EncodeUpdateMultiSigParametersParameters;\n\nexport const simulate = async ({\n  client,\n  multiSigDeleGatorAddress,\n  owners,\n  threshold,\n  removeExistingOwners,\n}: SimulateUpdateMultiSigParametersParameters) => {\n  return simulateContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'updateMultiSigParameters',\n    args: [owners, threshold, removeExistingOwners],\n  });\n};\n\nexport const execute = async ({\n  client,\n  multiSigDeleGatorAddress,\n  owners,\n  threshold,\n  removeExistingOwners,\n}: ExecuteUpdateMultiSigParametersParameters) => {\n  const { request } = await simulate({\n    client,\n    multiSigDeleGatorAddress,\n    owners,\n    threshold,\n    removeExistingOwners,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({\n  owners,\n  threshold,\n  removeExistingOwners,\n}: EncodeUpdateMultiSigParametersParameters) => {\n  return encodeFunctionData({\n    abi: MultiSigDeleGator.abi,\n    functionName: 'updateMultiSigParameters',\n    args: [owners, threshold, removeExistingOwners],\n  });\n};\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type EncodeUpdateThresholdParameters = {\n  threshold: bigint;\n};\n\nexport type SimulateUpdateThresholdParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n} & EncodeUpdateThresholdParameters;\n\nexport type ExecuteUpdateThresholdParameters = {\n  client: InitializedClient;\n  multiSigDeleGatorAddress: Address;\n} & EncodeUpdateThresholdParameters;\n\nexport const simulate = async ({\n  client,\n  multiSigDeleGatorAddress,\n  threshold,\n}: SimulateUpdateThresholdParameters) => {\n  return simulateContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'updateThreshold',\n    args: [threshold],\n  });\n};\n\nexport const execute = async ({\n  client,\n  multiSigDeleGatorAddress,\n  threshold,\n}: ExecuteUpdateThresholdParameters) => {\n  const { request } = await simulate({\n    client,\n    multiSigDeleGatorAddress,\n    threshold,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ threshold }: EncodeUpdateThresholdParameters) => {\n  return encodeFunctionData({\n    abi: MultiSigDeleGator.abi,\n    functionName: 'updateThreshold',\n    args: [threshold],\n  });\n};\n", "import { SimpleFactory } from '@metamask/delegation-abis';\nimport type { Address, Hex, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type SimulateCreate2DeployParameters = {\n  client: Client;\n  factoryAddress: Address;\n  creationCode: Hex;\n  salt: Hex;\n};\n\nexport type ExecuteCreate2DeployParameters = {\n  client: InitializedClient;\n  factoryAddress: Address;\n  creationCode: Hex;\n  salt: Hex;\n};\n\nexport const simulate = async ({\n  client,\n  factoryAddress,\n  creationCode,\n  salt,\n}: SimulateCreate2DeployParameters) => {\n  return simulateContract(client, {\n    address: factoryAddress,\n    abi: SimpleFactory.abi,\n    functionName: 'deploy',\n    args: [creationCode, salt],\n  });\n};\n\nexport const encode = (creationCode: Hex, salt: Hex) => {\n  return encodeFunctionData({\n    abi: SimpleFactory.abi,\n    functionName: 'deploy',\n    args: [creationCode, salt],\n  });\n};\n\nexport const execute = async ({\n  client,\n  factoryAddress,\n  creationCode,\n  salt,\n}: ExecuteCreate2DeployParameters) => {\n  const { request } = await simulate({\n    client,\n    factoryAddress,\n    creationCode,\n    salt,\n  });\n  return writeContract(client, request);\n};\n", "import { encode as create2Deploy } from './methods/create2Deploy';\n\nexport { create2Deploy };\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { ExecutionStruct } from '../../../executions';\nimport type { InitializedClient } from '../../types';\n\nexport type SimulateExecuteParameters = {\n  client: Client;\n  contractAddress: Address;\n  execution: ExecutionStruct;\n};\n\nexport type EncodeExecuteParameters = {\n  execution: ExecutionStruct;\n};\n\nexport type ExecuteExecuteParameters = {\n  client: InitializedClient;\n  contractAddress: Address;\n  execution: ExecutionStruct;\n};\n\nexport const simulate = async ({\n  client,\n  contractAddress,\n  execution,\n}: SimulateExecuteParameters) => {\n  return simulateContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'execute',\n    args: [execution],\n  });\n};\n\nexport const execute = async ({\n  client,\n  contractAddress,\n  execution,\n}: ExecuteExecuteParameters) => {\n  const { request } = await simulate({\n    client,\n    contractAddress,\n    execution,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ execution }: EncodeExecuteParameters) => {\n  return encodeFunctionData({\n    abi: DeleGatorCore.abi,\n    functionName: 'execute',\n    args: [execution],\n  });\n};\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport { encodeFunctionData } from 'viem';\nimport type { Address, Client } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport { encodeExecutionCalldata } from '../../../executions';\nimport type { ExecutionStruct, ExecutionMode } from '../../../executions';\nimport type { InitializedClient } from '../../types';\n\nexport type SimulateExecuteWithModeParameters = {\n  client: Client;\n  contractAddress: Address;\n} & EncodeExecuteWithModeParameters;\nexport type EncodeExecuteWithModeParameters = {\n  mode: ExecutionMode;\n  executions: ExecutionStruct[];\n};\n\nexport type ExecuteExecuteWithModeParameters = {\n  client: InitializedClient;\n  contractAddress: Address;\n} & EncodeExecuteWithModeParameters;\n\nexport const simulate = async ({\n  client,\n  contractAddress,\n  mode,\n  executions,\n}: SimulateExecuteWithModeParameters) => {\n  return simulateContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'execute',\n    args: [mode, encodeExecutionCalldata(executions)],\n  });\n};\n\nexport const execute = async ({\n  client,\n  contractAddress,\n  mode,\n  executions,\n}: ExecuteExecuteWithModeParameters) => {\n  const { request } = await simulate({\n    client,\n    contractAddress,\n    mode,\n    executions,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({\n  mode,\n  executions,\n}: EncodeExecuteWithModeParameters) => {\n  return encodeFunctionData({\n    abi: DeleGatorCore.abi,\n    functionName: 'execute',\n    args: [mode, encodeExecutionCalldata(executions)],\n  });\n};\n", "import { encode as disableDelegation } from './methods/disableDelegation';\nimport { encode as enableDelegation } from './methods/enableDelegation';\nimport { encode as execute } from './methods/execute';\nimport { encode as executeWithMode } from './methods/executeWithMode';\nimport { encode as isValidSignature } from './methods/isValidSignature';\nimport { encode as upgradeToAndCall } from './methods/upgradeToAndCall';\n\nexport {\n  disableDelegation,\n  enableDelegation,\n  execute,\n  executeWithMode,\n  upgradeToAndCall,\n  isValidSignature,\n};\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport { encodeFunctionData } from 'viem';\nimport type { Address, Client } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport { toDelegationStruct } from '../../../delegation';\nimport type { Delegation } from '../../../types';\nimport type { InitializedClient } from '../../types';\nimport type { NarrowAbiToFunction } from '../../utils';\n\nexport type SimulateDisableDelegationParameters = {\n  client: Client;\n  delegationManagerAddress: Address;\n  delegation: Delegation;\n};\n\nexport type EncodeDisableDelegationParameters = {\n  delegation: Delegation;\n};\n\nexport type ExecuteDisableDelegationParameters = {\n  client: InitializedClient;\n  delegationManagerAddress: Address;\n  delegation: Delegation;\n};\n\nexport const simulate = async ({\n  client,\n  delegationManagerAddress,\n  delegation,\n}: SimulateDisableDelegationParameters) => {\n  const abi = DeleGatorCore.abi as any as NarrowAbiToFunction<\n    typeof DeleGatorCore.abi,\n    'disableDelegation'\n  >;\n\n  const delegationStruct = toDelegationStruct(delegation);\n\n  return simulateContract(client, {\n    address: delegationManagerAddress,\n    abi,\n    functionName: 'disableDelegation',\n    args: [delegationStruct],\n  });\n};\n\nexport const execute = async ({\n  client,\n  delegationManagerAddress,\n  delegation,\n}: ExecuteDisableDelegationParameters) => {\n  const { request } = await simulate({\n    client,\n    delegationManagerAddress,\n    delegation,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ delegation }: EncodeDisableDelegationParameters) => {\n  const delegationStruct = toDelegationStruct(delegation);\n\n  return encodeFunctionData({\n    abi: DeleGatorCore.abi,\n    functionName: 'disableDelegation',\n    args: [delegationStruct],\n  });\n};\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport { encodeFunctionData } from 'viem';\nimport type { Address, Client } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport { toDelegationStruct } from '../../../delegation';\nimport type { Delegation } from '../../../types';\nimport type { InitializedClient } from '../../types';\nimport type { NarrowAbiToFunction } from '../../utils';\n\nexport type SimulateEnableDelegationParameters = {\n  client: Client;\n  delegationManagerAddress: Address;\n  delegation: Delegation;\n};\n\nexport type EncodeEnableDelegationParameters = {\n  delegation: Delegation;\n};\n\nexport type ExecuteEnableDelegationParameters = {\n  client: InitializedClient;\n  delegationManagerAddress: Address;\n  delegation: Delegation;\n};\n\nexport const simulate = async ({\n  client,\n  delegationManagerAddress,\n  delegation,\n}: SimulateEnableDelegationParameters) => {\n  const abi = DeleGatorCore.abi as any as NarrowAbiToFunction<\n    typeof DeleGatorCore.abi,\n    'enableDelegation'\n  >;\n\n  const delegationStruct = toDelegationStruct(delegation);\n\n  return simulateContract(client, {\n    address: delegationManagerAddress,\n    abi,\n    functionName: 'enableDelegation',\n    args: [delegationStruct],\n  });\n};\n\nexport const execute = async ({\n  client,\n  delegationManagerAddress,\n  delegation,\n}: ExecuteEnableDelegationParameters) => {\n  const { request } = await simulate({\n    client,\n    delegationManagerAddress,\n    delegation,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ delegation }: EncodeEnableDelegationParameters) => {\n  const delegationStruct = toDelegationStruct(delegation);\n\n  return encodeFunctionData({\n    abi: DeleGatorCore.abi,\n    functionName: 'enableDelegation',\n    args: [delegationStruct],\n  });\n};\n", "import { DeleGatorCore } from '@metamask/delegation-abis';\nimport type { Address, Hex, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type SimulateUpgradeToAndCallParameters = {\n  client: Client;\n  contractAddress: Address;\n} & EncodeUpgradeToAndCallParameters;\n\nexport type EncodeUpgradeToAndCallParameters = {\n  implementation: Address;\n  data: Hex;\n};\n\nexport type ExecuteUpgradeToAndCallParameters = {\n  client: InitializedClient;\n  contractAddress: Address;\n} & EncodeUpgradeToAndCallParameters;\n\nexport const simulate = async ({\n  client,\n  contractAddress,\n  implementation,\n  data,\n}: SimulateUpgradeToAndCallParameters) => {\n  return simulateContract(client, {\n    address: contractAddress,\n    abi: DeleGatorCore.abi,\n    functionName: 'upgradeToAndCall',\n    args: [implementation, data],\n  });\n};\n\nexport const execute = async ({\n  client,\n  contractAddress,\n  implementation,\n  data,\n}: ExecuteUpgradeToAndCallParameters) => {\n  const { request } = await simulate({\n    client,\n    contractAddress,\n    implementation,\n    data,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({\n  implementation,\n  data,\n}: EncodeUpgradeToAndCallParameters) => {\n  return encodeFunctionData({\n    abi: DeleGatorCore.abi,\n    functionName: 'upgradeToAndCall',\n    args: [implementation, data],\n  });\n};\n", "import * as DelegationManager from '../DelegationFramework/DelegationManager';\nimport * as DeleGatorCore from '../DelegationFramework/DeleGatorCore';\nimport * as EIP712 from '../DelegationFramework/EIP712';\nimport * as EntryPoint from '../DelegationFramework/EntryPoint';\nimport * as ERC20PeriodTransferEnforcer from '../DelegationFramework/ERC20PeriodTransferEnforcer';\nimport * as ERC20StreamingEnforcer from '../DelegationFramework/ERC20StreamingEnforcer';\nimport * as ERC20TransferAmountEnforcer from '../DelegationFramework/ERC20TransferAmountEnforcer';\nimport * as HybridDeleGator from '../DelegationFramework/HybridDeleGator';\nimport * as IdEnforcer from '../DelegationFramework/IdEnforcer';\nimport * as LimitedCallsEnforcer from '../DelegationFramework/LimitedCallsEnforcer';\nimport * as MultiSigDeleGator from '../DelegationFramework/MultiSigDeleGator';\nimport * as MultiTokenPeriodEnforcer from '../DelegationFramework/MultiTokenPeriodEnforcer';\nimport * as NativeTokenPeriodTransferEnforcer from '../DelegationFramework/NativeTokenPeriodTransferEnforcer';\nimport * as NativeTokenStreamingEnforcer from '../DelegationFramework/NativeTokenStreamingEnforcer';\nimport * as NativeTokenTransferAmountEnforcer from '../DelegationFramework/NativeTokenTransferAmountEnforcer';\nimport * as NonceEnforcer from '../DelegationFramework/NonceEnforcer';\nimport * as Ownable2Step from '../DelegationFramework/Ownable2Step';\nimport * as Pausable from '../DelegationFramework/Pausable';\nimport * as SimpleFactory from '../DelegationFramework/SimpleFactory';\nimport * as SpecificActionERC20TransferBatchEnforcer from '../DelegationFramework/SpecificActionERC20TransferBatchEnforcer';\n\nexport {\n  isContractDeployed,\n  isImplementationExpected,\n  encodeProxyCreationCode,\n} from '../DelegationFramework/utils';\n\nexport type { NarrowAbiToFunction } from '../DelegationFramework/utils';\n\nexport {\n  DelegationManager,\n  DeleGatorCore,\n  EIP712,\n  EntryPoint,\n  HybridDeleGator,\n  IdEnforcer,\n  LimitedCallsEnforcer,\n  MultiSigDeleGator,\n  NonceEnforcer,\n  Ownable2Step,\n  Pausable,\n  SimpleFactory,\n  SpecificActionERC20TransferBatchEnforcer,\n  ERC20PeriodTransferEnforcer,\n  ERC20StreamingEnforcer,\n  ERC20TransferAmountEnforcer,\n  MultiTokenPeriodEnforcer,\n  NativeTokenPeriodTransferEnforcer,\n  NativeTokenStreamingEnforcer,\n  NativeTokenTransferAmountEnforcer,\n};\n\nexport type {\n  P256Owner,\n  InitializedClient,\n} from '../DelegationFramework/types';\n\nexport type { Redemption } from '../types';\n", "import * as constants from './constants';\nimport * as encode from './encode';\nimport * as execute from './execute';\nimport * as read from './read';\nimport * as simulate from './simulate';\n\nexport { encode, execute, read, simulate, constants };\n", "export { ROOT_AUTHORITY, ANY_BENEFICIARY } from '../../delegation';\n\nexport const NAME = 'DelegationManager';\nexport const VERSION = '1.3.0';\nexport const DOMAIN_VERSION = '1';\n", "import { encode as disableDelegation } from './methods/disableDelegation';\nimport { encode as enableDelegation } from './methods/enableDelegation';\nimport { encode as redeemDelegations } from './methods/redeemDelegations';\n\nexport { disableDelegation, enableDelegation, redeemDelegations };\n", "import { DelegationManager } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport { toDelegationStruct } from '../../../delegation';\nimport type { Delegation } from '../../../types';\nimport type { InitializedClient } from '../../types';\nimport type { NarrowAbiToFunction } from '../../utils';\n\nexport type EncodeDisableDelegationParameters = {\n  delegation: Delegation;\n};\n\nexport type SimulateDisableDelegationParameters = {\n  client: Client;\n  delegationManagerAddress: Address;\n} & EncodeDisableDelegationParameters;\n\nexport type ExecuteDisableDelegationParameters = {\n  client: InitializedClient;\n  delegationManagerAddress: Address;\n} & EncodeDisableDelegationParameters;\n\nexport const simulate = async ({\n  client,\n  delegationManagerAddress,\n  delegation,\n}: SimulateDisableDelegationParameters) => {\n  const abi = DelegationManager.abi as any as NarrowAbiToFunction<\n    typeof DelegationManager.abi,\n    'disableDelegation'\n  >;\n\n  const delegationStruct = toDelegationStruct(delegation);\n\n  return simulateContract(client, {\n    address: delegationManagerAddress,\n    abi,\n    functionName: 'disableDelegation',\n    args: [delegationStruct],\n  });\n};\n\nexport const execute = async ({\n  client,\n  delegationManagerAddress,\n  delegation,\n}: ExecuteDisableDelegationParameters) => {\n  const { request } = await simulate({\n    client,\n    delegationManagerAddress,\n    delegation,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ delegation }: EncodeDisableDelegationParameters) => {\n  const delegationStruct = toDelegationStruct(delegation);\n\n  return encodeFunctionData({\n    abi: DelegationManager.abi,\n    functionName: 'disableDelegation',\n    args: [delegationStruct],\n  });\n};\n", "import { DelegationManager } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport { toDelegationStruct } from '../../../delegation';\nimport type { Delegation } from '../../../types';\nimport type { InitializedClient } from '../../types';\nimport type { NarrowAbiToFunction } from '../../utils';\n\nexport type EncodeEnableDelegationParameters = {\n  delegation: Delegation;\n};\n\nexport type SimulateEnableDelegationParameters = {\n  client: Client;\n  delegationManagerAddress: Address;\n} & EncodeEnableDelegationParameters;\n\nexport type ExecuteEnableDelegationParameters = {\n  client: InitializedClient;\n  delegationManagerAddress: Address;\n} & EncodeEnableDelegationParameters;\n\nexport const simulate = async ({\n  client,\n  delegationManagerAddress,\n  delegation,\n}: SimulateEnableDelegationParameters) => {\n  const abi = DelegationManager.abi as any as NarrowAbiToFunction<\n    typeof DelegationManager.abi,\n    'enableDelegation'\n  >;\n\n  const delegationStruct = toDelegationStruct(delegation);\n\n  return simulateContract(client, {\n    address: delegationManagerAddress,\n    abi,\n    functionName: 'enableDelegation',\n    args: [delegationStruct],\n  });\n};\n\nexport const execute = async ({\n  client,\n  delegationManagerAddress,\n  delegation,\n}: ExecuteEnableDelegationParameters) => {\n  const { request } = await simulate({\n    client,\n    delegationManagerAddress,\n    delegation,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({ delegation }: EncodeEnableDelegationParameters) => {\n  const delegationStruct = toDelegationStruct(delegation);\n\n  return encodeFunctionData({\n    abi: DelegationManager.abi,\n    functionName: 'enableDelegation',\n    args: [delegationStruct],\n  });\n};\n", "import { DelegationManager } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport { encodePermissionContexts } from '../../../delegation';\nimport { encodeExecutionCalldatas } from '../../../executions';\nimport type { ExecutionMode, ExecutionStruct } from '../../../executions';\nimport type { Delegation } from '../../../types';\nimport type { InitializedClient } from '../../types';\nimport type { NarrowAbiToFunction } from '../../utils';\n\nexport type EncodeRedeemDelegationsParameters = {\n  delegations: Delegation[][];\n  modes: ExecutionMode[];\n  executions: ExecutionStruct[][];\n};\n\nexport type SimulateRedeemDelegationsParameters = {\n  client: Client;\n  delegationManagerAddress: Address;\n} & EncodeRedeemDelegationsParameters;\n\nexport type ExecuteRedeemDelegationsParameters = {\n  client: InitializedClient;\n  delegationManagerAddress: Address;\n} & EncodeRedeemDelegationsParameters;\n\nexport const simulate = async ({\n  client,\n  delegationManagerAddress,\n  delegations,\n  modes,\n  executions,\n}: SimulateRedeemDelegationsParameters) => {\n  const abi = DelegationManager.abi as any as NarrowAbiToFunction<\n    typeof DelegationManager.abi,\n    'redeemDelegations'\n  >;\n\n  return simulateContract(client, {\n    address: delegationManagerAddress,\n    abi,\n    functionName: 'redeemDelegations',\n    args: [\n      encodePermissionContexts(delegations),\n      modes,\n      encodeExecutionCalldatas(executions),\n    ],\n  });\n};\n\nexport const execute = async ({\n  client,\n  delegationManagerAddress,\n  delegations,\n  modes,\n  executions,\n}: ExecuteRedeemDelegationsParameters) => {\n  const { request } = await simulate({\n    client,\n    delegationManagerAddress,\n    delegations,\n    modes,\n    executions,\n  });\n\n  return writeContract(client, request);\n};\n\nexport const encode = ({\n  delegations,\n  modes,\n  executions,\n}: EncodeRedeemDelegationsParameters) => {\n  return encodeFunctionData({\n    abi: DelegationManager.abi,\n    functionName: 'redeemDelegations',\n    args: [\n      encodePermissionContexts(delegations),\n      modes,\n      encodeExecutionCalldatas(executions),\n    ],\n  });\n};\n", "import { execute as disableDelegation } from './methods/disableDelegation';\nimport { execute as enableDelegation } from './methods/enableDelegation';\nimport { execute as redeemDelegations } from './methods/redeemDelegations';\n\nexport { disableDelegation, enableDelegation, redeemDelegations };\n", "import { read as disabledDelegations } from './methods/disabledDelegations';\nimport { read as getAnyDelegate } from './methods/getAnyDelegate';\nimport { read as getRootAuthority } from './methods/getRootAuthority';\n\nexport { getAnyDelegate, getRootAuthority, disabledDelegations };\n", "import { DelegationManager } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadDisabledDelegationsParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationHash: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationHash,\n}: ReadDisabledDelegationsParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DelegationManager.abi,\n    functionName: 'disabledDelegations',\n    args: [delegationHash],\n  });\n", "import { DelegationManager } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetAnyDelegateParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetAnyDelegateParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DelegationManager.abi,\n    functionName: 'ANY_DELEGATE',\n  });\n", "import { DelegationManager } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetRootAuthorityParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetRootAuthorityParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: DelegationManager.abi,\n    functionName: 'ROOT_AUTHORITY',\n  });\n", "import { simulate as disableDelegation } from './methods/disableDelegation';\nimport { simulate as enableDelegation } from './methods/enableDelegation';\nimport { simulate as redeemDelegations } from './methods/redeemDelegations';\n\nexport { disableDelegation, enableDelegation, redeemDelegations };\n", "import * as encode from './encode';\nimport * as execute from './execute';\nimport * as read from './read';\nimport * as simulate from './simulate';\n\nexport { encode, simulate, read, execute };\n", "import { execute as disableDelegation } from './methods/disableDelegation';\nimport { execute as enableDelegation } from './methods/enableDelegation';\nimport { execute } from './methods/execute';\nimport { execute as executeWithMode } from './methods/executeWithMode';\nimport { execute as upgradeToAndCall } from './methods/upgradeToAndCall';\n\nexport {\n  disableDelegation,\n  enableDelegation,\n  execute,\n  executeWithMode,\n  upgradeToAndCall,\n};\n", "import { simulate as disableDelegation } from './methods/disableDelegation';\nimport { simulate as enableDelegation } from './methods/enableDelegation';\nimport { simulate as execute } from './methods/execute';\nimport { simulate as executeWithMode } from './methods/executeWithMode';\nimport { simulate as upgradeToAndCall } from './methods/upgradeToAndCall';\n\nexport {\n  disableDelegation,\n  enableDelegation,\n  execute,\n  executeWithMode,\n  upgradeToAndCall,\n};\n", "export * as read from './read';\n", "import { read as getContractName } from './methods/getContractName';\nimport { read as getContractVersion } from './methods/getContractVersion';\nimport { read as getDomainVersion } from './methods/getDomainVersion';\n\nexport { getContractName, getContractVersion, getDomainVersion };\n", "import type { Client, Address } from 'viem';\nimport { readContract } from 'viem/actions';\n\n// NOTE: ABIs have been extracted and minimized for reuse across contracts. These methods are included in our contracts but are not a part of the EIP712 standard itself.\n\nexport type ReadGetContractNameParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetContractNameParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: [\n      {\n        type: 'function',\n        name: 'NAME',\n        inputs: [],\n        outputs: [\n          {\n            name: '',\n            type: 'string',\n            internalType: 'string',\n          },\n        ],\n        stateMutability: 'view',\n      },\n    ],\n    functionName: 'NAME',\n  });\n", "import type { Client, Address } from 'viem';\nimport { readContract } from 'viem/actions';\n\n// NOTE: ABIs have been extracted and minimized for reuse across contracts. These methods are included in our contracts but are not a part of the EIP712 standard itself.\n\nexport type ReadGetContractVersionParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetContractVersionParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: [\n      {\n        type: 'function',\n        name: 'VERSION',\n        inputs: [],\n        outputs: [\n          {\n            name: '',\n            type: 'string',\n            internalType: 'string',\n          },\n        ],\n        stateMutability: 'view',\n      },\n    ],\n    functionName: 'VERSION',\n  });\n", "import type { Client, Address } from 'viem';\nimport { readContract } from 'viem/actions';\n\n// NOTE: ABIs have been extracted and minimized for reuse across contracts. These methods are included in our contracts but are not a part of the EIP712 standard itself.\n\nexport type ReadGetDomainVersionParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetDomainVersionParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: [\n      {\n        type: 'function',\n        name: 'DOMAIN_VERSION',\n        inputs: [],\n        outputs: [\n          {\n            name: '',\n            type: 'string',\n            internalType: 'string',\n          },\n        ],\n        stateMutability: 'view',\n      },\n    ],\n    functionName: 'DOMAIN_VERSION',\n  });\n", "import * as read from './read';\n\nexport { read };\n", "import { read as entryPointGetNonce } from './methods/getNonce';\n\nexport { entryPointGetNonce };\n", "import { EntryPoint } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetNonceParameters = {\n  client: Client;\n  entryPoint: Address;\n  contractAddress: Address;\n  key: bigint;\n};\n\nexport const read = async ({\n  client,\n  entryPoint,\n  contractAddress,\n  key,\n}: ReadGetNonceParameters) =>\n  await readContract(client, {\n    address: entryPoint,\n    abi: EntryPoint.abi,\n    functionName: 'getNonce',\n    args: [contractAddress, key],\n  });\n", "import * as read from './read';\n\nexport { read };\n", "import { read as getSpentAmount } from './methods/getSpentAmount';\nimport { read as getTermsInfo } from './methods/getTermsInfo';\n\nexport { getTermsInfo, getSpentAmount };\n", "import { ERC20TransferAmountEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetSpentAmountParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationManager: Address;\n  delegationHash: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationManager,\n  delegationHash,\n}: ReadGetSpentAmountParameters): Promise<bigint> => {\n  const amount = await readContract(client, {\n    address: contractAddress,\n    abi: ERC20TransferAmountEnforcer.abi,\n    functionName: 'spentMap',\n    args: [delegationManager, delegationHash],\n  });\n\n  return amount;\n};\n", "import { ERC20TransferAmountEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetTermsInfoParameters = {\n  client: Client;\n  contractAddress: Address;\n  terms: Hex;\n};\n\nexport type TermsData = {\n  allowedContract: Address;\n  maxTokens: bigint;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  terms,\n}: ReadGetTermsInfoParameters): Promise<TermsData> => {\n  const [allowedContract, maxTokens] = await readContract(client, {\n    address: contractAddress,\n    abi: ERC20TransferAmountEnforcer.abi,\n    functionName: 'getTermsInfo',\n    args: [terms],\n  });\n\n  return {\n    allowedContract,\n    maxTokens,\n  };\n};\n", "export * as read from './read';\nexport * as encode from './encode';\nexport * as simulate from './simulate';\nexport * as constants from './constants';\n", "import { read as getKey } from './methods/getKey';\nimport { read as getKeyIdHashes } from './methods/getKeyIdHashes';\nimport { read as getKeyIdHashesCount } from './methods/getKeyIdHashesCount';\n\nexport { getKey, getKeyIdHashes, getKeyIdHashesCount };\n", "import { HybridDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetKeyParameters = {\n  client: Client;\n  hybridDeleGatorAddress: Address;\n  keyId: string;\n};\n\nexport const read = async ({\n  client,\n  hybridDeleGatorAddress,\n  keyId,\n}: ReadGetKeyParameters) =>\n  await readContract(client, {\n    address: hybridDeleGatorAddress,\n    abi: HybridDeleGator.abi,\n    functionName: 'getKey',\n    args: [keyId],\n  });\n", "import { HybridDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetKeyIdHashesParameters = {\n  client: Client;\n  hybridDeleGatorAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  hybridDeleGatorAddress,\n}: ReadGetKeyIdHashesParameters) =>\n  await readContract(client, {\n    address: hybridDeleGatorAddress,\n    abi: HybridDeleGator.abi,\n    functionName: 'getKeyIdHashes',\n  });\n", "import { HybridDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetKeyIdHashesCountParameters = {\n  client: Client;\n  hybridDeleGatorAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  hybridDeleGatorAddress,\n}: ReadGetKeyIdHashesCountParameters) =>\n  await readContract(client, {\n    address: hybridDeleGatorAddress,\n    abi: HybridDeleGator.abi,\n    functionName: 'getKeyIdHashesCount',\n  });\n", "import { simulate as addKey } from './methods/addKey';\nimport { simulate as initializeHybridDeleGator } from './methods/initialize';\nimport { simulate as reinitializeHybridDeleGator } from './methods/reinitialize';\nimport { simulate as removeKey } from './methods/removeKey';\nimport { simulate as updateSigners } from './methods/updateSigners';\n\nexport {\n  addKey,\n  initializeHybridDeleGator,\n  reinitializeHybridDeleGator,\n  removeKey,\n  updateSigners,\n};\n", "export { ROOT_AUTHORITY, ANY_BENEFICIARY } from '../../delegation';\n\nexport const NAME = 'HybridDeleGator';\nexport const VERSION = '1.3.0';\nexport const DOMAIN_VERSION = '1';\n", "import * as read from './read';\n\nexport { read };\n", "import { read as getIsUsed } from './methods/getIsUsed';\nimport { read as getTermsInfo } from './methods/getTermsInfo';\n\nexport { getTermsInfo, getIsUsed };\n", "import { IdEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetIsUsedParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationManager: Address;\n  delegator: Address;\n  id: bigint;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationManager,\n  delegator,\n  id,\n}: ReadGetIsUsedParameters): Promise<boolean> => {\n  const isUsed = await readContract(client, {\n    address: contractAddress,\n    abi: IdEnforcer.abi,\n    functionName: 'getIsUsed',\n    args: [delegationManager, delegator, id],\n  });\n\n  return isUsed;\n};\n", "import { IdEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetTermsInfoParameters = {\n  client: Client;\n  contractAddress: Address;\n  terms: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  terms,\n}: ReadGetTermsInfoParameters): Promise<bigint> => {\n  const id = await readContract(client, {\n    address: contractAddress,\n    abi: IdEnforcer.abi,\n    functionName: 'getTermsInfo',\n    args: [terms],\n  });\n\n  return id;\n};\n", "import * as read from './read';\n\nexport { read };\n", "import { read as callCounts } from './methods/callCounts';\nimport { read as getTermsInfo } from './methods/getTermsInfo';\n\nexport { callCounts, getTermsInfo };\n", "import { LimitedCallsEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadCallCountsParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationManager: Address;\n  delegationHash: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationManager,\n  delegationHash,\n}: ReadCallCountsParameters): Promise<bigint> => {\n  const count = await readContract(client, {\n    address: contractAddress,\n    abi: LimitedCallsEnforcer.abi,\n    functionName: 'callCounts',\n    args: [delegationManager, delegationHash],\n  });\n\n  return count;\n};\n", "import { LimitedCallsEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetTermsInfoParameters = {\n  client: Client;\n  contractAddress: Address;\n  terms: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  terms,\n}: ReadGetTermsInfoParameters): Promise<bigint> => {\n  const limit = await readContract(client, {\n    address: contractAddress,\n    abi: LimitedCallsEnforcer.abi,\n    functionName: 'getTermsInfo',\n    args: [terms],\n  });\n\n  return limit;\n};\n", "export * as read from './read';\nexport * as encode from './encode';\nexport * as simulate from './simulate';\nexport * as constants from './constants';\n", "import { read as getMaxNumberOfSigners } from './methods/getMaxNumberOfSigners';\nimport { read as getSigners } from './methods/getSigners';\nimport { read as getSignersCount } from './methods/getSignersCount';\nimport { read as getThreshold } from './methods/getThreshold';\nimport { read as isSigner } from './methods/isSigner';\n\nexport {\n  getSigners,\n  getSignersCount,\n  getThreshold,\n  isSigner,\n  getMaxNumberOfSigners,\n};\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetMaxNumberOfSignersParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  multiSigDeleGatorAddress,\n}: ReadGetMaxNumberOfSignersParameters) =>\n  await readContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'MAX_NUMBER_OF_SIGNERS',\n  });\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetSignersParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  multiSigDeleGatorAddress,\n}: ReadGetSignersParameters) =>\n  await readContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'getSigners',\n  });\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetSignersCountParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  multiSigDeleGatorAddress,\n}: ReadGetSignersCountParameters) =>\n  await readContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'getSignersCount',\n  });\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetThresholdParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  multiSigDeleGatorAddress,\n}: ReadGetThresholdParameters) =>\n  await readContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'getThreshold',\n  });\n", "import { MultiSigDeleGator } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadIsSignerParameters = {\n  client: Client;\n  multiSigDeleGatorAddress: Address;\n  signer: Address;\n};\n\nexport const read = async ({\n  client,\n  multiSigDeleGatorAddress,\n  signer,\n}: ReadIsSignerParameters) =>\n  await readContract(client, {\n    address: multiSigDeleGatorAddress,\n    abi: MultiSigDeleGator.abi,\n    functionName: 'isSigner',\n    args: [signer],\n  });\n", "import { simulate as addSigner } from './methods/addSigner';\nimport { simulate as initializeMultiSigDeleGator } from './methods/initialize';\nimport { simulate as reinitializeMultiSigDeleGator } from './methods/reinitialize';\nimport { simulate as removeSigner } from './methods/removeSigner';\nimport { simulate as replaceSigner } from './methods/replaceSigner';\nimport { simulate as updateMultiSigParameters } from './methods/updateMultiSigParameters';\nimport { simulate as updateThreshold } from './methods/updateThreshold';\n\nexport {\n  addSigner,\n  initializeMultiSigDeleGator,\n  reinitializeMultiSigDeleGator,\n  removeSigner,\n  replaceSigner,\n  updateMultiSigParameters,\n  updateThreshold,\n};\n", "export const MAX_NUMBER_OF_SIGNERS = 30;\n", "import * as read from './read';\n\nexport { read };\n", "import { read as getSpentAmount } from './methods/getSpentAmount';\nimport { read as getTermsInfo } from './methods/getTermsInfo';\n\nexport { getSpentAmount, getTermsInfo };\n", "import { NativeTokenTransferAmountEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetSpentAmountParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationManager: Address;\n  delegationHash: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationManager,\n  delegationHash,\n}: ReadGetSpentAmountParameters): Promise<bigint> => {\n  const amount = await readContract(client, {\n    address: contractAddress,\n    abi: NativeTokenTransferAmountEnforcer.abi,\n    functionName: 'spentMap',\n    args: [delegationManager, delegationHash],\n  });\n\n  return amount;\n};\n", "import { NativeTokenTransferAmountEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetTermsInfoParameters = {\n  client: Client;\n  contractAddress: Address;\n  terms: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  terms,\n}: ReadGetTermsInfoParameters): Promise<bigint> => {\n  const allowance = await readContract(client, {\n    address: contractAddress,\n    abi: NativeTokenTransferAmountEnforcer.abi,\n    functionName: 'getTermsInfo',\n    args: [terms],\n  });\n\n  return allowance;\n};\n", "import * as encode from './encode';\nimport * as execute from './execute';\nimport * as read from './read';\nimport * as simulate from './simulate';\n\nexport { encode, execute, read, simulate };\n", "import { encode as incrementNonce } from './methods/incrementNonce';\n\nexport { incrementNonce };\n", "import { NonceEnforcer } from '@metamask/delegation-abis';\nimport type { Account, Address, Chain, Client, Transport } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nexport type SimulateIncrementNonceParameters = {\n  client: Client<Transport, Chain, Account>;\n  contractAddress: Address;\n  delegationManager: Address;\n};\n\nexport const encode = (delegationManager: Address) => {\n  return encodeFunctionData({\n    abi: NonceEnforcer.abi,\n    functionName: 'incrementNonce',\n    args: [delegationManager],\n  });\n};\n\nexport const simulate = async ({\n  client,\n  contractAddress,\n  delegationManager,\n}: SimulateIncrementNonceParameters) => {\n  return simulateContract(client, {\n    address: contractAddress,\n    abi: NonceEnforcer.abi,\n    functionName: 'incrementNonce',\n    args: [delegationManager],\n  });\n};\n\nexport const execute = async ({\n  client,\n  contractAddress,\n  delegationManager,\n}: SimulateIncrementNonceParameters) => {\n  const { request } = await simulate({\n    client,\n    contractAddress,\n    delegationManager,\n  });\n  return writeContract(client, request);\n};\n", "import { execute as incrementNonce } from './methods/incrementNonce';\n\nexport { incrementNonce };\n", "import { read as currentNonce } from './methods/currentNonce';\nimport { read as getTermsInfo } from './methods/getTermsInfo';\n\nexport { currentNonce, getTermsInfo };\n", "import { NonceEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadCurrentNonceParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationManager: Address;\n  delegator: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationManager,\n  delegator,\n}: ReadCurrentNonceParameters): Promise<bigint> => {\n  const nonce = await readContract(client, {\n    address: contractAddress,\n    abi: NonceEnforcer.abi,\n    functionName: 'currentNonce',\n    args: [delegationManager, delegator],\n  });\n\n  return nonce;\n};\n", "import { NonceEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetTermsInfoParameters = {\n  client: Client;\n  contractAddress: Address;\n  terms: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  terms,\n}: ReadGetTermsInfoParameters): Promise<bigint> => {\n  const nonce = await readContract(client, {\n    address: contractAddress,\n    abi: NonceEnforcer.abi,\n    functionName: 'getTermsInfo',\n    args: [terms],\n  });\n\n  return nonce;\n};\n", "import { simulate as incrementNonce } from './methods/incrementNonce';\n\nexport { incrementNonce };\n", "export * as read from './read';\nexport * as execute from './execute';\nexport * as encode from './encode';\nexport * as simulate from './simulate';\n", "import { read as getOwner } from './methods/getOwner';\nimport { read as getPendingOwner } from './methods/getPendingOwner';\n\nexport { getPendingOwner, getOwner };\n", "import { Ownable2Step } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetOwnerParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetOwnerParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: Ownable2Step.abi,\n    functionName: 'owner',\n  });\n", "import { Ownable2Step } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetPendingOwnerParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadGetPendingOwnerParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: Ownable2Step.abi,\n    functionName: 'pendingOwner',\n  });\n", "import { execute as acceptOwnership } from './methods/acceptOwnership';\nimport { execute as renounceOwnership } from './methods/renounceOwnership';\nimport { execute as transferOwnership } from './methods/transferOwnership';\n\nexport { transferOwnership, renounceOwnership, acceptOwnership };\n", "import { Ownable2Step } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type SimulateAcceptOwnershipParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport type ExecuteAcceptOwnershipParameters = {\n  client: InitializedClient;\n  contractAddress: Address;\n};\n\nexport const simulate = async ({\n  client,\n  contractAddress,\n}: SimulateAcceptOwnershipParameters) => {\n  return simulateContract(client, {\n    address: contractAddress,\n    abi: Ownable2Step.abi,\n    functionName: 'acceptOwnership',\n  });\n};\n\nexport const execute = async ({\n  client,\n  contractAddress,\n}: ExecuteAcceptOwnershipParameters) => {\n  const { request } = await simulate({\n    client,\n    contractAddress,\n  });\n  return writeContract(client, request);\n};\n\nexport const encode = () => {\n  return encodeFunctionData({\n    abi: Ownable2Step.abi,\n    functionName: 'acceptOwnership',\n  });\n};\n", "import { Ownable2Step } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type SimulateRenounceOwnershipParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport type ExecuteRenounceOwnershipParameters = {\n  client: InitializedClient;\n  contractAddress: Address;\n};\n\nexport const simulate = async ({\n  client,\n  contractAddress,\n}: SimulateRenounceOwnershipParameters) => {\n  return simulateContract(client, {\n    address: contractAddress,\n    abi: Ownable2Step.abi,\n    functionName: 'renounceOwnership',\n  });\n};\n\nexport const execute = async ({\n  client,\n  contractAddress,\n}: ExecuteRenounceOwnershipParameters) => {\n  const { request } = await simulate({\n    client,\n    contractAddress,\n  });\n  return writeContract(client, request);\n};\n\nexport const encode = () => {\n  return encodeFunctionData({\n    abi: Ownable2Step.abi,\n    functionName: 'renounceOwnership',\n  });\n};\n", "import { Ownable2Step } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nexport type SimulateTransferOwnershipParameters = {\n  client: Client;\n  contractAddress: Address;\n  account: Address;\n};\n\nexport type ExecuteTransferOwnershipParameters = {\n  client: InitializedClient;\n  contractAddress: Address;\n  account: Address;\n};\n\nexport const simulate = async ({\n  client,\n  contractAddress,\n  account,\n}: SimulateTransferOwnershipParameters) => {\n  return simulateContract(client, {\n    address: contractAddress,\n    abi: Ownable2Step.abi,\n    functionName: 'transferOwnership',\n    args: [account],\n  });\n};\n\nexport const execute = async ({\n  client,\n  contractAddress,\n  account,\n}: ExecuteTransferOwnershipParameters) => {\n  const { request } = await simulate({\n    client,\n    contractAddress,\n    account,\n  });\n  return writeContract(client, request);\n};\n\nexport const encode = (account: Address) => {\n  return encodeFunctionData({\n    abi: Ownable2Step.abi,\n    functionName: 'transferOwnership',\n    args: [account],\n  });\n};\n", "import { encode as acceptOwnership } from './methods/acceptOwnership';\nimport { encode as renounceOwnership } from './methods/renounceOwnership';\nimport { encode as transferOwnership } from './methods/transferOwnership';\n\nexport { transferOwnership, renounceOwnership, acceptOwnership };\n", "import { simulate as acceptOwnership } from './methods/acceptOwnership';\nimport { simulate as renounceOwnership } from './methods/renounceOwnership';\nimport { simulate as transferOwnership } from './methods/transferOwnership';\n\nexport { transferOwnership, renounceOwnership, acceptOwnership };\n", "export * as read from './read';\nexport * as execute from './execute';\nexport * as encode from './encode';\nexport * as simulate from './simulate';\n", "import { read as isPaused } from './methods/isPaused';\n\nexport { isPaused };\n", "import { Pausable } from '@metamask/delegation-abis';\nimport type { Address, Client } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadIsPausedParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n}: ReadIsPausedParameters) =>\n  await readContract(client, {\n    address: contractAddress,\n    abi: Pausable.abi,\n    functionName: 'paused',\n  });\n", "import { execute as pause } from './methods/pause';\nimport { execute as unpause } from './methods/unpause';\n\nexport { pause, unpause };\n", "import type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nconst PauseAbi = [\n  {\n    type: 'function',\n    name: 'pause',\n    inputs: [],\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n];\n\nexport type SimulatePauseParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport type ExecutePauseParameters = {\n  client: InitializedClient;\n  contractAddress: Address;\n};\n\nexport const simulate = async ({\n  client,\n  contractAddress,\n}: SimulatePauseParameters) => {\n  return simulateContract(client, {\n    address: contractAddress,\n    abi: PauseAbi,\n    functionName: 'pause',\n  });\n};\n\nexport const execute = async ({\n  client,\n  contractAddress,\n}: ExecutePauseParameters) => {\n  const { request } = await simulate({\n    client,\n    contractAddress,\n  });\n  return writeContract(client, request);\n};\n\nexport const encode = () => {\n  return encodeFunctionData({\n    abi: PauseAbi,\n    functionName: 'pause',\n  });\n};\n", "import type { Address, Client } from 'viem';\nimport { encodeFunctionData } from 'viem';\nimport { simulateContract, writeContract } from 'viem/actions';\n\nimport type { InitializedClient } from '../../types';\n\nconst UnpauseAbi = [\n  {\n    type: 'function',\n    name: 'unpause',\n    inputs: [],\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n];\n\nexport type SimulateUnpauseParameters = {\n  client: Client;\n  contractAddress: Address;\n};\n\nexport type ExecuteUnpauseParameters = {\n  client: InitializedClient;\n  contractAddress: Address;\n};\n\nexport const simulate = async ({\n  client,\n  contractAddress,\n}: SimulateUnpauseParameters) => {\n  return simulateContract(client, {\n    address: contractAddress,\n    abi: UnpauseAbi,\n    functionName: 'unpause',\n  });\n};\n\nexport const execute = async ({\n  client,\n  contractAddress,\n}: ExecuteUnpauseParameters) => {\n  const { request } = await simulate({\n    client,\n    contractAddress,\n  });\n  return writeContract(client, request);\n};\n\nexport const encode = () => {\n  return encodeFunctionData({\n    abi: UnpauseAbi,\n    functionName: 'unpause',\n  });\n};\n", "import { encode as pause } from './methods/pause';\nimport { encode as unpause } from './methods/unpause';\n\nexport { pause, unpause };\n", "import { simulate as pause } from './methods/pause';\nimport { simulate as unpause } from './methods/unpause';\n\nexport { pause, unpause };\n", "import * as encode from './encode';\nimport * as execute from './execute';\nimport * as read from './read';\nimport * as simulate from './simulate';\n\nexport { read, simulate, execute, encode };\n", "import { execute as create2Deploy } from './methods/create2Deploy';\n\nexport { create2Deploy };\n", "import { read as getCreate2Address } from './methods/getCreate2Address';\n\nexport { getCreate2Address };\n", "import { SimpleFactory } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport const read = async (\n  client: Client,\n  factoryAddress: Address,\n  creationCode: Hex,\n  salt: Hex,\n) => {\n  return readContract(client, {\n    address: factoryAddress,\n    abi: SimpleFactory.abi,\n    functionName: 'computeAddress',\n    args: [creationCode, salt],\n  });\n};\n", "import { simulate as create2Deploy } from './methods/create2Deploy';\n\nexport { create2Deploy };\n", "import * as read from './read';\n\nexport { read };\n", "import { read as getTermsInfo } from './methods/getTermsInfo';\nimport { read as usedDelegations } from './methods/usedDelegations';\n\nexport { getTermsInfo, usedDelegations };\n", "import { SpecificActionERC20TransferBatchEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadGetTermsInfoParameters = {\n  client: Client;\n  contractAddress: Address;\n  terms: Hex;\n};\n\nexport type TermsData = {\n  tokenAddress: Address;\n  recipient: Address;\n  amount: bigint;\n  firstTarget: Address;\n  firstCalldata: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  terms,\n}: ReadGetTermsInfoParameters): Promise<TermsData> => {\n  const termsData = await readContract(client, {\n    address: contractAddress,\n    abi: SpecificActionERC20TransferBatchEnforcer.abi,\n    functionName: 'getTermsInfo',\n    args: [terms],\n  });\n\n  return termsData as TermsData;\n};\n", "import { SpecificActionERC20TransferBatchEnforcer } from '@metamask/delegation-abis';\nimport type { Address, Client, Hex } from 'viem';\nimport { readContract } from 'viem/actions';\n\nexport type ReadUsedDelegationsParameters = {\n  client: Client;\n  contractAddress: Address;\n  delegationManager: Address;\n  delegationHash: Hex;\n};\n\nexport const read = async ({\n  client,\n  contractAddress,\n  delegationManager,\n  delegationHash,\n}: ReadUsedDelegationsParameters): Promise<boolean> => {\n  const isUsed = await readContract(client, {\n    address: contractAddress,\n    abi: SpecificActionERC20TransferBatchEnforcer.abi,\n    functionName: 'usedDelegations',\n    args: [delegationManager, delegationHash],\n  });\n\n  return isUsed;\n};\n"],
  "mappings": "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U;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACxD,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACvE,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACvE,KAAU;AAAA,QAAM,KAAU;AAAA,QAC1B,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QACzC,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACvE,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACvE,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACxD,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACxD,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QACzC,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QACzC,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QACzC,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QACzC,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACxD,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACxD,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QACzC,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QACzC,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACtF,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QAAK,KAAU;AAAA,QACtF,KAAU;AAAA,QAAM,KAAU;AAAA,QAC1B,KAAU;AAAA,QAAM,KAAU;AAAA,QAAK,KAAU;AAAA,QAC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",
  "names": ["undefined", "VERSION", "array", "string", "collection", "object", "runInContext", "Array", "Date", "Error", "Function", "Math", "Object", "RegExp", "String", "TypeError", "Buffer", "Symbol", "Uint8Array", "DataView", "Map", "Promise", "Set", "WeakMap", "isObject", "result", "iteratee", "type", "size", "values", "number", "key", "includes", "pattern", "isPlainObject", "indexOf", "set", "id", "index", "ary", "othValue", "map", "memoize", "transform", "concat", "union", "parent", "clone", "isString", "isNaN", "create", "pad", "parseInt", "chain", "value", "debug", "debug", "debug", "id", "coerce", "debug", "id", "debug", "require_valid", "require_semver", "coerce", "StructError", "isIterable", "isObject", "isPlainObject", "print", "shiftIterator", "toFailure", "type", "toFailures", "run", "coerce", "mask", "Struct", "type", "assert", "create", "is", "mask", "validate", "ExactOptionalBrand", "ExactOptionalStruct", "schema", "define", "any", "array", "bigint", "instance", "integer", "literal", "never", "nullable", "number", "object", "optional", "exactOptional", "record", "string", "type", "union", "unknown", "coerce", "refine", "size", "pattern", "ErrorWithCause", "findCauseByReference", "getErrorCause", "stackWithCauses", "messageWithCauses", "ErrorWithCause", "findCauseByReference", "getErrorCause", "messageWithCauses", "stackWithCauses", "isNullOrUndefined", "isObject", "hasProperty", "object", "JsonSize", "isPlainObject", "size", "getErrorMessage", "isConstructable", "getError", "AssertionError", "assert", "assertStruct", "base64", "isBytes", "isString", "id", "encode", "padding", "mask", "alphabet", "type", "HEX_REGEX", "STRICT_HEX_REGEX", "HEX_ADDRESS_REGEX", "HEX_CHECKSUM_ADDRESS_REGEX", "isString", "isHexString", "isStrictHexString", "isHexAddress", "isHexChecksumAddress", "assertIsHexString", "assertIsStrictHexString", "getChecksumAddressUnmemoized", "remove0x", "isValidChecksumAddressUnmemoized", "isValidHexAddressUnmemoized", "add0x", "HEX_MINIMUM_NUMBER_CHARACTER", "HEX_MAXIMUM_NUMBER_CHARACTER", "HEX_CHARACTER_OFFSET", "getPrecomputedHexValuesBuilder", "getPrecomputedHexValues", "isBytes", "assertIsBytes", "bytesToHex", "bigint", "hexToBytes", "mask", "definePattern", "pattern", "CAIP_ASSET_TYPE_OR_ID_REGEX", "KnownCaipNamespace", "NumberLikeStruct", "NumberCoercer", "BigIntCoercer", "BytesLikeStruct", "BytesCoercer", "HexCoercer", "FrozenMap", "__classPrivateFieldGet", "_FrozenMap_map", "__classPrivateFieldSet", "FrozenSet", "_FrozenSet_set", "object", "hasOptional", "exactOptional", "validateJson", "id", "globalLogger", "Duration", "number", "timestamp", "zero", "negative1", "unitMapBigInt", "unitLengths", "getValueOfUnit", "numberToString", "fromWei", "toWei", "getErrorMessage", "size", "getAddress", "type", "type", "type", "type", "type", "numberValue", "type", "type", "type", "type", "type", "staticBuffer", "dynamicBuffer", "pointers", "encode", "encodeSingle", "type", "encodePacked", "decodeSingle", "require_abi", "type", "coerce", "mask", "type", "define", "define", "define", "define", "define", "define", "size", "JsonSize", "assert", "assert", "assert", "assert", "assert", "pattern", "define", "KnownCaipNamespace", "object", "define", "object", "object", "debug", "Duration", "size", "TIMESTAMP_UPPER_BOUND_SECONDS", "bytesToHex", "isHexString", "nonce", "hexToBytes", "BalanceChangeType", "concat", "isHex", "toHex", "bytecode", "isAddress", "encodePacked", "encodeAbiParameters", "pad", "object", "allowedCalldata", "exactCalldata", "type", "CAVEAT_TYPEHASH", "toHex", "encodeDelegations", "__export", "abi", "bytecode", "ERC20PeriodTransferEnforcer_exports", "ERC20StreamingEnforcer_exports", "read_exports", "read", "readContract", "availableAmount", "MultiTokenPeriodEnforcer_exports", "NativeTokenPeriodTransferEnforcer_exports", "NativeTokenStreamingEnforcer_exports", "getBlock", "getAvailableAmount", "ExecutionMode", "read_exports", "read", "readContract", "DeleGatorCore", "encode", "encodeFunctionData", "simulate", "simulateContract", "HybridDeleGator", "encode_exports", "MultiSigDeleGator", "writeContract", "execute", "abi", "DeleGatorCore_exports", "DelegationManager_exports", "EIP712_exports", "ERC20PeriodTransferEnforcer_exports", "ERC20StreamingEnforcer_exports", "ERC20TransferAmountEnforcer_exports", "EntryPoint_exports", "HybridDeleGator_exports", "IdEnforcer_exports", "LimitedCallsEnforcer_exports", "MultiSigDeleGator_exports", "MultiTokenPeriodEnforcer_exports", "NativeTokenPeriodTransferEnforcer_exports", "NativeTokenStreamingEnforcer_exports", "NativeTokenTransferAmountEnforcer_exports", "NonceEnforcer_exports", "Ownable2Step_exports", "Pausable_exports", "SimpleFactory_exports", "SpecificActionERC20TransferBatchEnforcer_exports", "encode_exports", "read_exports", "encode", "simulate", "abi", "execute", "DelegationManager", "simulateContract", "writeContract", "encodeFunctionData", "read", "readContract", "execute_exports", "simulate_exports", "ERC20TransferAmountEnforcer", "constants_exports", "HybridDeleGator", "DOMAIN_VERSION", "NAME", "VERSION", "id", "IdEnforcer", "LimitedCallsEnforcer", "MultiSigDeleGator", "NativeTokenTransferAmountEnforcer", "nonce", "NonceEnforcer", "Ownable2Step", "SpecificActionERC20TransferBatchEnforcer"]
}
